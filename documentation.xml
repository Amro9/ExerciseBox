<?xml version="1.0"?>
<doc>
    <assembly>
        <name>exerciseBox.Application</name>
    </assembly>
    <members>
        <member name="T:exerciseBox.Application.Abtraction.DependencyInjection">
            <summary>
            Statische Klasse zur Konfiguration der Anwendungsdienste.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.DependencyInjection.AddApplictaionConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Fügt die Anwendungskonfiguration zu den Diensten hinzu.
            </summary>
            <param name="services">Die Sammlung der Dienste.</param>
            <returns>Die aktualisierte Sammlung der Dienste.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Extensions.DifficultyLevelMappingExtension">
            <summary>
            Erweiterungsmethoden für die Zuordnung von Schwierigkeitsgraden zwischen der Domäne (DB) und den DTOs.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.DifficultyLevelMappingExtension.MapToDifficultyLevelDto(System.Collections.Generic.IEnumerable{exerciseBox.Domain.Entities.QuestionDifficultyLevels})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.QuestionDifficultyLevels"/> zu einer Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.DifficultyLevelDto"/>.
            </summary>
            <param name="difficultyLevels">Die Sammlung der <see cref="T:exerciseBox.Domain.Entities.QuestionDifficultyLevels"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.DifficultyLevelDto"/>.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.DifficultyLevelMappingExtension.MapToDomainDifficultyLevels(System.Collections.Generic.IEnumerable{exerciseBox.Application.Abtraction.Models.DifficultyLevelDto})">
            <summary>
            Mapped eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.DifficultyLevelDto"/> zu einer Sammlung von <see cref="T:exerciseBox.Domain.Entities.QuestionDifficultyLevels"/>.
            </summary>
            <param name="difficultyLevels">Die Sammlung der <see cref="T:exerciseBox.Application.Abtraction.Models.DifficultyLevelDto"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.QuestionDifficultyLevels"/>.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Extensions.QuestionMappingExtension">
            <summary>
            Erweiterungsmethoden für die Zuordnung von Fragen zwischen der Domäne (DB) und den DTOs.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.QuestionMappingExtension.MapToQuestionDto(System.Collections.Generic.IEnumerable{exerciseBox.Domain.Entities.Questions})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.Questions"/> zu einer Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.QuestionDto"/>.
            </summary>
            <param name="questions">Die Sammlung der <see cref="T:exerciseBox.Domain.Entities.Questions"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.QuestionDto"/>.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.QuestionMappingExtension.MapToQuestions(System.Collections.Generic.IEnumerable{exerciseBox.Application.Abtraction.Models.QuestionDto})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.QuestionDto"/> zu einer Sammlung von <see cref="T:exerciseBox.Domain.Entities.Questions"/>.
            </summary>
            <param name="questionsDto">Die Sammlung der <see cref="T:exerciseBox.Application.Abtraction.Models.QuestionDto"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.Questions"/>.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Extensions.SchoolBranchesMappingExtension">
            <summary>
            Erweiterungsmethoden für die Zuordnung von Schulzweigen zwischen der Domäne (DB) und den DTOs.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.SchoolBranchesMappingExtension.MapToDto(System.Collections.Generic.IEnumerable{exerciseBox.Domain.Entities.SchoolBranches})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.SchoolBranches"/> zu einer Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.SchoolBrancheDto"/>.
            </summary>
            <param name="schoolBranches">Die Sammlung der <see cref="T:exerciseBox.Domain.Entities.SchoolBranches"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.SchoolBrancheDto"/>.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.SchoolBranchesMappingExtension.MapToEntity(System.Collections.Generic.IEnumerable{exerciseBox.Application.Abtraction.Models.SchoolBrancheDto})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.SchoolBrancheDto"/> zu einer Sammlung von <see cref="T:exerciseBox.Domain.Entities.SchoolBranches"/>.
            </summary>
            <param name="schoolBranches">Die Sammlung der <see cref="T:exerciseBox.Application.Abtraction.Models.SchoolBrancheDto"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.SchoolBranches"/>.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Extensions.SchoolMappingExtension">
            <summary>
            Erweiterungsmethoden für die Zuordnung von Schulen zwischen der Domäne (DB) und den DTOs.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.SchoolMappingExtension.MapToSchoolDto(System.Collections.Generic.IEnumerable{exerciseBox.Domain.Entities.Schools})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.Schools"/> zu einer Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.SchoolDto"/>.
            </summary>
            <param name="schools">Die Sammlung der <see cref="T:exerciseBox.Domain.Entities.Schools"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.SchoolDto"/>.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.SchoolMappingExtension.MapToDomainSchools(System.Collections.Generic.IEnumerable{exerciseBox.Application.Abtraction.Models.SchoolDto})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.SchoolDto"/> zu einer Sammlung von <see cref="T:exerciseBox.Domain.Entities.Schools"/>.
            </summary>
            <param name="schools">Die Sammlung der <see cref="T:exerciseBox.Application.Abtraction.Models.SchoolDto"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.Schools"/>.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Extensions.SchoolTypesMappingExtension">
            <summary>
            Erweiterungsmethoden für die Zuordnung von Schultypen zwischen der Domäne (DB) und den DTOs.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.SchoolTypesMappingExtension.MapToSchoolTypeDtos(System.Collections.Generic.IEnumerable{exerciseBox.Domain.Entities.SchoolTypes})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.SchoolTypes"/> zu einer Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.SchoolTypeDto"/>.
            </summary>
            <param name="schoolTypes">Die Sammlung der <see cref="T:exerciseBox.Domain.Entities.SchoolTypes"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.SchoolTypeDto"/>.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.SchoolTypesMappingExtension.MapToSchoolTypes(System.Collections.Generic.IEnumerable{exerciseBox.Application.Abtraction.Models.SchoolTypeDto})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.SchoolTypeDto"/> zu einer Sammlung von <see cref="T:exerciseBox.Domain.Entities.SchoolTypes"/>.
            </summary>
            <param name="schoolTypeDtos">Die Sammlung der <see cref="T:exerciseBox.Application.Abtraction.Models.SchoolTypeDto"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.SchoolTypes"/>.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Extensions.StringHashingExtension">
            <summary>
            Erweiterungsmethoden für das Hashen und Überprüfen von Passwörtern.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.StringHashingExtension.HashPassword(System.String)">
            <summary>
            Hasht das angegebene Passwort mit SHA-256.
            </summary>
            <param name="password">Das zu hashende Passwort.</param>
            <returns>Der gehashte Wert als Hexadezimalzeichenfolge.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.StringHashingExtension.VerifyPassword(System.String,System.String)">
            <summary>
            Überprüft, ob das angegebene Passwort mit dem gegebenen Hash übereinstimmt.
            </summary>
            <param name="password">Das zu überprüfende Passwort.</param>
            <param name="hash">Der zu vergleichende Hash-Wert.</param>
            <returns>True, wenn das Passwort übereinstimmt; andernfalls false.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Extensions.SubjectMappingExtention">
            <summary>
            Erweiterungsmethoden für die Zuordnung von Fächern zwischen der Domäne (DB) und den DTOs.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.SubjectMappingExtention.MapToSubjectDto(System.Collections.Generic.IEnumerable{exerciseBox.Domain.Entities.Subjects})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.Subjects"/> zu einer Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.SubjectDto"/>.
            </summary>
            <param name="subjects">Die Sammlung der <see cref="T:exerciseBox.Domain.Entities.Subjects"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.SubjectDto"/>.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.SubjectMappingExtention.MapToDomainSubjects(System.Collections.Generic.IEnumerable{exerciseBox.Application.Abtraction.Models.SubjectDto})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.SubjectDto"/> zu einer Sammlung von <see cref="T:exerciseBox.Domain.Entities.Subjects"/>.
            </summary>
            <param name="subjects">Die Sammlung der <see cref="T:exerciseBox.Application.Abtraction.Models.SubjectDto"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.Subjects"/>.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Extensions.TeacherMappingExtension">
            <summary>
            Erweiterungsmethoden für die Zuordnung von Lehrern zwischen der Domäne (DB) und den DTOs.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.TeacherMappingExtension.MapToTeacherDto(System.Collections.Generic.IEnumerable{exerciseBox.Domain.Entities.Teachers})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.Teachers"/> zu einer Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.TeacherDto"/>.
            </summary>
            <param name="teachers">Die Sammlung der <see cref="T:exerciseBox.Domain.Entities.Teachers"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.TeacherDto"/>.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.TeacherMappingExtension.MapToDomainTeachers(System.Collections.Generic.IEnumerable{exerciseBox.Application.Abtraction.Models.TeacherDto})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.TeacherDto"/> zu einer Sammlung von <see cref="T:exerciseBox.Domain.Entities.Teachers"/>.
            </summary>
            <param name="teachers">Die Sammlung der <see cref="T:exerciseBox.Application.Abtraction.Models.TeacherDto"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.Teachers"/>.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Extensions.TopicMappingExtension">
            <summary>
            Erweiterungsmethoden für die Zuordnung von Themen zwischen der Domäne (DB) und den DTOs.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.TopicMappingExtension.MapToTopicDto(System.Collections.Generic.IEnumerable{exerciseBox.Domain.Entities.Topics})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.Topics"/> zu einer Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.TopicDto"/>.
            </summary>
            <param name="topics">Die Sammlung der <see cref="T:exerciseBox.Domain.Entities.Topics"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.TopicDto"/>.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Extensions.TopicMappingExtension.MapToDomainTopics(System.Collections.Generic.IEnumerable{exerciseBox.Application.Abtraction.Models.TopicDto})">
            <summary>
            Mappt eine Sammlung von <see cref="T:exerciseBox.Application.Abtraction.Models.TopicDto"/> zu einer Sammlung von <see cref="T:exerciseBox.Domain.Entities.Topics"/>.
            </summary>
            <param name="topics">Die Sammlung der <see cref="T:exerciseBox.Application.Abtraction.Models.TopicDto"/>.</param>
            <returns>Eine Sammlung von <see cref="T:exerciseBox.Domain.Entities.Topics"/>.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Models.DifficultyLevelDto">
            <summary>
            Datenübertragungsobjekt für Schwierigkeitsgrade.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.DifficultyLevelDto.Id">
            <summary>
            Ruft die ID des Schwierigkeitsgrads ab oder legt diese fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.DifficultyLevelDto.Description">
            <summary>
            Ruft die Beschreibung des Schwierigkeitsgrads ab oder legt diese fest.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Models.QuestionDto">
            <summary>
            Datenübertragungsobjekt für Fragen.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.QuestionDto.Id">
            <summary>
            Ruft die ID der Frage ab oder legt diese fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.QuestionDto.Author">
            <summary>
            Ruft den Autor der Frage ab oder legt diesen fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.QuestionDto.QuestionText">
            <summary>
            Ruft den Text der Frage ab oder legt diesen fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.QuestionDto.Answer">
            <summary>
            Ruft die Antwort auf die Frage ab oder legt diese fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.QuestionDto.SchoolLevel">
            <summary>
            Ruft die Schulstufe der Frage ab oder legt diese fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.QuestionDto.DifficultyLevel">
            <summary>
            Ruft den Schwierigkeitsgrad der Frage ab oder legt diesen fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.QuestionDto.DifficultyLevelDto">
            <summary>
            Ruft das Fach der Frage ab oder legt dieses fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.QuestionDto.Topic">
            <summary>
            Ruft das Thema der Frage ab oder legt dieses fest.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.QuestionDto.#ctor">
            <summary>
            Konstruktor für das QuestionDto, der eine neue ID generiert.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.QuestionDto.op_Implicit(exerciseBox.Domain.Entities.Questions)~exerciseBox.Application.Abtraction.Models.QuestionDto">
            <summary>
            Konvertiert ein Questions-Objekt implizit in ein QuestionDto-Objekt.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.QuestionDto.op_Implicit(exerciseBox.Application.Abtraction.Models.QuestionDto)~exerciseBox.Domain.Entities.Questions">
            <summary>
            Konvertiert ein QuestionDto-Objekt implizit in ein Questions-Objekt.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Models.SchoolBrancheDto">
            <summary>
            Datenübertragungsobjekt für Schulfächer.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.SchoolBrancheDto.Id">
            <summary>
            Ruft die ID des Schulfachs ab oder legt diese fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.SchoolBrancheDto.Name">
            <summary>
            Ruft den Namen des Schulfachs ab oder legt diesen fest.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.SchoolBrancheDto.op_Implicit(exerciseBox.Domain.Entities.SchoolBranches)~exerciseBox.Application.Abtraction.Models.SchoolBrancheDto">
            <summary>
            Konvertiert ein SchoolBranches-Objekt implizit in ein SchoolBrancheDto-Objekt.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.SchoolBrancheDto.op_Implicit(exerciseBox.Application.Abtraction.Models.SchoolBrancheDto)~exerciseBox.Domain.Entities.SchoolBranches">
            <summary>
            Konvertiert ein SchoolBrancheDto-Objekt implizit in ein SchoolBranches-Objekt.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Models.SchoolDto">
            <summary>
            Datenübertragungsobjekt für Schulen.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.SchoolDto.SchoolType">
            <summary>
            Ruft den Schultyp ab oder legt diesen fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.SchoolDto.Email">
            <summary>
            Ruft die E-Mail-Adresse der Schule ab oder legt diese fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.SchoolDto.Name">
            <summary>
            Ruft den Namen der Schule ab oder legt diesen fest.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.SchoolDto.op_Implicit(exerciseBox.Domain.Entities.Schools)~exerciseBox.Application.Abtraction.Models.SchoolDto">
            <summary>
            Konvertiert ein Schools-Objekt implizit in ein SchoolDto-Objekt.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.SchoolDto.op_Implicit(exerciseBox.Application.Abtraction.Models.SchoolDto)~exerciseBox.Domain.Entities.Schools">
            <summary>
            Konvertiert ein SchoolDto-Objekt implizit in ein Schools-Objekt.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Models.SchoolTypeDto">
            <summary>
            Datenübertragungsobjekt für Schultypen.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.SchoolTypeDto.Id">
            <summary>
            Ruft die ID des Schultyps ab oder legt diese fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.SchoolTypeDto.Description">
            <summary>
            Ruft die Beschreibung des Schultyps ab oder legt diese fest.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.SchoolTypeDto.op_Implicit(exerciseBox.Domain.Entities.SchoolTypes)~exerciseBox.Application.Abtraction.Models.SchoolTypeDto">
            <summary>
            Konvertiert ein SchoolTypes-Objekt implizit in ein SchoolTypeDto-Objekt.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.SchoolTypeDto.op_Implicit(exerciseBox.Application.Abtraction.Models.SchoolTypeDto)~exerciseBox.Domain.Entities.SchoolTypes">
            <summary>
            Konvertiert ein SchoolTypeDto-Objekt implizit in ein SchoolTypes-Objekt.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Models.SubjectDto">
            <summary>
            Datenübertragungsobjekt für Fächer.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.SubjectDto.Id">
            <summary>
            Ruft die ID des Fachs ab oder legt diese fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.SubjectDto.Name">
            <summary>
            Ruft den Namen des Fachs ab oder legt diesen fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.SubjectDto.Shortcut">
            <summary>
            Ruft die Abkürzung des Fachs ab oder legt diese fest.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.SubjectDto.op_Implicit(exerciseBox.Domain.Entities.Subjects)~exerciseBox.Application.Abtraction.Models.SubjectDto">
            <summary>
            Konvertiert ein Subjects-Objekt implizit in ein SubjectDto-Objekt.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.SubjectDto.op_Implicit(exerciseBox.Application.Abtraction.Models.SubjectDto)~exerciseBox.Domain.Entities.Subjects">
            <summary>
            Konvertiert ein SubjectDto-Objekt implizit in ein Subjects-Objekt.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Models.TeacherDto">
            <summary>
            Datenübertragungsobjekt für Lehrer.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.TeacherDto.Surname">
            <summary>
            Ruft den Nachnamen des Lehrers ab oder legt diesen fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.TeacherDto.Givenname">
            <summary>
            Ruft den Vornamen des Lehrers ab oder legt diesen fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.TeacherDto.Email">
            <summary>
            Ruft die E-Mail-Adresse des Lehrers ab oder legt diese fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.TeacherDto.SchoolId">
            <summary>
            Ruft die ID der Schule ab oder legt diese fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.TeacherDto.Password">
            <summary>
            Ruft das Passwort des Lehrers ab oder legt dieses fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.TeacherDto.School">
            <summary>
            Ruft die Schule des Lehrers ab oder legt diese fest.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.TeacherDto.op_Implicit(exerciseBox.Domain.Entities.Teachers)~exerciseBox.Application.Abtraction.Models.TeacherDto">
            <summary>
            Konvertiert ein Teachers-Objekt implizit in ein TeacherDto-Objekt.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.TeacherDto.op_Implicit(exerciseBox.Application.Abtraction.Models.TeacherDto)~exerciseBox.Domain.Entities.Teachers">
            <summary>
            Konvertiert ein TeacherDto-Objekt implizit in ein Teachers-Objekt.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Models.TopicDto">
            <summary>
            Datenübertragungsobjekt für Themen.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.TopicDto.Id">
            <summary>
            Ruft die ID des Themas ab oder legt diese fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.TopicDto.Description">
            <summary>
            Ruft die Beschreibung des Themas ab oder legt diese fest.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.Abtraction.Models.TopicDto.Subject">
            <summary>
            Ruft das Fach des Themas ab oder legt dieses fest.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.TopicDto.op_Implicit(exerciseBox.Domain.Entities.Topics)~exerciseBox.Application.Abtraction.Models.TopicDto">
            <summary>
            Konvertiert ein Topics-Objekt implizit in ein TopicDto-Objekt.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Models.TopicDto.op_Implicit(exerciseBox.Application.Abtraction.Models.TopicDto)~exerciseBox.Domain.Entities.Topics">
            <summary>
            Konvertiert ein TopicDto-Objekt implizit in ein Topics-Objekt.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Repositories.IRepository`2">
            <summary>
            Definiert eine generische Schnittstelle für ein Repository.
            </summary>
            <typeparam name="T">Der Typ der Entitäten, die von diesem Repository verwaltet werden.</typeparam>
            <typeparam name="A">Der Typ der ID, die von den Entitäten in diesem Repository verwendet wird.</typeparam>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Repositories.IRepository`2.ReadAsync">
            <summary>
            Liest alle Entitäten.
            </summary>
            <returns>Eine Aufgabe, die eine Auflistung aller Entitäten darstellt.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Repositories.IRepository`2.ReadByIdAsync(`1)">
            <summary>
            Liest eine Entität anhand ihrer ID.
            </summary>
            <param name="id">Die ID der zu lesenden Entität.</param>
            <returns>Eine Aufgabe, die die gelesene Entität darstellt.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Repositories.IRepository`2.CreateAsync(`0)">
            <summary>
            Erstellt eine neue Entität.
            </summary>
            <param name="entity">Die zu erstellende Entität.</param>
            <returns>Eine Aufgabe, die die erstellte Entität darstellt.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Repositories.IRepository`2.UpdateAsync(`0)">
            <summary>
            Aktualisiert eine bestehende Entität.
            </summary>
            <param name="entity">Die zu aktualisierende Entität.</param>
            <returns>Eine Aufgabe, die die aktualisierte Entität darstellt.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Repositories.IRepository`2.DeleteAsync(`0)">
            <summary>
            Löscht eine bestehende Entität.
            </summary>
            <param name="entity">Die zu löschende Entität.</param>
            <returns>Eine Aufgabe, die die gelöschte Entität darstellt.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Repositories.ISchoolBranchesRepository">
            <summary>
            Schnittstelle für das School Branches Repository.
            Erbt von IRepository mit SchoolBranches als Entitätstyp und Integer als Schlüsseltyp.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Repositories.ISchoolLevelRepository">
            <summary>
            Schnittstelle für das School Level Repository.
            Erbt von IRepository mit Integer-Typen für Schlüssel und Wert.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Repositories.ISchoolLevelRepository.ReadByTeacherId(System.String)">
            <summary>
            Liest asynchron die Schulstufen anhand der gegebenen Lehrer-ID.
            </summary>
            <param name="teacherId">Die ID des Lehrers.</param>
            <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt. Das Ergebnis der Aufgabe enthält eine aufzählbare Sammlung von Ganzzahlen, die die Schulstufen darstellen.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Repositories.ISchoolRepository">
            <summary>
            Schnittstelle für das School Repository.
            Erbt von IRepository mit Schools als Entitätstyp und String als Schlüsseltyp.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Repositories.ISchoolRepository.ReadByEmail(System.String)">
            <summary>
            Liest asynchron die Schule anhand der gegebenen E-Mail.
            </summary>
            <param name="email">Die E-Mail, um die Schule zu lesen.</param>
            <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt. Das Ergebnis der Aufgabe ist die Schule.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Repositories.ISchoolTypeRepository">
            <summary>
            Schnittstelle für das School Type Repository.
            Erbt von IRepository mit SchoolTypes als Entitätstyp und Guid als Schlüsseltyp.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Repositories.ISubjectRepository">
            <summary>
            Schnittstelle für das Subject Repository.
            Erbt von IRepository mit Subjects als Entitätstyp und Guid als Schlüsseltyp.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Repositories.ITeacherRepository">
            <summary>
            Schnittstelle für das Teacher Repository.
            Erbt von IRepository mit Teachers als Entitätstyp und String als Schlüsseltyp.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Repositories.ITeacherRepository.ReadByEmailAsync(System.String)">
            <summary>
            Liest asynchron den Lehrer anhand der gegebenen E-Mail.
            </summary>
            <param name="email">Die E-Mail, um den Lehrer zu lesen.</param>
            <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt. Das Ergebnis der Aufgabe ist der Lehrer.</returns>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Repositories.ITeacherRepository.ReadBySchoolIdAsync(System.String)">
            <summary>
            Liest asynchron die Lehrer anhand der gegebenen Schul-ID.
            </summary>
            <param name="schoolId">Die ID der Schule, um die Lehrer zu lesen.</param>
            <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt. Das Ergebnis der Aufgabe ist eine Auflistung von Lehrern.</returns>
        </member>
        <member name="T:exerciseBox.Application.Abtraction.Repositories.ITopicRepository">
            <summary>
            Schnittstelle für das Topic Repository.
            Erbt von IRepository mit Topics als Entitätstyp und Guid als Schlüsseltyp.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Abtraction.Repositories.ITopicRepository.ReadBySubject(System.String)">
            <summary>
            Liest asynchron die Themen anhand des gegebenen Fachs.
            </summary>
            <param name="subject">Das Fach, um die Themen zu lesen.</param>
            <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt. Das Ergebnis der Aufgabe ist eine Auflistung von Themen.</returns>
        </member>
        <member name="T:exerciseBox.Application.Services.Interface.IExerciseSheetGenerator">
            <summary>
            Schnittstelle für den Exercise Sheet Generator.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.Services.Interface.IExerciseSheetGenerator.Generate(exerciseBox.Domain.Entities.ExerciseSheets,System.Collections.Generic.IEnumerable{exerciseBox.Domain.Entities.Questions})">
            <summary>
            Generiert ein Übungsblatt basierend auf dem gegebenen Übungsblatt und einer Sammlung von Fragen.
            </summary>
            <param name="exerciseSheet">Das Übungsblatt, das generiert werden soll.</param>
            <param name="questions">Die Sammlung von Fragen, die in das Übungsblatt aufgenommen werden sollen.</param>
            <returns>Ein Byte-Array, das das generierte Übungsblatt repräsentiert.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:exerciseBox.Application.UseCases.Folder.CommandHanderls.AddQuestiontoCreationFolderHandler" -->
        <member name="M:exerciseBox.Application.UseCases.Folder.CommandHanderls.AddQuestiontoCreationFolderHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.IFolderRepository,exerciseBox.Application.Abtraction.Repositories.ITopicRepository,exerciseBox.Application.Abtraction.Repositories.IQuestionRepository)">
            <summary>
            Konstruktor für den AddQuestiontoCreationFolderHandler.
            </summary>
            <param name="folderRepository"></param>
            <param name="topicRepository"></param>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Folder.Commands.AddQuestionToCreationFolder">
            <summary>
            Command zum Hinzufügen einer Frage zu einem Creation Ordner eines Faches.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Folder.Queries.GetCreationFolder">
            <summary>
            Befehl zum hollen des Ordner mit den erstellten Fragen eines Faches.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Folder.QueryHandlers.GetCreationFolderHandler">
            <summary>
            Command-Handler zur Behandlung des Befehls zum hollen des Ordner mit den erstellten Fragen eines Faches.
            </summary>  
        </member>
        <member name="M:exerciseBox.Application.UseCases.Folder.QueryHandlers.GetCreationFolderHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.IFolderRepository)">
            <summary>
            Konstruktor für den GetOrCreateCreationFolderHandler.
            </summary>
            <param name="folderRepository">Das Repository, das für die Datenbankoperationen mit Ordnern verwendet wird.</param>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Questions.QueriesHandlers.GetAllPublicQuestionsHandler">
            <summary>
            Handler für die Anforderung, alle öffentlichen Fragen abzurufen.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Questions.QueriesHandlers.GetAllPublicQuestionsHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.IQuestionRepository)">
            <summary>
            Konstruktor für den Handler zur Abfrage aller öffentlichen Fragen.
            </summary>
            <param name="questionRepository">Das Repository für Fragen.</param>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Questions.QueriesHandlers.GetAllPublicQuestionsHandler.Handle(exerciseBox.Application.UseCases.Questions.Queries.GetAllPublicQuestions,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet die Anforderung, alle öffentlichen Fragen abzurufen.
            </summary>
            <param name="request">Die Anforderung, die keine spezifischen Parameter erfordert.</param>
            <param name="cancellationToken">Das Abbruchtoken zum Abbrechen des Vorgangs.</param>
            <returns>Eine Aufzählung von Frage-DTOs, die auf die Anforderung abgestimmt sind.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Questions.QueriesHandlers.GetFolderQuestionsHandler">
            <summary>
            Handler für die Anforderung, Fragen in einem bestimmten Ordner abzurufen.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Questions.QueriesHandlers.GetFolderQuestionsHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.IQuestionRepository)">
            <summary>
            Konstruktor für den Handler zur Abfrage von Fragen in einem bestimmten Ordner.
            </summary>
            <param name="questionRepository">Das Repository für Fragen.</param>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Questions.QueriesHandlers.GetFolderQuestionsHandler.Handle(exerciseBox.Application.UseCases.Questions.Queries.GetFolderQuestions,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet die Anforderung, Fragen in einem bestimmten Ordner abzurufen.
            </summary>
            <param name="request">Die Anforderung, die den Ordner-ID enthält.</param>
            <param name="cancellationToken">Das Abbruchtoken zum Abbrechen des Vorgangs.</param>
            <returns>Eine Aufzählung von Frage-DTOs, die auf die Anforderung abgestimmt sind.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Questions.QueriesHandlers.GetPublicQuestionsBySubjectHandler">
            <summary>
            Handler für die Anforderung, öffentliche Fragen nach einem bestimmten Fach zu erhalten.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Questions.QueriesHandlers.GetPublicQuestionsBySubjectHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.IQuestionRepository)">
            <summary>
            Konstruktor für den Handler zur Abfrage öffentlicher Fragen nach einem bestimmten Fach.
            </summary>
            <param name="questionRepository">Das Repository für Fragen.</param>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Questions.QueriesHandlers.GetPublicQuestionsBySubjectHandler.Handle(exerciseBox.Application.UseCases.Questions.Queries.GetPublicQuestionsBySubject,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet die Anforderung, öffentliche Fragen nach einem bestimmten Fach zu erhalten.
            </summary>
            <param name="request">Die Anforderung, die das Fach enthält, nach dem gefragt wird.</param>
            <param name="cancellationToken">Das Abbruchtoken zum Abbrechen des Vorgangs.</param>
            <returns>Eine Aufzählung von Frage-DTOs, die auf die Anforderung abgestimmt sind.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.SchoolBranche.QueriesHandlers.GetAllSchoolBranchesHandler">
            <summary>
            Handler zur Bearbeitung der Abfrage aller Schulzweige.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.SchoolBranche.QueriesHandlers.GetAllSchoolBranchesHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.ISchoolBranchesRepository)">
            <summary>
            Konstruktor für die Initialisierung eines neuen Handlers zur Abfrage aller Schulzweige.
            </summary>
            <param name="schoolBranchesRepository">Das Repository für Schulzweige.</param>
        </member>
        <member name="M:exerciseBox.Application.UseCases.SchoolBranche.QueriesHandlers.GetAllSchoolBranchesHandler.Handle(exerciseBox.Application.UseCases.SchoolBranche.Queries.GetAllSchoolBranches,System.Threading.CancellationToken)">
            <summary>
            Behandelt die Abfrage nach allen Schulzweigen.
            </summary>
            <param name="request">Die Abfrage zur Abfrage aller Schulzweige.</param>
            <param name="cancellationToken">Das Token zur Anforderungsabbruchüberwachung.</param>
            <returns>Eine Auflistung von DTOs der abgerufenen Schulzweige.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.SchoolBranche.Queries.GetAllSchoolBranches">
            <summary>
            Eine Anforderungsklasse zur Abfrage aller Schulzweige.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.SchoolBranche.Queries.GetAllSchoolBranches.#ctor">
            <summary>
            Konstruktor für die Anforderung zur Abfrage aller Schulzweige.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.SchoolLevels.QueriesHandlers.GetAllSchoolLevelBySchoolTypeIdHandler">
            <summary>
            Handler zur Abfrage aller Schulstufen anhand eines Schultyps.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.SchoolLevels.QueriesHandlers.GetAllSchoolLevelBySchoolTypeIdHandler.Handle(exerciseBox.Application.UseCases.SchoolLevels.Queries.GetSchoolLevelsBySchoolTypeId,System.Threading.CancellationToken)">
            <summary>
            Behandelt den Query zur Abfrage aller Schulstufen anhand eines Schultyps.
            </summary>
            <param name="request">Der Query zur Abfrage aller Schulstufen anhand eines Schultyps.</param>
            <param name="cancellationToken">Das Token zur Abbruchanforderung.</param>
            <returns>Eine Liste von Schulstufen-IDs.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.SchoolLevels.QueriesHandlers.GetAllSchoolLevelsHandler">
            <summary>
            Handler zur Abfrage aller Schulstufen.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.SchoolLevels.QueriesHandlers.GetAllSchoolLevelsHandler.Handle(exerciseBox.Application.UseCases.SchoolLevels.Queries.GetAllSchoolLevels,System.Threading.CancellationToken)">
            <summary>
            Behandelt den Query zur Abfrage aller Schulstufen.
            </summary>
            <param name="request">Der Query zur Abfrage aller Schulstufen.</param>
            <param name="cancellationToken">Das Token zur Abbruchanforderung.</param>
            <returns>Eine Liste von Schulstufen-IDs.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.SchoolLevels.QueriesHandlers.GetSchoolLevelByTeacherIdHandler">
            <summary>
            Handler zur Abfrage der Schulstufen anhand der Lehrer-ID.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.SchoolLevels.QueriesHandlers.GetSchoolLevelByTeacherIdHandler.Handle(exerciseBox.Application.UseCases.SchoolLevels.Queries.GetSchoolLevelsByTeacherId,System.Threading.CancellationToken)">
            <summary>
            Behandelt den Query zur Abfrage der Schulstufen anhand der Lehrer-ID.
            </summary>
            <param name="request">Der Query zur Abfrage der Schulstufen.</param>
            <param name="cancellationToken">Das Token zur Abbruchanforderung.</param>
            <returns>Eine Liste von Schulstufen-IDs.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.SchoolLevels.Queries.GetAllSchoolLevels">
            <summary>
            Query zur Abfrage aller Schulstufen.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.SchoolLevels.Queries.GetAllSchoolLevels.#ctor">
            <summary>
            Konstruktor für die Initialisierung eines neuen Objekts der Klasse GetAllSchoolLevels.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.SchoolLevels.Queries.GetSchoolLevelsBySchoolTypeId">
            <summary>
            Query zur Abfrage der Schulstufen anhand der Schultyp-ID.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.UseCases.SchoolLevels.Queries.GetSchoolLevelsBySchoolTypeId.SchoolTypeId">
            <summary>
            Die ID des Schultyps, für den die Schulstufen abgefragt werden sollen.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.SchoolLevels.Queries.GetSchoolLevelsBySchoolTypeId.#ctor(System.Int32)">
            <summary>
            Konstruktor für die Initialisierung der Schultyp-ID.
            </summary>
            <param name="schoolTypeId">Die ID des Schultyps.</param>
        </member>
        <member name="T:exerciseBox.Application.UseCases.SchoolLevels.Queries.GetSchoolLevelsByTeacherId">
            <summary>
            Query zur Abfrage der Schulstufen anhand der Lehrer-ID.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.UseCases.SchoolLevels.Queries.GetSchoolLevelsByTeacherId.TeacherId">
            <summary>
            Die ID des Lehrers, für den die Schulstufen abgefragt werden sollen.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.SchoolLevels.Queries.GetSchoolLevelsByTeacherId.#ctor(System.String)">
            <summary>
            Konstruktor für die Initialisierung der Lehrer-ID.
            </summary>
            <param name="teacherId">Die ID des Lehrers.</param>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Schools.CommandHandlers.CreateSchoolHandler">
            <summary>
            Handler für den Befehl zur Erstellung einer neuen Schule.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Schools.CommandHandlers.CreateSchoolHandler.Handle(exerciseBox.Application.UseCases.Schools.Commands.CreateSchool,System.Threading.CancellationToken)">
            <summary>
            Behandelt den Befehl zur Erstellung einer neuen Schule.
            </summary>
            <param name="request">Der Befehl zur Erstellung der Schule.</param>
            <param name="cancellationToken">Das Token zur Abbruchanforderung.</param>
            <returns>Die erstellte Schule als Data Transfer Object (DTO).</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Schools.Commands.CreateSchool">
            <summary>
            Command zum Erstellen einer neuen Schule.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.UseCases.Schools.Commands.CreateSchool.School">
            <summary>
            Die Informationen zur zu erstellenden Schule.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Schools.Queries.GetAllSchools">
            <summary>
            Query zur Abfrage aller Schulen.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Schools.Queries.GetSchoolByEmail">
            <summary>
            Query zur Abfrage einer Schule anhand ihrer E-Mail-Adresse.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.UseCases.Schools.Queries.GetSchoolByEmail.Email">
            <summary>
            Die E-Mail-Adresse der abzufragenden Schule.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Schools.Queries.GetSchoolById">
            <summary>
            Query zur Abfrage einer Schule anhand ihrer E-Mail-Adresse.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.UseCases.Schools.Queries.GetSchoolById.Email">
            <summary>
            Die E-Mail-Adresse der abzufragenden Schule.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Schools.Queries.GetSchoolWithPasswordValidation">
            <summary>
            Query zur Validierung einer Schule anhand ihrer E-Mail-Adresse und Passwort.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.UseCases.Schools.Queries.GetSchoolWithPasswordValidation.Email">
            <summary>
            Die E-Mail-Adresse der Schule.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.UseCases.Schools.Queries.GetSchoolWithPasswordValidation.Password">
            <summary>
            Das Passwort der Schule.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Schools.QueryHandlers.GetAllSchoolHandler">
            <summary>
            Handler zur Abfrage aller Schulen.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Schools.QueryHandlers.GetAllSchoolHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.ISchoolRepository)">
            <summary>
            Konstruktor für den GetAllSchoolHandler.
            </summary>
            <param name="schoolRepository">Das Repository, das für die Datenbankoperationen mit Schulen verwendet wird.</param>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Schools.QueryHandlers.GetAllSchoolHandler.Handle(exerciseBox.Application.UseCases.Schools.Queries.GetAllSchools,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet den Query zur Abfrage aller Schulen.
            </summary>
            <param name="request">Der Query zur Abfrage aller Schulen.</param>
            <param name="cancellationToken">Das Abbruchtoken.</param>
            <returns>Eine Liste von SchoolDto-Objekten, die alle abgefragten Schulen darstellen.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Schools.QueryHandlers.GetSchoolByEmailHandler">
            <summary>
            Handler zur Abfrage einer Schule anhand ihrer E-Mail-Adresse.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Schools.QueryHandlers.GetSchoolByEmailHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.ISchoolRepository)">
            <summary>
            Konstruktor für den GetSchoolByEmailHandler.
            </summary>
            <param name="schoolRepository">Das Repository, das für die Datenbankoperationen mit Schulen verwendet wird.</param>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Schools.QueryHandlers.GetSchoolByEmailHandler.Handle(exerciseBox.Application.UseCases.Schools.Queries.GetSchoolByEmail,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet den Query zur Abfrage einer Schule anhand ihrer E-Mail-Adresse.
            </summary>
            <param name="request">Der Query zur Abfrage der Schule.</param>
            <param name="cancellationToken">Das Abbruchtoken.</param>
            <returns>Das SchoolDto-Objekt der abgefragten Schule oder null, falls die Schule nicht gefunden wurde.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Schools.QueryHandlers.GetSchoolByIdHandler">
            <summary>
            Handler zur Abfrage einer Schule anhand ihrer ID.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Schools.QueryHandlers.GetSchoolByIdHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.ISchoolRepository)">
            <summary>
            Konstruktor für den GetSchoolByIdHandler.
            </summary>
            <param name="schoolRepository">Das Repository, das für die Datenbankoperationen mit Schulen verwendet wird.</param>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Schools.QueryHandlers.GetSchoolByIdHandler.Handle(exerciseBox.Application.UseCases.Schools.Queries.GetSchoolById,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet den Query zur Abfrage einer Schule anhand ihrer ID.
            </summary>
            <param name="request">Der Query zur Abfrage der Schule.</param>
            <param name="cancellationToken">Das Abbruchtoken.</param>
            <returns>Das SchoolDto-Objekt der abgefragten Schule oder null, falls die Schule nicht gefunden wurde.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Schools.QueryHandlers.GetSchoolWithPasswordValidationHandler">
            <summary>
            Handler zur Validierung von Schulen anhand der E-Mail-Adresse und des Passworts.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Schools.QueryHandlers.GetSchoolWithPasswordValidationHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.ISchoolRepository)">
            <summary>
            Konstruktor für den GetSchoolWithPasswordValidationHandler.
            </summary>
            <param name="schoolRepository">Das Repository, das für die Datenbankoperationen mit Schulen verwendet wird.</param>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Schools.QueryHandlers.GetSchoolWithPasswordValidationHandler.Handle(exerciseBox.Application.UseCases.Schools.Queries.GetSchoolWithPasswordValidation,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet den Query zur Validierung einer Schule anhand der E-Mail-Adresse und des Passworts.
            </summary>
            <param name="request">Der Query zur Validierung der Schule.</param>
            <param name="cancellationToken">Das Abbruchtoken.</param>
            <returns>Das SchoolDto-Objekt der validierten Schule oder null, falls die Schule nicht gefunden wurde oder das Passwort ungültig ist.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.SchoolTypes.QueriesHandler.GetAllSchoolTypeHandler">
            <summary>
            Query-Handler zur Abfrage aller Schularten.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.SchoolTypes.QueriesHandler.GetAllSchoolTypeHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.ISchoolTypeRepository)">
            <summary>
            Konstruktor für den GetAllSchoolTypeHandler.
            </summary>
            <param name="schoolTypeRepository">Das Repository, das für die Datenbankoperationen mit Schularten verwendet wird.</param>
        </member>
        <member name="M:exerciseBox.Application.UseCases.SchoolTypes.QueriesHandler.GetAllSchoolTypeHandler.Handle(exerciseBox.Application.UseCases.SchoolTypes.Queries.GetAllSchoolTypes,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet den Query zur Abfrage aller Schularten.
            </summary>
            <param name="request">Der Query zur Abfrage aller Schularten.</param>
            <param name="cancellationToken">Das Abbruchtoken.</param>
            <returns>Eine Liste von SchoolTypeDto-Objekten, die die abgefragten Schularten darstellen.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.SchoolTypes.Queries.GetAllSchoolTypes">
            <summary>
            Anfrageklasse zur Abfrage aller Schularten.
            Implementiert das MediatR IRequest-Interface und gibt eine Liste von SchoolTypeDto-Objekten zurück.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Subject.QueriesHandlers.GetTeachersSubjectsHandler">
            <summary>
            Query-Handler zur Abfrage der Fächer eines Lehrers.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Subject.QueriesHandlers.GetTeachersSubjectsHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.ISubjectRepository)">
            <summary>
            Konstruktor für den GetTeachersSubjectsHandler.
            </summary>
            <param name="subjectRepository">Das Repository, das für die Datenbankoperationen mit Fächern verwendet wird.</param>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Subject.QueriesHandlers.GetTeachersSubjectsHandler.Handle(exerciseBox.Application.UseCases.Subject.Queries.GetTeachersSubjects,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet den Query zur Abfrage der Fächer eines Lehrers.
            </summary>
            <param name="request">Der Query zur Abfrage der Fächer eines Lehrers.</param>
            <param name="cancellationToken">Das Abbruchtoken.</param>
            <returns>Eine Liste von SubjectDto-Objekten, die die abgefragten Fächer darstellen.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Subject.Queries.GetAllSubjects">
            <summary>
            Anfrageklasse zur Abfrage aller Fächer.
            Implementiert das MediatR IRequest-Interface und gibt eine Liste von SubjectDto-Objekten zurück.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Subject.Queries.GetTeachersSubjects">
            <summary>
            Anfrageklasse zur Abfrage der Fächer eines Lehrers.
            Implementiert das MediatR IRequest-Interface und gibt eine Liste von SubjectDto-Objekten zurück.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.UseCases.Subject.Queries.GetTeachersSubjects.TeacherId">
            <summary>
            Die ID des Lehrers, für den die Fächer abgefragt werden sollen.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Teachers.CommandHandlers.CreateTeacherHandler">
            <summary>
            Command-Handler zur Behandlung des Befehls zur Erstellung eines neuen Lehrers.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Teachers.CommandHandlers.CreateTeacherHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.ITeacherRepository)">
            <summary>
            Konstruktor für den CreateTeacherHandler.
            </summary>
            <param name="teacherRepository">Das Repository, das für die Datenbankoperationen mit Lehrern verwendet wird.</param>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Teachers.CommandHandlers.CreateTeacherHandler.Handle(exerciseBox.Application.UseCases.Teachers.Commands.CreateTeacher,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet den Befehl zur Erstellung eines neuen Lehrers.
            </summary>
            <param name="request">Der Befehl zur Erstellung eines neuen Lehrers.</param>
            <param name="cancellationToken">Das Abbruchtoken.</param>
            <returns>Das erstellte Lehrer-Datenübertragungsobjekt (DTO).</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Teachers.Commands.CreateTeacher">
            <summary>
            Befehlsklasse zur Erstellung eines neuen Lehrers.
            Implementiert das MediatR IRequest-Interface und gibt ein TeacherDto zurück.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.UseCases.Teachers.Commands.CreateTeacher.Teacher">
            <summary>
            Das DTO-Objekt, das die Informationen des zu erstellenden Lehrers enthält.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Teachers.Queries.GetAllTeachers">
            <summary>
            Anfrageklasse zur Abfrage aller Lehrer.
            Implementiert das MediatR IRequest-Interface und gibt eine Liste von TeacherDto-Objekten zurück.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Teachers.QueryHandlers.GetAllTeachersHandler">
            <summary>
            Query-Handler zur Abfrage aller Lehrer.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Teachers.QueryHandlers.GetAllTeachersHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.ITeacherRepository)">
            <summary>
            Konstruktor für den GetAllTeachersHandler.
            </summary>
            <param name="teacherRepository">Das Repository, das für den Zugriff auf Lehrerdaten verwendet wird.</param>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Teachers.QueryHandlers.GetAllTeachersHandler.Handle(exerciseBox.Application.UseCases.Teachers.Queries.GetAllTeachers,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet die Anfrage zum Abrufen aller Lehrer.
            </summary>
            <param name="request">Die Anfrage zum Abrufen aller Lehrer (keine spezifischen Parameter).</param>
            <param name="cancellationToken">Das Abbruchtoken.</param>
            <returns>Eine Liste von Lehrer-Datenübertragungsobjekten (DTOs).</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Teacher.Queries.GetTeacherByEmail">
            <summary>
            Anfrageklasse zur Abfrage eines Lehrers anhand der E-Mail-Adresse.
            Implementiert das MediatR IRequest-Interface und gibt ein TeacherDto zurück.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.UseCases.Teacher.Queries.GetTeacherByEmail.Email">
            <summary>
            Die E-Mail-Adresse des Lehrers, nach der gesucht wird.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Teacher.Queries.GetTeachersBySchool">
            <summary>
            Anfrageklasse zur Abfrage von Lehrern anhand der Schul-ID.
            Implementiert das MediatR IRequest-Interface und gibt eine Liste von TeacherDto-Objekten zurück.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.UseCases.Teacher.Queries.GetTeachersBySchool.SchoolId">
            <summary>
            Die ID der Schule, für die die Lehrer abgefragt werden sollen.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Teacher.Queries.GetTeacherWithPasswordValidation">
            <summary>
            Anfrageklasse zur Validierung eines Lehrers anhand von E-Mail und Passwort.
            Implementiert das MediatR IRequest-Interface und gibt ein TeacherDto zurück.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.UseCases.Teacher.Queries.GetTeacherWithPasswordValidation.Email">
            <summary>
            Die E-Mail-Adresse des Lehrers zur Validierung.
            </summary>
        </member>
        <member name="P:exerciseBox.Application.UseCases.Teacher.Queries.GetTeacherWithPasswordValidation.Password">
            <summary>
            Das Passwort des Lehrers zur Validierung.
            </summary>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Teacher.QueryHandlers.GetTeacherByEmailHandler">
            <summary>
            Query-Handler zur Abfrage eines Lehrers anhand der E-Mail-Adresse.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Teacher.QueryHandlers.GetTeacherByEmailHandler.#ctor(exerciseBox.Application.Abtraction.Repositories.ITeacherRepository)">
            <summary>
            Konstruktor für den GetTeacherByEmailHandler.
            </summary>
            <param name="teacherRepository">Das Repository, das für den Zugriff auf Lehrerdaten verwendet wird.</param>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Teacher.QueryHandlers.GetTeacherByEmailHandler.Handle(exerciseBox.Application.UseCases.Teacher.Queries.GetTeacherByEmail,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet die Anfrage zum Abrufen eines Lehrers anhand der E-Mail-Adresse.
            </summary>
            <param name="request">Die Anfrage mit der E-Mail-Adresse des Lehrers.</param>
            <param name="cancellationToken">Das Abbruchtoken.</param>
            <returns>Ein Lehrer-Datenübertragungsobjekt (DTO) oder null, wenn kein Lehrer gefunden wurde.</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Teacher.QueryHandlers.GetTeachersBySchoolHandler">
            <summary>
            Query-Handler zur Abfrage von Lehrern anhand der Schul-ID.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Teacher.QueryHandlers.GetTeachersBySchoolHandler.Handle(exerciseBox.Application.UseCases.Teacher.Queries.GetTeachersBySchool,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet die Anfrage zum Abrufen von Lehrern anhand der Schul-ID.
            </summary>
            <param name="request">Die Anfrage mit der Schul-ID.</param>
            <param name="cancellationToken">Das Abbruchtoken.</param>
            <returns>Eine Liste von Lehrer-Datenübertragungsobjekten (DTOs).</returns>
        </member>
        <member name="T:exerciseBox.Application.UseCases.Teacher.QueryHandlers.GetTeacherWithPasswordValidationHandler">
            <summary>
            Query-Handler zur Validierung eines Lehrers anhand von E-Mail und Passwort.
            </summary>
        </member>
        <member name="M:exerciseBox.Application.UseCases.Teacher.QueryHandlers.GetTeacherWithPasswordValidationHandler.Handle(exerciseBox.Application.UseCases.Teacher.Queries.GetTeacherWithPasswordValidation,System.Threading.CancellationToken)">
            <summary>
            Verarbeitet die Anfrage zum Abrufen eines Lehrers anhand von E-Mail und Validierung des Passworts.
            </summary>
            <param name="request">Die Anfrage mit E-Mail und Passwort des Lehrers.</param>
            <param name="cancellationToken">Das Abbruchtoken.</param>
            <returns>Ein Lehrer-Datenübertragungsobjekt (DTO), wenn erfolgreich; andernfalls null.</returns>
        </member>
    </members>
</doc>
