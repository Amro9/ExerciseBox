/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy, QueryList } from '@angular/core';
import { ChartsDataType, Palette, PaletteExtensionMode } from 'devextreme/common/charts';
import { ChartAxisScale } from 'devextreme/viz/range_selector';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import { DxiSeriesComponent } from './series-dxi';
import * as i0 from "@angular/core";
export declare class DxoChartComponent extends NestedOption implements OnDestroy, OnInit {
    get barGroupPadding(): number;
    set barGroupPadding(value: number);
    get barGroupWidth(): number | undefined;
    set barGroupWidth(value: number | undefined);
    get bottomIndent(): number;
    set bottomIndent(value: number);
    get commonSeriesSettings(): any;
    set commonSeriesSettings(value: any);
    get dataPrepareSettings(): {
        checkTypeForAllData?: boolean;
        convertToAxisDataType?: boolean;
        sortingMethod?: boolean | Function;
    };
    set dataPrepareSettings(value: {
        checkTypeForAllData?: boolean;
        convertToAxisDataType?: boolean;
        sortingMethod?: boolean | Function;
    });
    get maxBubbleSize(): number;
    set maxBubbleSize(value: number);
    get minBubbleSize(): number;
    set minBubbleSize(value: number);
    get negativesAsZeroes(): boolean;
    set negativesAsZeroes(value: boolean);
    get palette(): Palette | string | Array<string>;
    set palette(value: Palette | string | Array<string>);
    get paletteExtensionMode(): PaletteExtensionMode;
    set paletteExtensionMode(value: PaletteExtensionMode);
    get series(): any | undefined | Array<any>;
    set series(value: any | undefined | Array<any>);
    get seriesTemplate(): {
        customizeSeries?: Function;
        nameField?: string;
    };
    set seriesTemplate(value: {
        customizeSeries?: Function;
        nameField?: string;
    });
    get topIndent(): number;
    set topIndent(value: number);
    get valueAxis(): {
        inverted?: boolean;
        logarithmBase?: number;
        max?: number | undefined;
        min?: number | undefined;
        type?: ChartAxisScale | undefined;
        valueType?: ChartsDataType | undefined;
    };
    set valueAxis(value: {
        inverted?: boolean;
        logarithmBase?: number;
        max?: number | undefined;
        min?: number | undefined;
        type?: ChartAxisScale | undefined;
        valueType?: ChartsDataType | undefined;
    });
    protected get _optionPath(): string;
    get seriesChildren(): QueryList<DxiSeriesComponent>;
    set seriesChildren(value: QueryList<DxiSeriesComponent>);
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoChartComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoChartComponent, "dxo-chart", never, { "barGroupPadding": "barGroupPadding"; "barGroupWidth": "barGroupWidth"; "bottomIndent": "bottomIndent"; "commonSeriesSettings": "commonSeriesSettings"; "dataPrepareSettings": "dataPrepareSettings"; "maxBubbleSize": "maxBubbleSize"; "minBubbleSize": "minBubbleSize"; "negativesAsZeroes": "negativesAsZeroes"; "palette": "palette"; "paletteExtensionMode": "paletteExtensionMode"; "series": "series"; "seriesTemplate": "seriesTemplate"; "topIndent": "topIndent"; "valueAxis": "valueAxis"; }, {}, ["seriesChildren"], never>;
}
export declare class DxoChartModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoChartModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoChartModule, [typeof DxoChartComponent], never, [typeof DxoChartComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoChartModule>;
}
