/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import DevExpress from 'devextreme/bundles/dx.all';
import { DashStyle, HatchDirection } from 'devextreme/common/charts';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoHoverStyleComponent extends NestedOption implements OnDestroy, OnInit {
    get border(): {
        color?: string | undefined;
        dashStyle?: DashStyle;
        visible?: boolean;
        width?: number;
    } | {
        color?: string | undefined;
        visible?: boolean;
        width?: number;
    } | {
        color?: string | undefined;
        visible?: boolean | undefined;
        width?: number | undefined;
    } | {
        color?: string | undefined;
        dashStyle?: DashStyle | undefined;
        visible?: boolean;
        width?: number;
    } | {
        color?: string | undefined;
        width?: number | undefined;
    };
    set border(value: {
        color?: string | undefined;
        dashStyle?: DashStyle;
        visible?: boolean;
        width?: number;
    } | {
        color?: string | undefined;
        visible?: boolean;
        width?: number;
    } | {
        color?: string | undefined;
        visible?: boolean | undefined;
        width?: number | undefined;
    } | {
        color?: string | undefined;
        dashStyle?: DashStyle | undefined;
        visible?: boolean;
        width?: number;
    } | {
        color?: string | undefined;
        width?: number | undefined;
    });
    get color(): DevExpress.common.charts.ChartsColor | string | undefined;
    set color(value: DevExpress.common.charts.ChartsColor | string | undefined);
    get dashStyle(): DashStyle;
    set dashStyle(value: DashStyle);
    get hatching(): {
        direction?: HatchDirection;
        opacity?: number;
        step?: number;
        width?: number;
    };
    set hatching(value: {
        direction?: HatchDirection;
        opacity?: number;
        step?: number;
        width?: number;
    });
    get highlight(): boolean;
    set highlight(value: boolean);
    get width(): number;
    set width(value: number);
    get size(): number | undefined;
    set size(value: number | undefined);
    get opacity(): number | undefined;
    set opacity(value: number | undefined);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoHoverStyleComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoHoverStyleComponent, "dxo-hover-style", never, { "border": "border"; "color": "color"; "dashStyle": "dashStyle"; "hatching": "hatching"; "highlight": "highlight"; "width": "width"; "size": "size"; "opacity": "opacity"; }, {}, never, never>;
}
export declare class DxoHoverStyleModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoHoverStyleModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoHoverStyleModule, [typeof DxoHoverStyleComponent], never, [typeof DxoHoverStyleComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoHoverStyleModule>;
}
