import { ComparisonOperator, ValidationRuleType } from 'devextreme/common';
import { NestedOptionHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxiValidationRuleComponent extends CollectionNestedOption {
    get message(): string;
    set message(value: string);
    get trim(): boolean;
    set trim(value: boolean);
    get type(): ValidationRuleType;
    set type(value: ValidationRuleType);
    get ignoreEmptyValue(): boolean;
    set ignoreEmptyValue(value: boolean);
    get max(): Date | number;
    set max(value: Date | number);
    get min(): Date | number;
    set min(value: Date | number);
    get reevaluate(): boolean;
    set reevaluate(value: boolean);
    get validationCallback(): Function;
    set validationCallback(value: Function);
    get comparisonTarget(): Function;
    set comparisonTarget(value: Function);
    get comparisonType(): ComparisonOperator;
    set comparisonType(value: ComparisonOperator);
    get pattern(): RegExp | string;
    set pattern(value: RegExp | string);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiValidationRuleComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiValidationRuleComponent, "dxi-validation-rule", never, { "message": "message"; "trim": "trim"; "type": "type"; "ignoreEmptyValue": "ignoreEmptyValue"; "max": "max"; "min": "min"; "reevaluate": "reevaluate"; "validationCallback": "validationCallback"; "comparisonTarget": "comparisonTarget"; "comparisonType": "comparisonType"; "pattern": "pattern"; }, {}, never, never>;
}
export declare class DxiValidationRuleModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiValidationRuleModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxiValidationRuleModule, [typeof DxiValidationRuleComponent], never, [typeof DxiValidationRuleComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxiValidationRuleModule>;
}
