/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoAdapterComponent extends NestedOption implements OnDestroy, OnInit {
    get applyValidationResults(): Function;
    set applyValidationResults(value: Function);
    get bypass(): Function;
    set bypass(value: Function);
    get focus(): Function;
    set focus(value: Function);
    get getValue(): Function;
    set getValue(value: Function);
    get reset(): Function;
    set reset(value: Function);
    get validationRequestsCallbacks(): Array<Function>;
    set validationRequestsCallbacks(value: Array<Function>);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoAdapterComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoAdapterComponent, "dxo-adapter", never, { "applyValidationResults": "applyValidationResults"; "bypass": "bypass"; "focus": "focus"; "getValue": "getValue"; "reset": "reset"; "validationRequestsCallbacks": "validationRequestsCallbacks"; }, {}, never, never>;
}
export declare class DxoAdapterModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoAdapterModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoAdapterModule, [typeof DxoAdapterComponent], never, [typeof DxoAdapterComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoAdapterModule>;
}
