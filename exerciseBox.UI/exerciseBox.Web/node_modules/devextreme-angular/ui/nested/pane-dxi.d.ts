import DevExpress from 'devextreme/bundles/dx.all';
import { DashStyle } from 'devextreme/common/charts';
import { NestedOptionHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxiPaneComponent extends CollectionNestedOption {
    get backgroundColor(): DevExpress.common.charts.ChartsColor | string;
    set backgroundColor(value: DevExpress.common.charts.ChartsColor | string);
    get border(): {
        bottom?: boolean;
        color?: string;
        dashStyle?: DashStyle;
        left?: boolean;
        opacity?: number | undefined;
        right?: boolean;
        top?: boolean;
        visible?: boolean;
        width?: number;
    };
    set border(value: {
        bottom?: boolean;
        color?: string;
        dashStyle?: DashStyle;
        left?: boolean;
        opacity?: number | undefined;
        right?: boolean;
        top?: boolean;
        visible?: boolean;
        width?: number;
    });
    get height(): number | string | undefined;
    set height(value: number | string | undefined);
    get name(): string | undefined;
    set name(value: string | undefined);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiPaneComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiPaneComponent, "dxi-pane", never, { "backgroundColor": "backgroundColor"; "border": "border"; "height": "height"; "name": "name"; }, {}, never, never>;
}
export declare class DxiPaneModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiPaneModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxiPaneModule, [typeof DxiPaneComponent], never, [typeof DxiPaneComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxiPaneModule>;
}
