/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import DevExpress from 'devextreme/bundles/dx.all';
import { PointInteractionMode, PointSymbol } from 'devextreme/common/charts';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoPointComponent extends NestedOption implements OnDestroy, OnInit {
    get border(): {
        color?: string | undefined;
        visible?: boolean;
        width?: number;
    };
    set border(value: {
        color?: string | undefined;
        visible?: boolean;
        width?: number;
    });
    get color(): DevExpress.common.charts.ChartsColor | string | undefined;
    set color(value: DevExpress.common.charts.ChartsColor | string | undefined);
    get hoverMode(): PointInteractionMode;
    set hoverMode(value: PointInteractionMode);
    get hoverStyle(): {
        border?: {
            color?: string | undefined;
            visible?: boolean;
            width?: number;
        };
        color?: DevExpress.common.charts.ChartsColor | string | undefined;
        size?: number | undefined;
    } | {
        border?: {
            color?: string | undefined;
            visible?: boolean;
            width?: number;
        };
        color?: DevExpress.common.charts.ChartsColor | string | undefined;
        size?: number;
    };
    set hoverStyle(value: {
        border?: {
            color?: string | undefined;
            visible?: boolean;
            width?: number;
        };
        color?: DevExpress.common.charts.ChartsColor | string | undefined;
        size?: number | undefined;
    } | {
        border?: {
            color?: string | undefined;
            visible?: boolean;
            width?: number;
        };
        color?: DevExpress.common.charts.ChartsColor | string | undefined;
        size?: number;
    });
    get image(): string | undefined | {
        height?: number | {
            rangeMaxPoint?: number | undefined;
            rangeMinPoint?: number | undefined;
        };
        url?: string | undefined | {
            rangeMaxPoint?: string | undefined;
            rangeMinPoint?: string | undefined;
        };
        width?: number | {
            rangeMaxPoint?: number | undefined;
            rangeMinPoint?: number | undefined;
        };
    } | {
        height?: number;
        url?: string | undefined;
        width?: number;
    };
    set image(value: string | undefined | {
        height?: number | {
            rangeMaxPoint?: number | undefined;
            rangeMinPoint?: number | undefined;
        };
        url?: string | undefined | {
            rangeMaxPoint?: string | undefined;
            rangeMinPoint?: string | undefined;
        };
        width?: number | {
            rangeMaxPoint?: number | undefined;
            rangeMinPoint?: number | undefined;
        };
    } | {
        height?: number;
        url?: string | undefined;
        width?: number;
    });
    get selectionMode(): PointInteractionMode;
    set selectionMode(value: PointInteractionMode);
    get selectionStyle(): {
        border?: {
            color?: string | undefined;
            visible?: boolean;
            width?: number;
        };
        color?: DevExpress.common.charts.ChartsColor | string | undefined;
        size?: number | undefined;
    } | {
        border?: {
            color?: string | undefined;
            visible?: boolean;
            width?: number;
        };
        color?: DevExpress.common.charts.ChartsColor | string | undefined;
        size?: number;
    };
    set selectionStyle(value: {
        border?: {
            color?: string | undefined;
            visible?: boolean;
            width?: number;
        };
        color?: DevExpress.common.charts.ChartsColor | string | undefined;
        size?: number | undefined;
    } | {
        border?: {
            color?: string | undefined;
            visible?: boolean;
            width?: number;
        };
        color?: DevExpress.common.charts.ChartsColor | string | undefined;
        size?: number;
    });
    get size(): number;
    set size(value: number);
    get symbol(): PointSymbol;
    set symbol(value: PointSymbol);
    get visible(): boolean;
    set visible(value: boolean);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoPointComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoPointComponent, "dxo-point", never, { "border": "border"; "color": "color"; "hoverMode": "hoverMode"; "hoverStyle": "hoverStyle"; "image": "image"; "selectionMode": "selectionMode"; "selectionStyle": "selectionStyle"; "size": "size"; "symbol": "symbol"; "visible": "visible"; }, {}, never, never>;
}
export declare class DxoPointModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoPointModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoPointModule, [typeof DxoPointComponent], never, [typeof DxoPointComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoPointModule>;
}
