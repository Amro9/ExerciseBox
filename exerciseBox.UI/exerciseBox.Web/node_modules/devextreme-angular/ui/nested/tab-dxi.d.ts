/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { ElementRef, Renderer2, AfterViewInit, QueryList } from '@angular/core';
import { NestedOptionHost, DxTemplateDirective, IDxTemplateHost, DxTemplateHost } from 'devextreme-angular/core';
import { DxiHtmlEditorImageUploadTabItem } from './base/html-editor-image-upload-tab-item-dxi';
import { DxiItemComponent } from './item-dxi';
import { DxiCommandComponent } from './command-dxi';
import { DxiGroupComponent } from './group-dxi';
import * as i0 from "@angular/core";
export declare class DxiTabComponent extends DxiHtmlEditorImageUploadTabItem implements AfterViewInit, IDxTemplateHost {
    private renderer;
    private document;
    private element;
    protected get _optionPath(): string;
    get itemsChildren(): QueryList<DxiItemComponent>;
    set itemsChildren(value: QueryList<DxiItemComponent>);
    get commandsChildren(): QueryList<DxiCommandComponent>;
    set commandsChildren(value: QueryList<DxiCommandComponent>);
    get groupsChildren(): QueryList<DxiGroupComponent>;
    set groupsChildren(value: QueryList<DxiGroupComponent>);
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost, renderer: Renderer2, document: any, templateHost: DxTemplateHost, element: ElementRef);
    setTemplate(template: DxTemplateDirective): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiTabComponent, [{ host: true; skipSelf: true; }, { host: true; }, null, null, { host: true; }, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiTabComponent, "dxi-tab", never, { "alignItemLabels": "alignItemLabels"; "badge": "badge"; "colCount": "colCount"; "colCountByScreen": "colCountByScreen"; "disabled": "disabled"; "icon": "icon"; "items": "items"; "tabTemplate": "tabTemplate"; "template": "template"; "title": "title"; "commands": "commands"; "groups": "groups"; "name": "name"; }, {}, ["itemsChildren", "commandsChildren", "groupsChildren"], ["*"]>;
}
export declare class DxiTabModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiTabModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxiTabModule, [typeof DxiTabComponent], never, [typeof DxiTabComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxiTabModule>;
}
