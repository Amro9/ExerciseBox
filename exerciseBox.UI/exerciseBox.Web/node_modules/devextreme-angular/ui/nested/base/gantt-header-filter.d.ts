/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { NestedOption } from 'devextreme-angular/core';
import { SearchMode } from 'devextreme/common';
import { ColumnHeaderFilterSearchConfig, HeaderFilterGroupInterval, HeaderFilterSearchConfig } from 'devextreme/common/grids';
import { Store } from 'devextreme/data';
import { Options as DataSourceOptions } from 'devextreme/data/data_source';
import { dxGanttHeaderFilterTexts } from 'devextreme/ui/gantt';
import * as i0 from "@angular/core";
export declare abstract class DxoGanttHeaderFilter extends NestedOption {
    get allowSearch(): boolean;
    set allowSearch(value: boolean);
    get allowSelectAll(): boolean;
    set allowSelectAll(value: boolean);
    get dataSource(): DataSourceOptions | Store | Function | null | undefined | Array<any>;
    set dataSource(value: DataSourceOptions | Store | Function | null | undefined | Array<any>);
    get groupInterval(): HeaderFilterGroupInterval | number | undefined;
    set groupInterval(value: HeaderFilterGroupInterval | number | undefined);
    get height(): number | undefined;
    set height(value: number | undefined);
    get search(): ColumnHeaderFilterSearchConfig | HeaderFilterSearchConfig;
    set search(value: ColumnHeaderFilterSearchConfig | HeaderFilterSearchConfig);
    get searchMode(): SearchMode;
    set searchMode(value: SearchMode);
    get width(): number | undefined;
    set width(value: number | undefined);
    get searchTimeout(): number;
    set searchTimeout(value: number);
    get texts(): {
        cancel?: string;
        emptyValue?: string;
        ok?: string;
    } | dxGanttHeaderFilterTexts;
    set texts(value: {
        cancel?: string;
        emptyValue?: string;
        ok?: string;
    } | dxGanttHeaderFilterTexts);
    get visible(): boolean;
    set visible(value: boolean);
    get showRelevantValues(): boolean;
    set showRelevantValues(value: boolean);
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoGanttHeaderFilter, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoGanttHeaderFilter, "ng-component", never, {}, {}, never, never>;
}
