/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { NestedOption } from 'devextreme-angular/core';
import { AnimationConfig } from 'devextreme/animation/fx';
import DevExpress from 'devextreme/bundles/dx.all';
import { Position, PositionAlignment, ToolbarItemComponent, ToolbarItemLocation } from 'devextreme/common';
import { UserDefinedElement } from 'devextreme/core/element';
import { ToolbarLocation } from 'devextreme/ui/popup';
import { LocateInMenuMode, ShowTextMode } from 'devextreme/ui/toolbar';
import * as i0 from "@angular/core";
export declare abstract class DxoPopupOptions extends NestedOption {
    get accessKey(): string | undefined;
    set accessKey(value: string | undefined);
    get animation(): {
        hide?: AnimationConfig;
        show?: AnimationConfig;
    };
    set animation(value: {
        hide?: AnimationConfig;
        show?: AnimationConfig;
    });
    get closeOnOutsideClick(): boolean | Function;
    set closeOnOutsideClick(value: boolean | Function);
    get container(): string | UserDefinedElement | undefined;
    set container(value: string | UserDefinedElement | undefined);
    get contentTemplate(): any;
    set contentTemplate(value: any);
    get copyRootClassesToWrapper(): boolean;
    set copyRootClassesToWrapper(value: boolean);
    get deferRendering(): boolean;
    set deferRendering(value: boolean);
    get disabled(): boolean;
    set disabled(value: boolean);
    get dragAndResizeArea(): string | UserDefinedElement | undefined;
    set dragAndResizeArea(value: string | UserDefinedElement | undefined);
    get dragEnabled(): boolean;
    set dragEnabled(value: boolean);
    get dragOutsideBoundary(): boolean;
    set dragOutsideBoundary(value: boolean);
    get elementAttr(): any;
    set elementAttr(value: any);
    get enableBodyScroll(): boolean;
    set enableBodyScroll(value: boolean);
    get focusStateEnabled(): boolean;
    set focusStateEnabled(value: boolean);
    get fullScreen(): boolean;
    set fullScreen(value: boolean);
    get height(): number | Function | string;
    set height(value: number | Function | string);
    get hideOnOutsideClick(): boolean | Function;
    set hideOnOutsideClick(value: boolean | Function);
    get hideOnParentScroll(): boolean;
    set hideOnParentScroll(value: boolean);
    get hint(): string | undefined;
    set hint(value: string | undefined);
    get hoverStateEnabled(): boolean;
    set hoverStateEnabled(value: boolean);
    get maxHeight(): number | Function | string;
    set maxHeight(value: number | Function | string);
    get maxWidth(): number | Function | string;
    set maxWidth(value: number | Function | string);
    get minHeight(): number | Function | string;
    set minHeight(value: number | Function | string);
    get minWidth(): number | Function | string;
    set minWidth(value: number | Function | string);
    get onContentReady(): Function;
    set onContentReady(value: Function);
    get onDisposing(): Function;
    set onDisposing(value: Function);
    get onHidden(): Function;
    set onHidden(value: Function);
    get onHiding(): Function;
    set onHiding(value: Function);
    get onInitialized(): Function;
    set onInitialized(value: Function);
    get onOptionChanged(): Function;
    set onOptionChanged(value: Function);
    get onResize(): Function;
    set onResize(value: Function);
    get onResizeEnd(): Function;
    set onResizeEnd(value: Function);
    get onResizeStart(): Function;
    set onResizeStart(value: Function);
    get onShowing(): Function;
    set onShowing(value: Function);
    get onShown(): Function;
    set onShown(value: Function);
    get onTitleRendered(): Function;
    set onTitleRendered(value: Function);
    get position(): PositionAlignment | DevExpress.PositionConfig | Function | Position;
    set position(value: PositionAlignment | DevExpress.PositionConfig | Function | Position);
    get resizeEnabled(): boolean;
    set resizeEnabled(value: boolean);
    get restorePosition(): boolean;
    set restorePosition(value: boolean);
    get rtlEnabled(): boolean;
    set rtlEnabled(value: boolean);
    get shading(): boolean;
    set shading(value: boolean);
    get shadingColor(): string;
    set shadingColor(value: string);
    get showCloseButton(): boolean;
    set showCloseButton(value: boolean);
    get showTitle(): boolean;
    set showTitle(value: boolean);
    get tabIndex(): number;
    set tabIndex(value: number);
    get title(): string;
    set title(value: string);
    get titleTemplate(): any;
    set titleTemplate(value: any);
    get toolbarItems(): Array<any | {
        cssClass?: string | undefined;
        disabled?: boolean;
        html?: string;
        locateInMenu?: LocateInMenuMode;
        location?: ToolbarItemLocation;
        menuItemTemplate?: any;
        options?: any;
        showText?: ShowTextMode;
        template?: any;
        text?: string;
        toolbar?: ToolbarLocation;
        visible?: boolean;
        widget?: ToolbarItemComponent;
    }>;
    set toolbarItems(value: Array<any | {
        cssClass?: string | undefined;
        disabled?: boolean;
        html?: string;
        locateInMenu?: LocateInMenuMode;
        location?: ToolbarItemLocation;
        menuItemTemplate?: any;
        options?: any;
        showText?: ShowTextMode;
        template?: any;
        text?: string;
        toolbar?: ToolbarLocation;
        visible?: boolean;
        widget?: ToolbarItemComponent;
    }>);
    get visible(): boolean;
    set visible(value: boolean);
    get width(): number | Function | string;
    set width(value: number | Function | string);
    get wrapperAttr(): any;
    set wrapperAttr(value: any);
    get hideEvent(): string | undefined | {
        delay?: number | undefined;
        name?: string | undefined;
    };
    set hideEvent(value: string | undefined | {
        delay?: number | undefined;
        name?: string | undefined;
    });
    get showEvent(): string | undefined | {
        delay?: number | undefined;
        name?: string | undefined;
    };
    set showEvent(value: string | undefined | {
        delay?: number | undefined;
        name?: string | undefined;
    });
    get target(): string | UserDefinedElement | undefined;
    set target(value: string | UserDefinedElement | undefined);
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoPopupOptions, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoPopupOptions, "ng-component", never, {}, {}, never, never>;
}
