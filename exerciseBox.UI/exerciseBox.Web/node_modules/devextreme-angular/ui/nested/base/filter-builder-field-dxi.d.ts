/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { CollectionNestedOption } from 'devextreme-angular/core';
import { DataType } from 'devextreme/common';
import { Store } from 'devextreme/data';
import { Options as DataSourceOptions } from 'devextreme/data/data_source';
import { Format } from 'devextreme/localization';
import { FilterBuilderOperation } from 'devextreme/ui/filter_builder';
import { format } from 'devextreme/ui/widget/ui.widget';
import * as i0 from "@angular/core";
export declare abstract class DxiFilterBuilderField extends CollectionNestedOption {
    get calculateFilterExpression(): Function;
    set calculateFilterExpression(value: Function);
    get caption(): string | undefined;
    set caption(value: string | undefined);
    get customizeText(): Function;
    set customizeText(value: Function);
    get dataField(): string | undefined;
    set dataField(value: string | undefined);
    get dataType(): DataType | string;
    set dataType(value: DataType | string);
    get editorOptions(): any;
    set editorOptions(value: any);
    get editorTemplate(): any;
    set editorTemplate(value: any);
    get falseText(): string;
    set falseText(value: string);
    get filterOperations(): Array<FilterBuilderOperation | string>;
    set filterOperations(value: Array<FilterBuilderOperation | string>);
    get format(): Format | string | format;
    set format(value: Format | string | format);
    get lookup(): {
        allowClearing?: boolean;
        dataSource?: DataSourceOptions | Store | undefined | Array<any>;
        displayExpr?: Function | string | undefined;
        valueExpr?: Function | string | undefined;
    };
    set lookup(value: {
        allowClearing?: boolean;
        dataSource?: DataSourceOptions | Store | undefined | Array<any>;
        displayExpr?: Function | string | undefined;
        valueExpr?: Function | string | undefined;
    });
    get name(): string | undefined;
    set name(value: string | undefined);
    get trueText(): string;
    set trueText(value: string);
    get allowCrossGroupCalculation(): boolean;
    set allowCrossGroupCalculation(value: boolean);
    get allowExpandAll(): boolean;
    set allowExpandAll(value: boolean);
    get allowFiltering(): boolean;
    set allowFiltering(value: boolean);
    get allowSorting(): boolean;
    set allowSorting(value: boolean);
    get allowSortingBySummary(): boolean;
    set allowSortingBySummary(value: boolean);
    get area(): string;
    set area(value: string);
    get areaIndex(): number;
    set areaIndex(value: number);
    get calculateCustomSummary(): Function;
    set calculateCustomSummary(value: Function);
    get calculateSummaryValue(): Function;
    set calculateSummaryValue(value: Function);
    get displayFolder(): string;
    set displayFolder(value: string);
    get expanded(): boolean;
    set expanded(value: boolean);
    get filterType(): string;
    set filterType(value: string);
    get filterValues(): Array<any>;
    set filterValues(value: Array<any>);
    get groupIndex(): number;
    set groupIndex(value: number);
    get groupInterval(): number | string;
    set groupInterval(value: number | string);
    get groupName(): string;
    set groupName(value: string);
    get headerFilter(): {
        allowSearch?: boolean;
        height?: number;
        width?: number;
    };
    set headerFilter(value: {
        allowSearch?: boolean;
        height?: number;
        width?: number;
    });
    get isMeasure(): boolean;
    set isMeasure(value: boolean);
    get precision(): number;
    set precision(value: number);
    get runningTotal(): string;
    set runningTotal(value: string);
    get selector(): Function;
    set selector(value: Function);
    get showGrandTotals(): boolean;
    set showGrandTotals(value: boolean);
    get showTotals(): boolean;
    set showTotals(value: boolean);
    get showValues(): boolean;
    set showValues(value: boolean);
    get sortBy(): string;
    set sortBy(value: string);
    get sortBySummaryField(): string;
    set sortBySummaryField(value: string);
    get sortBySummaryPath(): Array<number | string>;
    set sortBySummaryPath(value: Array<number | string>);
    get sortingMethod(): Function;
    set sortingMethod(value: Function);
    get sortOrder(): string;
    set sortOrder(value: string);
    get summaryDisplayMode(): string;
    set summaryDisplayMode(value: string);
    get summaryType(): string;
    set summaryType(value: string);
    get visible(): boolean;
    set visible(value: boolean);
    get width(): number;
    set width(value: number);
    get wordWrapEnabled(): boolean;
    set wordWrapEnabled(value: boolean);
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiFilterBuilderField, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiFilterBuilderField, "ng-component", never, {}, {}, never, never>;
}
