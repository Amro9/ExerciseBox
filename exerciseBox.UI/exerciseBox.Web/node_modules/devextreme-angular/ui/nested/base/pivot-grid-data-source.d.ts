/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { NestedOption } from 'devextreme-angular/core';
import { Store, StoreOptions } from 'devextreme/data';
import XmlaStore, { XmlaStoreOptions } from 'devextreme/ui/pivot_grid/xmla_store';
import { format } from 'devextreme/ui/widget/ui.widget';
import * as i0 from "@angular/core";
export declare abstract class DxoPivotGridDataSource extends NestedOption {
    get fields(): Array<any | {
        allowCrossGroupCalculation?: boolean;
        allowExpandAll?: boolean;
        allowFiltering?: boolean;
        allowSorting?: boolean;
        allowSortingBySummary?: boolean;
        area?: string;
        areaIndex?: number;
        calculateCustomSummary?: Function;
        calculateSummaryValue?: Function;
        caption?: string;
        customizeText?: Function;
        dataField?: string;
        dataType?: string;
        displayFolder?: string;
        expanded?: boolean;
        filterType?: string;
        filterValues?: Array<any>;
        format?: format | string;
        groupIndex?: number;
        groupInterval?: number | string;
        groupName?: string;
        headerFilter?: {
            allowSearch?: boolean;
            height?: number;
            width?: number;
        };
        isMeasure?: boolean;
        precision?: number;
        runningTotal?: string;
        selector?: Function;
        showGrandTotals?: boolean;
        showTotals?: boolean;
        showValues?: boolean;
        sortBy?: string;
        sortBySummaryField?: string;
        sortBySummaryPath?: Array<number | string>;
        sortingMethod?: Function;
        sortOrder?: string;
        summaryDisplayMode?: string;
        summaryType?: string;
        visible?: boolean;
        width?: number;
        wordWrapEnabled?: boolean;
    }>;
    set fields(value: Array<any | {
        allowCrossGroupCalculation?: boolean;
        allowExpandAll?: boolean;
        allowFiltering?: boolean;
        allowSorting?: boolean;
        allowSortingBySummary?: boolean;
        area?: string;
        areaIndex?: number;
        calculateCustomSummary?: Function;
        calculateSummaryValue?: Function;
        caption?: string;
        customizeText?: Function;
        dataField?: string;
        dataType?: string;
        displayFolder?: string;
        expanded?: boolean;
        filterType?: string;
        filterValues?: Array<any>;
        format?: format | string;
        groupIndex?: number;
        groupInterval?: number | string;
        groupName?: string;
        headerFilter?: {
            allowSearch?: boolean;
            height?: number;
            width?: number;
        };
        isMeasure?: boolean;
        precision?: number;
        runningTotal?: string;
        selector?: Function;
        showGrandTotals?: boolean;
        showTotals?: boolean;
        showValues?: boolean;
        sortBy?: string;
        sortBySummaryField?: string;
        sortBySummaryPath?: Array<number | string>;
        sortingMethod?: Function;
        sortOrder?: string;
        summaryDisplayMode?: string;
        summaryType?: string;
        visible?: boolean;
        width?: number;
        wordWrapEnabled?: boolean;
    }>);
    get filter(): any;
    set filter(value: any);
    get onChanged(): Function;
    set onChanged(value: Function);
    get onFieldsPrepared(): Function;
    set onFieldsPrepared(value: Function);
    get onLoadError(): Function;
    set onLoadError(value: Function);
    get onLoadingChanged(): Function;
    set onLoadingChanged(value: Function);
    get remoteOperations(): boolean;
    set remoteOperations(value: boolean);
    get retrieveFields(): boolean;
    set retrieveFields(value: boolean);
    get store(): Store | StoreOptions | XmlaStore | XmlaStoreOptions | {
        type?: string;
    } | Array<any>;
    set store(value: Store | StoreOptions | XmlaStore | XmlaStoreOptions | {
        type?: string;
    } | Array<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoPivotGridDataSource, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoPivotGridDataSource, "ng-component", never, {}, {}, never, never>;
}
