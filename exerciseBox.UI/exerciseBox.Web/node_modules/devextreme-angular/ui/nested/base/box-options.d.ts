/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { NestedOption } from 'devextreme-angular/core';
import DevExpress from 'devextreme/bundles/dx.all';
import { Store } from 'devextreme/data';
import DataSource, { Options as DataSourceOptions } from 'devextreme/data/data_source';
import { BoxDirection, ContentReadyEvent, CrosswiseDistribution, DisposingEvent, Distribution, dxBoxOptions, InitializedEvent, ItemClickEvent, ItemContextMenuEvent, ItemHoldEvent, ItemRenderedEvent, OptionChangedEvent } from 'devextreme/ui/box';
import * as i0 from "@angular/core";
export declare abstract class DxoBoxOptions extends NestedOption {
    get align(): Distribution;
    set align(value: Distribution);
    get crossAlign(): CrosswiseDistribution;
    set crossAlign(value: CrosswiseDistribution);
    get dataSource(): DataSource | DataSourceOptions | Store | null | string | Array<string | DevExpress.ui.dxBoxItem | any>;
    set dataSource(value: DataSource | DataSourceOptions | Store | null | string | Array<string | DevExpress.ui.dxBoxItem | any>);
    get direction(): BoxDirection;
    set direction(value: BoxDirection);
    get disabled(): boolean;
    set disabled(value: boolean);
    get elementAttr(): any;
    set elementAttr(value: any);
    get height(): number | Function | string | undefined;
    set height(value: number | Function | string | undefined);
    get hoverStateEnabled(): boolean;
    set hoverStateEnabled(value: boolean);
    get itemHoldTimeout(): number;
    set itemHoldTimeout(value: number);
    get items(): Array<string | any | {
        baseSize?: number | string;
        box?: dxBoxOptions | undefined;
        disabled?: boolean;
        html?: string;
        ratio?: number;
        shrink?: number;
        template?: any;
        text?: string;
        visible?: boolean;
    }>;
    set items(value: Array<string | any | {
        baseSize?: number | string;
        box?: dxBoxOptions | undefined;
        disabled?: boolean;
        html?: string;
        ratio?: number;
        shrink?: number;
        template?: any;
        text?: string;
        visible?: boolean;
    }>);
    get itemTemplate(): any;
    set itemTemplate(value: any);
    get onContentReady(): ((e: ContentReadyEvent) => void);
    set onContentReady(value: ((e: ContentReadyEvent) => void));
    get onDisposing(): ((e: DisposingEvent) => void);
    set onDisposing(value: ((e: DisposingEvent) => void));
    get onInitialized(): ((e: InitializedEvent) => void);
    set onInitialized(value: ((e: InitializedEvent) => void));
    get onItemClick(): ((e: ItemClickEvent) => void);
    set onItemClick(value: ((e: ItemClickEvent) => void));
    get onItemContextMenu(): ((e: ItemContextMenuEvent) => void);
    set onItemContextMenu(value: ((e: ItemContextMenuEvent) => void));
    get onItemHold(): ((e: ItemHoldEvent) => void);
    set onItemHold(value: ((e: ItemHoldEvent) => void));
    get onItemRendered(): ((e: ItemRenderedEvent) => void);
    set onItemRendered(value: ((e: ItemRenderedEvent) => void));
    get onOptionChanged(): ((e: OptionChangedEvent) => void);
    set onOptionChanged(value: ((e: OptionChangedEvent) => void));
    get rtlEnabled(): boolean;
    set rtlEnabled(value: boolean);
    get visible(): boolean;
    set visible(value: boolean);
    get width(): number | Function | string | undefined;
    set width(value: number | Function | string | undefined);
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoBoxOptions, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoBoxOptions, "ng-component", never, {}, {}, never, never>;
}
