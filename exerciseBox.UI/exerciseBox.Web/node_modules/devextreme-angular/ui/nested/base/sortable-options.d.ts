/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { NestedOption } from 'devextreme-angular/core';
import { DragDirection, DragHighlight, Orientation } from 'devextreme/common';
import { UserDefinedElement } from 'devextreme/core/element';
import { AddEvent, DisposingEvent, DragChangeEvent, DragEndEvent, DragMoveEvent, DragStartEvent, InitializedEvent, OptionChangedEvent, RemoveEvent, ReorderEvent } from 'devextreme/ui/sortable';
import * as i0 from "@angular/core";
export declare abstract class DxoSortableOptions extends NestedOption {
    get allowDropInsideItem(): boolean;
    set allowDropInsideItem(value: boolean);
    get allowReordering(): boolean;
    set allowReordering(value: boolean);
    get autoScroll(): boolean;
    set autoScroll(value: boolean);
    get boundary(): string | UserDefinedElement | undefined;
    set boundary(value: string | UserDefinedElement | undefined);
    get container(): string | UserDefinedElement | undefined;
    set container(value: string | UserDefinedElement | undefined);
    get cursorOffset(): string | {
        x?: number;
        y?: number;
    };
    set cursorOffset(value: string | {
        x?: number;
        y?: number;
    });
    get data(): any | undefined;
    set data(value: any | undefined);
    get dragDirection(): DragDirection;
    set dragDirection(value: DragDirection);
    get dragTemplate(): any | undefined;
    set dragTemplate(value: any | undefined);
    get dropFeedbackMode(): DragHighlight;
    set dropFeedbackMode(value: DragHighlight);
    get elementAttr(): any;
    set elementAttr(value: any);
    get filter(): string;
    set filter(value: string);
    get group(): string | undefined;
    set group(value: string | undefined);
    get handle(): string;
    set handle(value: string);
    get height(): number | Function | string | undefined;
    set height(value: number | Function | string | undefined);
    get itemOrientation(): Orientation;
    set itemOrientation(value: Orientation);
    get moveItemOnDrop(): boolean;
    set moveItemOnDrop(value: boolean);
    get onAdd(): ((e: AddEvent) => void);
    set onAdd(value: ((e: AddEvent) => void));
    get onDisposing(): ((e: DisposingEvent) => void);
    set onDisposing(value: ((e: DisposingEvent) => void));
    get onDragChange(): ((e: DragChangeEvent) => void);
    set onDragChange(value: ((e: DragChangeEvent) => void));
    get onDragEnd(): ((e: DragEndEvent) => void);
    set onDragEnd(value: ((e: DragEndEvent) => void));
    get onDragMove(): ((e: DragMoveEvent) => void);
    set onDragMove(value: ((e: DragMoveEvent) => void));
    get onDragStart(): ((e: DragStartEvent) => void);
    set onDragStart(value: ((e: DragStartEvent) => void));
    get onInitialized(): ((e: InitializedEvent) => void);
    set onInitialized(value: ((e: InitializedEvent) => void));
    get onOptionChanged(): ((e: OptionChangedEvent) => void);
    set onOptionChanged(value: ((e: OptionChangedEvent) => void));
    get onRemove(): ((e: RemoveEvent) => void);
    set onRemove(value: ((e: RemoveEvent) => void));
    get onReorder(): ((e: ReorderEvent) => void);
    set onReorder(value: ((e: ReorderEvent) => void));
    get rtlEnabled(): boolean;
    set rtlEnabled(value: boolean);
    get scrollSensitivity(): number;
    set scrollSensitivity(value: number);
    get scrollSpeed(): number;
    set scrollSpeed(value: number);
    get width(): number | Function | string | undefined;
    set width(value: number | Function | string | undefined);
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoSortableOptions, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoSortableOptions, "ng-component", never, {}, {}, never, never>;
}
