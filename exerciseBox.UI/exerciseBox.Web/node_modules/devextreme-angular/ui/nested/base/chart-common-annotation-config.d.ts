/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { NestedOption } from 'devextreme-angular/core';
import { AnnotationType, DashStyle, Font, TextOverflow, WordWrap } from 'devextreme/common/charts';
import { PieChartAnnotationLocation } from 'devextreme/viz/pie_chart';
import * as i0 from "@angular/core";
export declare abstract class DxoChartCommonAnnotationConfig extends NestedOption {
    get allowDragging(): boolean;
    set allowDragging(value: boolean);
    get argument(): Date | number | string | undefined;
    set argument(value: Date | number | string | undefined);
    get arrowLength(): number;
    set arrowLength(value: number);
    get arrowWidth(): number;
    set arrowWidth(value: number);
    get axis(): string | undefined;
    set axis(value: string | undefined);
    get border(): {
        color?: string;
        cornerRadius?: number;
        dashStyle?: DashStyle;
        opacity?: number | undefined;
        visible?: boolean;
        width?: number;
    };
    set border(value: {
        color?: string;
        cornerRadius?: number;
        dashStyle?: DashStyle;
        opacity?: number | undefined;
        visible?: boolean;
        width?: number;
    });
    get color(): string;
    set color(value: string);
    get customizeTooltip(): Function | undefined;
    set customizeTooltip(value: Function | undefined);
    get data(): any;
    set data(value: any);
    get description(): string | undefined;
    set description(value: string | undefined);
    get font(): Font;
    set font(value: Font);
    get height(): number | undefined;
    set height(value: number | undefined);
    get image(): string | {
        height?: number;
        url?: string | undefined;
        width?: number;
    };
    set image(value: string | {
        height?: number;
        url?: string | undefined;
        width?: number;
    });
    get offsetX(): number | undefined;
    set offsetX(value: number | undefined);
    get offsetY(): number | undefined;
    set offsetY(value: number | undefined);
    get opacity(): number;
    set opacity(value: number);
    get paddingLeftRight(): number;
    set paddingLeftRight(value: number);
    get paddingTopBottom(): number;
    set paddingTopBottom(value: number);
    get series(): string | undefined;
    set series(value: string | undefined);
    get shadow(): {
        blur?: number;
        color?: string;
        offsetX?: number;
        offsetY?: number;
        opacity?: number;
    };
    set shadow(value: {
        blur?: number;
        color?: string;
        offsetX?: number;
        offsetY?: number;
        opacity?: number;
    });
    get template(): any | undefined;
    set template(value: any | undefined);
    get text(): string | undefined;
    set text(value: string | undefined);
    get textOverflow(): TextOverflow;
    set textOverflow(value: TextOverflow);
    get tooltipEnabled(): boolean;
    set tooltipEnabled(value: boolean);
    get tooltipTemplate(): any | undefined;
    set tooltipTemplate(value: any | undefined);
    get type(): AnnotationType | undefined;
    set type(value: AnnotationType | undefined);
    get value(): Date | number | string | undefined;
    set value(value: Date | number | string | undefined);
    get width(): number | undefined;
    set width(value: number | undefined);
    get wordWrap(): WordWrap;
    set wordWrap(value: WordWrap);
    get x(): number | undefined;
    set x(value: number | undefined);
    get y(): number | undefined;
    set y(value: number | undefined);
    get location(): PieChartAnnotationLocation;
    set location(value: PieChartAnnotationLocation);
    get angle(): number | undefined;
    set angle(value: number | undefined);
    get radius(): number | undefined;
    set radius(value: number | undefined);
    get coordinates(): Array<number>;
    set coordinates(value: Array<number>);
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoChartCommonAnnotationConfig, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoChartCommonAnnotationConfig, "ng-component", never, {}, {}, never, never>;
}
