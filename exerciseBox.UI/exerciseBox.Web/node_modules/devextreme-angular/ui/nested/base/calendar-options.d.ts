/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { NestedOption } from 'devextreme-angular/core';
import { FirstDayOfWeek, Position, ValidationMessageMode, ValidationStatus } from 'devextreme/common';
import { CalendarSelectionMode, CalendarZoomLevel, DisposingEvent, InitializedEvent, OptionChangedEvent, ValueChangedEvent, WeekNumberRule } from 'devextreme/ui/calendar';
import * as i0 from "@angular/core";
export declare abstract class DxoCalendarOptions extends NestedOption {
    get accessKey(): string | undefined;
    set accessKey(value: string | undefined);
    get activeStateEnabled(): boolean;
    set activeStateEnabled(value: boolean);
    get cellTemplate(): any;
    set cellTemplate(value: any);
    get dateSerializationFormat(): string | undefined;
    set dateSerializationFormat(value: string | undefined);
    get disabled(): boolean;
    set disabled(value: boolean);
    get disabledDates(): Function | Array<Date>;
    set disabledDates(value: Function | Array<Date>);
    get elementAttr(): any;
    set elementAttr(value: any);
    get firstDayOfWeek(): FirstDayOfWeek | undefined;
    set firstDayOfWeek(value: FirstDayOfWeek | undefined);
    get focusStateEnabled(): boolean;
    set focusStateEnabled(value: boolean);
    get height(): number | Function | string | undefined;
    set height(value: number | Function | string | undefined);
    get hint(): string | undefined;
    set hint(value: string | undefined);
    get hoverStateEnabled(): boolean;
    set hoverStateEnabled(value: boolean);
    get isDirty(): boolean;
    set isDirty(value: boolean);
    get isValid(): boolean;
    set isValid(value: boolean);
    get max(): Date | number | string;
    set max(value: Date | number | string);
    get maxZoomLevel(): CalendarZoomLevel;
    set maxZoomLevel(value: CalendarZoomLevel);
    get min(): Date | number | string;
    set min(value: Date | number | string);
    get minZoomLevel(): CalendarZoomLevel;
    set minZoomLevel(value: CalendarZoomLevel);
    get name(): string;
    set name(value: string);
    get onDisposing(): ((e: DisposingEvent) => void);
    set onDisposing(value: ((e: DisposingEvent) => void));
    get onInitialized(): ((e: InitializedEvent) => void);
    set onInitialized(value: ((e: InitializedEvent) => void));
    get onOptionChanged(): ((e: OptionChangedEvent) => void);
    set onOptionChanged(value: ((e: OptionChangedEvent) => void));
    get onValueChanged(): ((e: ValueChangedEvent) => void);
    set onValueChanged(value: ((e: ValueChangedEvent) => void));
    get readOnly(): boolean;
    set readOnly(value: boolean);
    get rtlEnabled(): boolean;
    set rtlEnabled(value: boolean);
    get selectionMode(): CalendarSelectionMode;
    set selectionMode(value: CalendarSelectionMode);
    get selectWeekOnClick(): boolean;
    set selectWeekOnClick(value: boolean);
    get showTodayButton(): boolean;
    set showTodayButton(value: boolean);
    get showWeekNumbers(): boolean;
    set showWeekNumbers(value: boolean);
    get tabIndex(): number;
    set tabIndex(value: number);
    get validationError(): any;
    set validationError(value: any);
    get validationErrors(): Array<any>;
    set validationErrors(value: Array<any>);
    get validationMessageMode(): ValidationMessageMode;
    set validationMessageMode(value: ValidationMessageMode);
    get validationMessagePosition(): Position;
    set validationMessagePosition(value: Position);
    get validationStatus(): ValidationStatus;
    set validationStatus(value: ValidationStatus);
    get value(): Date | number | string | Array<Date | number | string>;
    set value(value: Date | number | string | Array<Date | number | string>);
    get visible(): boolean;
    set visible(value: boolean);
    get weekNumberRule(): WeekNumberRule;
    set weekNumberRule(value: WeekNumberRule);
    get width(): number | Function | string | undefined;
    set width(value: number | Function | string | undefined);
    get zoomLevel(): CalendarZoomLevel;
    set zoomLevel(value: CalendarZoomLevel);
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoCalendarOptions, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoCalendarOptions, "ng-component", never, {}, {}, never, never>;
}
