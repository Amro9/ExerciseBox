/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { DxoGanttHeaderFilterTexts } from './base/gantt-header-filter-texts';
import * as i0 from "@angular/core";
export declare class DxoTextsComponent extends DxoGanttHeaderFilterTexts implements OnDestroy, OnInit {
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoTextsComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoTextsComponent, "dxo-texts", never, { "fix": "fix"; "leftPosition": "leftPosition"; "rightPosition": "rightPosition"; "unfix": "unfix"; "addRow": "addRow"; "cancelAllChanges": "cancelAllChanges"; "cancelRowChanges": "cancelRowChanges"; "confirmDeleteMessage": "confirmDeleteMessage"; "confirmDeleteTitle": "confirmDeleteTitle"; "deleteRow": "deleteRow"; "editRow": "editRow"; "saveAllChanges": "saveAllChanges"; "saveRowChanges": "saveRowChanges"; "undeleteRow": "undeleteRow"; "validationCancelChanges": "validationCancelChanges"; "exportAll": "exportAll"; "exportSelectedRows": "exportSelectedRows"; "exportTo": "exportTo"; "clearFilter": "clearFilter"; "createFilter": "createFilter"; "filterEnabledHint": "filterEnabledHint"; "groupByThisColumn": "groupByThisColumn"; "groupContinuedMessage": "groupContinuedMessage"; "groupContinuesMessage": "groupContinuesMessage"; "ungroup": "ungroup"; "ungroupAll": "ungroupAll"; "cancel": "cancel"; "emptyValue": "emptyValue"; "ok": "ok"; "avg": "avg"; "avgOtherColumn": "avgOtherColumn"; "count": "count"; "max": "max"; "maxOtherColumn": "maxOtherColumn"; "min": "min"; "minOtherColumn": "minOtherColumn"; "sum": "sum"; "sumOtherColumn": "sumOtherColumn"; "allFields": "allFields"; "columnFields": "columnFields"; "dataFields": "dataFields"; "filterFields": "filterFields"; "rowFields": "rowFields"; "columnFieldArea": "columnFieldArea"; "dataFieldArea": "dataFieldArea"; "filterFieldArea": "filterFieldArea"; "rowFieldArea": "rowFieldArea"; "collapseAll": "collapseAll"; "dataNotAvailable": "dataNotAvailable"; "expandAll": "expandAll"; "exportToExcel": "exportToExcel"; "grandTotal": "grandTotal"; "noData": "noData"; "removeAllSorting": "removeAllSorting"; "showFieldChooser": "showFieldChooser"; "sortColumnBySummary": "sortColumnBySummary"; "sortRowBySummary": "sortRowBySummary"; "total": "total"; "addRowToNode": "addRowToNode"; }, {}, never, never>;
}
export declare class DxoTextsModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoTextsModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoTextsModule, [typeof DxoTextsComponent], never, [typeof DxoTextsComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoTextsModule>;
}
