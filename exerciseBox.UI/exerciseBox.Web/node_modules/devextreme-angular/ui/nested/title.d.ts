/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { HorizontalAlignment, VerticalEdge } from 'devextreme/common';
import { Font, TextOverflow, WordWrap } from 'devextreme/common/charts';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoTitleComponent extends NestedOption implements OnDestroy, OnInit {
    get font(): Font;
    set font(value: Font);
    get horizontalAlignment(): HorizontalAlignment | undefined;
    set horizontalAlignment(value: HorizontalAlignment | undefined);
    get margin(): {
        bottom?: number;
        left?: number;
        right?: number;
        top?: number;
    } | number;
    set margin(value: {
        bottom?: number;
        left?: number;
        right?: number;
        top?: number;
    } | number);
    get placeholderSize(): number | undefined;
    set placeholderSize(value: number | undefined);
    get subtitle(): string | {
        font?: Font;
        offset?: number;
        text?: string;
    } | {
        font?: Font;
        offset?: number;
        text?: string;
        textOverflow?: TextOverflow;
        wordWrap?: WordWrap;
    };
    set subtitle(value: string | {
        font?: Font;
        offset?: number;
        text?: string;
    } | {
        font?: Font;
        offset?: number;
        text?: string;
        textOverflow?: TextOverflow;
        wordWrap?: WordWrap;
    });
    get text(): string | undefined;
    set text(value: string | undefined);
    get verticalAlignment(): VerticalEdge;
    set verticalAlignment(value: VerticalEdge);
    get textOverflow(): TextOverflow;
    set textOverflow(value: TextOverflow);
    get wordWrap(): WordWrap;
    set wordWrap(value: WordWrap);
    get alignment(): HorizontalAlignment;
    set alignment(value: HorizontalAlignment);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoTitleComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoTitleComponent, "dxo-title", never, { "font": "font"; "horizontalAlignment": "horizontalAlignment"; "margin": "margin"; "placeholderSize": "placeholderSize"; "subtitle": "subtitle"; "text": "text"; "verticalAlignment": "verticalAlignment"; "textOverflow": "textOverflow"; "wordWrap": "wordWrap"; "alignment": "alignment"; }, {}, never, never>;
}
export declare class DxoTitleModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoTitleModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoTitleModule, [typeof DxoTitleComponent], never, [typeof DxoTitleComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoTitleModule>;
}
