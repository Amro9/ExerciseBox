/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { QueryList } from '@angular/core';
import { RouteMode } from 'devextreme/ui/map';
import { NestedOptionHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import { DxiLocationComponent } from './location-dxi';
import * as i0 from "@angular/core";
export declare class DxiRouteComponent extends CollectionNestedOption {
    get color(): string;
    set color(value: string);
    get locations(): Array<any | {
        lat?: number;
        lng?: number;
    }>;
    set locations(value: Array<any | {
        lat?: number;
        lng?: number;
    }>);
    get mode(): RouteMode;
    set mode(value: RouteMode);
    get opacity(): number;
    set opacity(value: number);
    get weight(): number;
    set weight(value: number);
    protected get _optionPath(): string;
    get locationsChildren(): QueryList<DxiLocationComponent>;
    set locationsChildren(value: QueryList<DxiLocationComponent>);
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiRouteComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiRouteComponent, "dxi-route", never, { "color": "color"; "locations": "locations"; "mode": "mode"; "opacity": "opacity"; "weight": "weight"; }, {}, ["locationsChildren"], never>;
}
export declare class DxiRouteModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiRouteModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxiRouteModule, [typeof DxiRouteComponent], never, [typeof DxiRouteComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxiRouteModule>;
}
