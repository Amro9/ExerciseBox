/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { Mode } from 'devextreme/common';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoLoadPanelComponent extends NestedOption implements OnDestroy, OnInit {
    get enabled(): Mode | boolean;
    set enabled(value: Mode | boolean);
    get height(): number;
    set height(value: number);
    get indicatorSrc(): string;
    set indicatorSrc(value: string);
    get shading(): boolean;
    set shading(value: boolean);
    get shadingColor(): string;
    set shadingColor(value: string);
    get showIndicator(): boolean;
    set showIndicator(value: boolean);
    get showPane(): boolean;
    set showPane(value: boolean);
    get text(): string;
    set text(value: string);
    get width(): number;
    set width(value: number);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoLoadPanelComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoLoadPanelComponent, "dxo-load-panel", never, { "enabled": "enabled"; "height": "height"; "indicatorSrc": "indicatorSrc"; "shading": "shading"; "shadingColor": "shadingColor"; "showIndicator": "showIndicator"; "showPane": "showPane"; "text": "text"; "width": "width"; }, {}, never, never>;
}
export declare class DxoLoadPanelModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoLoadPanelModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoLoadPanelModule, [typeof DxoLoadPanelComponent], never, [typeof DxoLoadPanelComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoLoadPanelModule>;
}
