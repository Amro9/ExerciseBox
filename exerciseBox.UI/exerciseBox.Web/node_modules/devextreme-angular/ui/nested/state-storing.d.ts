/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { StateStoreType } from 'devextreme/common/grids';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoStateStoringComponent extends NestedOption implements OnDestroy, OnInit {
    get customLoad(): Function;
    set customLoad(value: Function);
    get customSave(): Function;
    set customSave(value: Function);
    get enabled(): boolean;
    set enabled(value: boolean);
    get savingTimeout(): number;
    set savingTimeout(value: number);
    get storageKey(): string;
    set storageKey(value: string);
    get type(): StateStoreType;
    set type(value: StateStoreType);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoStateStoringComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoStateStoringComponent, "dxo-state-storing", never, { "customLoad": "customLoad"; "customSave": "customSave"; "enabled": "enabled"; "savingTimeout": "savingTimeout"; "storageKey": "storageKey"; "type": "type"; }, {}, never, never>;
}
export declare class DxoStateStoringModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoStateStoringModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoStateStoringModule, [typeof DxoStateStoringComponent], never, [typeof DxoStateStoringComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoStateStoringModule>;
}
