(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('devextreme-angular/core'), require('@angular/common')) :
  typeof define === 'function' && define.amd ? define('devextreme-angular/ui/nested', ['exports', '@angular/core', 'devextreme-angular/core', '@angular/common'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["devextreme-angular"] = global["devextreme-angular"] || {}, global["devextreme-angular"].ui = global["devextreme-angular"].ui || {}, global["devextreme-angular"].ui.nested = {}), global.ng.core, global["devextreme-angular"].core, global.ng.common));
})(this, (function (exports, i0, i1, common) { 'use strict';

  function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
      Object.keys(e).forEach(function (k) {
        if (k !== 'default') {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: true,
            get: function () { return e[k]; }
          });
        }
      });
    }
    n["default"] = e;
    return Object.freeze(n);
  }

  var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
  var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

  /******************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  /* global Reflect, Promise, SuppressedError, Symbol */
  var extendStatics = function (d, b) {
      extendStatics = Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
          function (d, b) { for (var p in b)
              if (Object.prototype.hasOwnProperty.call(b, p))
                  d[p] = b[p]; };
      return extendStatics(d, b);
  };
  function __extends(d, b) {
      if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
      extendStatics(d, b);
      function __() { this.constructor = d; }
      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  }
  var __assign = function () {
      __assign = Object.assign || function __assign(t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
              s = arguments[i];
              for (var p in s)
                  if (Object.prototype.hasOwnProperty.call(s, p))
                      t[p] = s[p];
          }
          return t;
      };
      return __assign.apply(this, arguments);
  };
  function __rest(s, e) {
      var t = {};
      for (var p in s)
          if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
              t[p] = s[p];
      if (s != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
              if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                  t[p[i]] = s[p[i]];
          }
      return t;
  }
  function __decorate(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r = Reflect.decorate(decorators, target, key, desc);
      else
          for (var i = decorators.length - 1; i >= 0; i--)
              if (d = decorators[i])
                  r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      return c > 3 && r && Object.defineProperty(target, key, r), r;
  }
  function __param(paramIndex, decorator) {
      return function (target, key) { decorator(target, key, paramIndex); };
  }
  function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
      function accept(f) { if (f !== void 0 && typeof f !== "function")
          throw new TypeError("Function expected"); return f; }
      var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
      var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
      var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
      var _, done = false;
      for (var i = decorators.length - 1; i >= 0; i--) {
          var context = {};
          for (var p in contextIn)
              context[p] = p === "access" ? {} : contextIn[p];
          for (var p in contextIn.access)
              context.access[p] = contextIn.access[p];
          context.addInitializer = function (f) { if (done)
              throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
          var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
          if (kind === "accessor") {
              if (result === void 0)
                  continue;
              if (result === null || typeof result !== "object")
                  throw new TypeError("Object expected");
              if (_ = accept(result.get))
                  descriptor.get = _;
              if (_ = accept(result.set))
                  descriptor.set = _;
              if (_ = accept(result.init))
                  initializers.unshift(_);
          }
          else if (_ = accept(result)) {
              if (kind === "field")
                  initializers.unshift(_);
              else
                  descriptor[key] = _;
          }
      }
      if (target)
          Object.defineProperty(target, contextIn.name, descriptor);
      done = true;
  }
  ;
  function __runInitializers(thisArg, initializers, value) {
      var useValue = arguments.length > 2;
      for (var i = 0; i < initializers.length; i++) {
          value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
      }
      return useValue ? value : void 0;
  }
  ;
  function __propKey(x) {
      return typeof x === "symbol" ? x : "".concat(x);
  }
  ;
  function __setFunctionName(f, name, prefix) {
      if (typeof name === "symbol")
          name = name.description ? "[".concat(name.description, "]") : "";
      return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
  }
  ;
  function __metadata(metadataKey, metadataValue) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
  }
  function __awaiter(thisArg, _arguments, P, generator) {
      function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
      return new (P || (P = Promise))(function (resolve, reject) {
          function fulfilled(value) { try {
              step(generator.next(value));
          }
          catch (e) {
              reject(e);
          } }
          function rejected(value) { try {
              step(generator["throw"](value));
          }
          catch (e) {
              reject(e);
          } }
          function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
  }
  function __generator(thisArg, body) {
      var _ = { label: 0, sent: function () { if (t[0] & 1)
              throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
      function verb(n) { return function (v) { return step([n, v]); }; }
      function step(op) {
          if (f)
              throw new TypeError("Generator is already executing.");
          while (g && (g = 0, op[0] && (_ = 0)), _)
              try {
                  if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                      return t;
                  if (y = 0, t)
                      op = [op[0] & 2, t.value];
                  switch (op[0]) {
                      case 0:
                      case 1:
                          t = op;
                          break;
                      case 4:
                          _.label++;
                          return { value: op[1], done: false };
                      case 5:
                          _.label++;
                          y = op[1];
                          op = [0];
                          continue;
                      case 7:
                          op = _.ops.pop();
                          _.trys.pop();
                          continue;
                      default:
                          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                              _ = 0;
                              continue;
                          }
                          if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                              _.label = op[1];
                              break;
                          }
                          if (op[0] === 6 && _.label < t[1]) {
                              _.label = t[1];
                              t = op;
                              break;
                          }
                          if (t && _.label < t[2]) {
                              _.label = t[2];
                              _.ops.push(op);
                              break;
                          }
                          if (t[2])
                              _.ops.pop();
                          _.trys.pop();
                          continue;
                  }
                  op = body.call(thisArg, _);
              }
              catch (e) {
                  op = [6, e];
                  y = 0;
              }
              finally {
                  f = t = 0;
              }
          if (op[0] & 5)
              throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
      }
  }
  var __createBinding = Object.create ? (function (o, m, k, k2) {
      if (k2 === undefined)
          k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function () { return m[k]; } };
      }
      Object.defineProperty(o, k2, desc);
  }) : (function (o, m, k, k2) {
      if (k2 === undefined)
          k2 = k;
      o[k2] = m[k];
  });
  function __exportStar(m, o) {
      for (var p in m)
          if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
              __createBinding(o, m, p);
  }
  function __values(o) {
      var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
      if (m)
          return m.call(o);
      if (o && typeof o.length === "number")
          return {
              next: function () {
                  if (o && i >= o.length)
                      o = void 0;
                  return { value: o && o[i++], done: !o };
              }
          };
      throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }
  function __read(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m)
          return o;
      var i = m.call(o), r, ar = [], e;
      try {
          while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
              ar.push(r.value);
      }
      catch (error) {
          e = { error: error };
      }
      finally {
          try {
              if (r && !r.done && (m = i["return"]))
                  m.call(i);
          }
          finally {
              if (e)
                  throw e.error;
          }
      }
      return ar;
  }
  /** @deprecated */
  function __spread() {
      for (var ar = [], i = 0; i < arguments.length; i++)
          ar = ar.concat(__read(arguments[i]));
      return ar;
  }
  /** @deprecated */
  function __spreadArrays() {
      for (var s = 0, i = 0, il = arguments.length; i < il; i++)
          s += arguments[i].length;
      for (var r = Array(s), k = 0, i = 0; i < il; i++)
          for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
              r[k] = a[j];
      return r;
  }
  function __spreadArray(to, from, pack) {
      if (pack || arguments.length === 2)
          for (var i = 0, l = from.length, ar; i < l; i++) {
              if (ar || !(i in from)) {
                  if (!ar)
                      ar = Array.prototype.slice.call(from, 0, i);
                  ar[i] = from[i];
              }
          }
      return to.concat(ar || Array.prototype.slice.call(from));
  }
  function __await(v) {
      return this instanceof __await ? (this.v = v, this) : new __await(v);
  }
  function __asyncGenerator(thisArg, _arguments, generator) {
      if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
      var g = generator.apply(thisArg, _arguments || []), i, q = [];
      return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
      function verb(n) { if (g[n])
          i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
      function resume(n, v) { try {
          step(g[n](v));
      }
      catch (e) {
          settle(q[0][3], e);
      } }
      function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
      function fulfill(value) { resume("next", value); }
      function reject(value) { resume("throw", value); }
      function settle(f, v) { if (f(v), q.shift(), q.length)
          resume(q[0][0], q[0][1]); }
  }
  function __asyncDelegator(o) {
      var i, p;
      return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
      function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
  }
  function __asyncValues(o) {
      if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
      var m = o[Symbol.asyncIterator], i;
      return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
      function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
      function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
  }
  function __makeTemplateObject(cooked, raw) {
      if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
      }
      else {
          cooked.raw = raw;
      }
      return cooked;
  }
  ;
  var __setModuleDefault = Object.create ? (function (o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
  }) : function (o, v) {
      o["default"] = v;
  };
  function __importStar(mod) {
      if (mod && mod.__esModule)
          return mod;
      var result = {};
      if (mod != null)
          for (var k in mod)
              if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                  __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
  }
  function __importDefault(mod) {
      return (mod && mod.__esModule) ? mod : { default: mod };
  }
  function __classPrivateFieldGet(receiver, state, kind, f) {
      if (kind === "a" && !f)
          throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
  }
  function __classPrivateFieldSet(receiver, state, value, kind, f) {
      if (kind === "m")
          throw new TypeError("Private method is not writable");
      if (kind === "a" && !f)
          throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
  }
  function __classPrivateFieldIn(state, receiver) {
      if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function"))
          throw new TypeError("Cannot use 'in' operator on non-object");
      return typeof state === "function" ? receiver === state : state.has(receiver);
  }
  function __addDisposableResource(env, value, async) {
      if (value !== null && value !== void 0) {
          if (typeof value !== "object" && typeof value !== "function")
              throw new TypeError("Object expected.");
          var dispose;
          if (async) {
              if (!Symbol.asyncDispose)
                  throw new TypeError("Symbol.asyncDispose is not defined.");
              dispose = value[Symbol.asyncDispose];
          }
          if (dispose === void 0) {
              if (!Symbol.dispose)
                  throw new TypeError("Symbol.dispose is not defined.");
              dispose = value[Symbol.dispose];
          }
          if (typeof dispose !== "function")
              throw new TypeError("Object not disposable.");
          env.stack.push({ value: value, dispose: dispose, async: async });
      }
      else if (async) {
          env.stack.push({ async: true });
      }
      return value;
  }
  var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
      var e = new Error(message);
      return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
  };
  function __disposeResources(env) {
      function fail(e) {
          env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
          env.hasError = true;
      }
      function next() {
          while (env.stack.length) {
              var rec = env.stack.pop();
              try {
                  var result = rec.dispose && rec.dispose.call(rec.value);
                  if (rec.async)
                      return Promise.resolve(result).then(next, function (e) { fail(e); return next(); });
              }
              catch (e) {
                  fail(e);
              }
          }
          if (env.hasError)
              throw env.error;
      }
      return next();
  }
  var tslib_es6 = {
      __extends: __extends,
      __assign: __assign,
      __rest: __rest,
      __decorate: __decorate,
      __param: __param,
      __metadata: __metadata,
      __awaiter: __awaiter,
      __generator: __generator,
      __createBinding: __createBinding,
      __exportStar: __exportStar,
      __values: __values,
      __read: __read,
      __spread: __spread,
      __spreadArrays: __spreadArrays,
      __spreadArray: __spreadArray,
      __await: __await,
      __asyncGenerator: __asyncGenerator,
      __asyncDelegator: __asyncDelegator,
      __asyncValues: __asyncValues,
      __makeTemplateObject: __makeTemplateObject,
      __importStar: __importStar,
      __importDefault: __importDefault,
      __classPrivateFieldGet: __classPrivateFieldGet,
      __classPrivateFieldSet: __classPrivateFieldSet,
      __classPrivateFieldIn: __classPrivateFieldIn,
      __addDisposableResource: __addDisposableResource,
      __disposeResources: __disposeResources,
  };

  var DxoAdapterComponent = /** @class */ (function (_super) {
      __extends(DxoAdapterComponent, _super);
      function DxoAdapterComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoAdapterComponent.prototype, "applyValidationResults", {
          get: function () {
              return this._getOption('applyValidationResults');
          },
          set: function (value) {
              this._setOption('applyValidationResults', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAdapterComponent.prototype, "bypass", {
          get: function () {
              return this._getOption('bypass');
          },
          set: function (value) {
              this._setOption('bypass', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAdapterComponent.prototype, "focus", {
          get: function () {
              return this._getOption('focus');
          },
          set: function (value) {
              this._setOption('focus', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAdapterComponent.prototype, "getValue", {
          get: function () {
              return this._getOption('getValue');
          },
          set: function (value) {
              this._setOption('getValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAdapterComponent.prototype, "reset", {
          get: function () {
              return this._getOption('reset');
          },
          set: function (value) {
              this._setOption('reset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAdapterComponent.prototype, "validationRequestsCallbacks", {
          get: function () {
              return this._getOption('validationRequestsCallbacks');
          },
          set: function (value) {
              this._setOption('validationRequestsCallbacks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAdapterComponent.prototype, "_optionPath", {
          get: function () {
              return 'adapter';
          },
          enumerable: false,
          configurable: true
      });
      DxoAdapterComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoAdapterComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoAdapterComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoAdapterComponent.ɵfac = function DxoAdapterComponent_Factory(t) { return new (t || DxoAdapterComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoAdapterComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoAdapterComponent, selectors: [["dxo-adapter"]], inputs: { applyValidationResults: "applyValidationResults", bypass: "bypass", focus: "focus", getValue: "getValue", reset: "reset", validationRequestsCallbacks: "validationRequestsCallbacks" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoAdapterComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAdapterComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-adapter',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { applyValidationResults: [{
                  type: i0.Input
              }], bypass: [{
                  type: i0.Input
              }], focus: [{
                  type: i0.Input
              }], getValue: [{
                  type: i0.Input
              }], reset: [{
                  type: i0.Input
              }], validationRequestsCallbacks: [{
                  type: i0.Input
              }] });
  })();
  var DxoAdapterModule = /** @class */ (function () {
      function DxoAdapterModule() {
      }
      return DxoAdapterModule;
  }());
  /** @nocollapse */ DxoAdapterModule.ɵfac = function DxoAdapterModule_Factory(t) { return new (t || DxoAdapterModule)(); };
  /** @nocollapse */ DxoAdapterModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoAdapterModule });
  /** @nocollapse */ DxoAdapterModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAdapterModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoAdapterComponent
                      ],
                      exports: [
                          DxoAdapterComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoAdapterModule, { declarations: [DxoAdapterComponent], exports: [DxoAdapterComponent] }); })();

  var DxoAdaptiveLayoutComponent = /** @class */ (function (_super) {
      __extends(DxoAdaptiveLayoutComponent, _super);
      function DxoAdaptiveLayoutComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoAdaptiveLayoutComponent.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAdaptiveLayoutComponent.prototype, "keepLabels", {
          get: function () {
              return this._getOption('keepLabels');
          },
          set: function (value) {
              this._setOption('keepLabels', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAdaptiveLayoutComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAdaptiveLayoutComponent.prototype, "_optionPath", {
          get: function () {
              return 'adaptiveLayout';
          },
          enumerable: false,
          configurable: true
      });
      DxoAdaptiveLayoutComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoAdaptiveLayoutComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoAdaptiveLayoutComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoAdaptiveLayoutComponent.ɵfac = function DxoAdaptiveLayoutComponent_Factory(t) { return new (t || DxoAdaptiveLayoutComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoAdaptiveLayoutComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoAdaptiveLayoutComponent, selectors: [["dxo-adaptive-layout"]], inputs: { height: "height", keepLabels: "keepLabels", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoAdaptiveLayoutComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAdaptiveLayoutComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-adaptive-layout',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { height: [{
                  type: i0.Input
              }], keepLabels: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoAdaptiveLayoutModule = /** @class */ (function () {
      function DxoAdaptiveLayoutModule() {
      }
      return DxoAdaptiveLayoutModule;
  }());
  /** @nocollapse */ DxoAdaptiveLayoutModule.ɵfac = function DxoAdaptiveLayoutModule_Factory(t) { return new (t || DxoAdaptiveLayoutModule)(); };
  /** @nocollapse */ DxoAdaptiveLayoutModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoAdaptiveLayoutModule });
  /** @nocollapse */ DxoAdaptiveLayoutModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAdaptiveLayoutModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoAdaptiveLayoutComponent
                      ],
                      exports: [
                          DxoAdaptiveLayoutComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoAdaptiveLayoutModule, { declarations: [DxoAdaptiveLayoutComponent], exports: [DxoAdaptiveLayoutComponent] }); })();

  var DxoAggregationIntervalComponent = /** @class */ (function (_super) {
      __extends(DxoAggregationIntervalComponent, _super);
      function DxoAggregationIntervalComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoAggregationIntervalComponent.prototype, "days", {
          get: function () {
              return this._getOption('days');
          },
          set: function (value) {
              this._setOption('days', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAggregationIntervalComponent.prototype, "hours", {
          get: function () {
              return this._getOption('hours');
          },
          set: function (value) {
              this._setOption('hours', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAggregationIntervalComponent.prototype, "milliseconds", {
          get: function () {
              return this._getOption('milliseconds');
          },
          set: function (value) {
              this._setOption('milliseconds', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAggregationIntervalComponent.prototype, "minutes", {
          get: function () {
              return this._getOption('minutes');
          },
          set: function (value) {
              this._setOption('minutes', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAggregationIntervalComponent.prototype, "months", {
          get: function () {
              return this._getOption('months');
          },
          set: function (value) {
              this._setOption('months', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAggregationIntervalComponent.prototype, "quarters", {
          get: function () {
              return this._getOption('quarters');
          },
          set: function (value) {
              this._setOption('quarters', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAggregationIntervalComponent.prototype, "seconds", {
          get: function () {
              return this._getOption('seconds');
          },
          set: function (value) {
              this._setOption('seconds', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAggregationIntervalComponent.prototype, "weeks", {
          get: function () {
              return this._getOption('weeks');
          },
          set: function (value) {
              this._setOption('weeks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAggregationIntervalComponent.prototype, "years", {
          get: function () {
              return this._getOption('years');
          },
          set: function (value) {
              this._setOption('years', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAggregationIntervalComponent.prototype, "_optionPath", {
          get: function () {
              return 'aggregationInterval';
          },
          enumerable: false,
          configurable: true
      });
      DxoAggregationIntervalComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoAggregationIntervalComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoAggregationIntervalComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoAggregationIntervalComponent.ɵfac = function DxoAggregationIntervalComponent_Factory(t) { return new (t || DxoAggregationIntervalComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoAggregationIntervalComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoAggregationIntervalComponent, selectors: [["dxo-aggregation-interval"]], inputs: { days: "days", hours: "hours", milliseconds: "milliseconds", minutes: "minutes", months: "months", quarters: "quarters", seconds: "seconds", weeks: "weeks", years: "years" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoAggregationIntervalComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAggregationIntervalComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-aggregation-interval',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { days: [{
                  type: i0.Input
              }], hours: [{
                  type: i0.Input
              }], milliseconds: [{
                  type: i0.Input
              }], minutes: [{
                  type: i0.Input
              }], months: [{
                  type: i0.Input
              }], quarters: [{
                  type: i0.Input
              }], seconds: [{
                  type: i0.Input
              }], weeks: [{
                  type: i0.Input
              }], years: [{
                  type: i0.Input
              }] });
  })();
  var DxoAggregationIntervalModule = /** @class */ (function () {
      function DxoAggregationIntervalModule() {
      }
      return DxoAggregationIntervalModule;
  }());
  /** @nocollapse */ DxoAggregationIntervalModule.ɵfac = function DxoAggregationIntervalModule_Factory(t) { return new (t || DxoAggregationIntervalModule)(); };
  /** @nocollapse */ DxoAggregationIntervalModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoAggregationIntervalModule });
  /** @nocollapse */ DxoAggregationIntervalModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAggregationIntervalModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoAggregationIntervalComponent
                      ],
                      exports: [
                          DxoAggregationIntervalComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoAggregationIntervalModule, { declarations: [DxoAggregationIntervalComponent], exports: [DxoAggregationIntervalComponent] }); })();

  var DxoAggregationComponent = /** @class */ (function (_super) {
      __extends(DxoAggregationComponent, _super);
      function DxoAggregationComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoAggregationComponent.prototype, "calculate", {
          get: function () {
              return this._getOption('calculate');
          },
          set: function (value) {
              this._setOption('calculate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAggregationComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAggregationComponent.prototype, "method", {
          get: function () {
              return this._getOption('method');
          },
          set: function (value) {
              this._setOption('method', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAggregationComponent.prototype, "_optionPath", {
          get: function () {
              return 'aggregation';
          },
          enumerable: false,
          configurable: true
      });
      DxoAggregationComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoAggregationComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoAggregationComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoAggregationComponent.ɵfac = function DxoAggregationComponent_Factory(t) { return new (t || DxoAggregationComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoAggregationComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoAggregationComponent, selectors: [["dxo-aggregation"]], inputs: { calculate: "calculate", enabled: "enabled", method: "method" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoAggregationComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAggregationComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-aggregation',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { calculate: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }], method: [{
                  type: i0.Input
              }] });
  })();
  var DxoAggregationModule = /** @class */ (function () {
      function DxoAggregationModule() {
      }
      return DxoAggregationModule;
  }());
  /** @nocollapse */ DxoAggregationModule.ɵfac = function DxoAggregationModule_Factory(t) { return new (t || DxoAggregationModule)(); };
  /** @nocollapse */ DxoAggregationModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoAggregationModule });
  /** @nocollapse */ DxoAggregationModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAggregationModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoAggregationComponent
                      ],
                      exports: [
                          DxoAggregationComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoAggregationModule, { declarations: [DxoAggregationComponent], exports: [DxoAggregationComponent] }); })();

  var DxoAnimationConfig = /** @class */ (function (_super) {
      __extends(DxoAnimationConfig, _super);
      function DxoAnimationConfig() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoAnimationConfig.prototype, "hide", {
          get: function () {
              return this._getOption('hide');
          },
          set: function (value) {
              this._setOption('hide', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationConfig.prototype, "show", {
          get: function () {
              return this._getOption('show');
          },
          set: function (value) {
              this._setOption('show', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationConfig.prototype, "duration", {
          get: function () {
              return this._getOption('duration');
          },
          set: function (value) {
              this._setOption('duration', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationConfig.prototype, "easing", {
          get: function () {
              return this._getOption('easing');
          },
          set: function (value) {
              this._setOption('easing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationConfig.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationConfig.prototype, "maxPointCountSupported", {
          get: function () {
              return this._getOption('maxPointCountSupported');
          },
          set: function (value) {
              this._setOption('maxPointCountSupported', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationConfig.prototype, "complete", {
          get: function () {
              return this._getOption('complete');
          },
          set: function (value) {
              this._setOption('complete', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationConfig.prototype, "delay", {
          get: function () {
              return this._getOption('delay');
          },
          set: function (value) {
              this._setOption('delay', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationConfig.prototype, "direction", {
          get: function () {
              return this._getOption('direction');
          },
          set: function (value) {
              this._setOption('direction', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationConfig.prototype, "from", {
          get: function () {
              return this._getOption('from');
          },
          set: function (value) {
              this._setOption('from', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationConfig.prototype, "staggerDelay", {
          get: function () {
              return this._getOption('staggerDelay');
          },
          set: function (value) {
              this._setOption('staggerDelay', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationConfig.prototype, "start", {
          get: function () {
              return this._getOption('start');
          },
          set: function (value) {
              this._setOption('start', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationConfig.prototype, "to", {
          get: function () {
              return this._getOption('to');
          },
          set: function (value) {
              this._setOption('to', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationConfig.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoAnimationConfig;
  }(i1.NestedOption));
  /** @nocollapse */ DxoAnimationConfig.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoAnimationConfig_BaseFactory; return function DxoAnimationConfig_Factory(t) { return (ɵDxoAnimationConfig_BaseFactory || (ɵDxoAnimationConfig_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoAnimationConfig)))(t || DxoAnimationConfig); }; }();
  /** @nocollapse */ DxoAnimationConfig.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoAnimationConfig, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoAnimationConfig_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAnimationConfig, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoAnimationComponent = /** @class */ (function (_super) {
      __extends(DxoAnimationComponent, _super);
      function DxoAnimationComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoAnimationComponent.prototype, "_optionPath", {
          get: function () {
              return 'animation';
          },
          enumerable: false,
          configurable: true
      });
      DxoAnimationComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoAnimationComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoAnimationComponent;
  }(DxoAnimationConfig));
  /** @nocollapse */ DxoAnimationComponent.ɵfac = function DxoAnimationComponent_Factory(t) { return new (t || DxoAnimationComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoAnimationComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoAnimationComponent, selectors: [["dxo-animation"]], inputs: { hide: "hide", show: "show", duration: "duration", easing: "easing", enabled: "enabled", maxPointCountSupported: "maxPointCountSupported", complete: "complete", delay: "delay", direction: "direction", from: "from", staggerDelay: "staggerDelay", start: "start", to: "to", type: "type" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoAnimationComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAnimationComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-animation',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'hide',
                          'show',
                          'duration',
                          'easing',
                          'enabled',
                          'maxPointCountSupported',
                          'complete',
                          'delay',
                          'direction',
                          'from',
                          'staggerDelay',
                          'start',
                          'to',
                          'type'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoAnimationModule = /** @class */ (function () {
      function DxoAnimationModule() {
      }
      return DxoAnimationModule;
  }());
  /** @nocollapse */ DxoAnimationModule.ɵfac = function DxoAnimationModule_Factory(t) { return new (t || DxoAnimationModule)(); };
  /** @nocollapse */ DxoAnimationModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoAnimationModule });
  /** @nocollapse */ DxoAnimationModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAnimationModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoAnimationComponent
                      ],
                      exports: [
                          DxoAnimationComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoAnimationModule, { declarations: [DxoAnimationComponent], exports: [DxoAnimationComponent] }); })();

  var DxiChartAnnotationConfig = /** @class */ (function (_super) {
      __extends(DxiChartAnnotationConfig, _super);
      function DxiChartAnnotationConfig() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "allowDragging", {
          get: function () {
              return this._getOption('allowDragging');
          },
          set: function (value) {
              this._setOption('allowDragging', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "argument", {
          get: function () {
              return this._getOption('argument');
          },
          set: function (value) {
              this._setOption('argument', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "arrowLength", {
          get: function () {
              return this._getOption('arrowLength');
          },
          set: function (value) {
              this._setOption('arrowLength', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "arrowWidth", {
          get: function () {
              return this._getOption('arrowWidth');
          },
          set: function (value) {
              this._setOption('arrowWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "axis", {
          get: function () {
              return this._getOption('axis');
          },
          set: function (value) {
              this._setOption('axis', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "customizeTooltip", {
          get: function () {
              return this._getOption('customizeTooltip');
          },
          set: function (value) {
              this._setOption('customizeTooltip', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "data", {
          get: function () {
              return this._getOption('data');
          },
          set: function (value) {
              this._setOption('data', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "description", {
          get: function () {
              return this._getOption('description');
          },
          set: function (value) {
              this._setOption('description', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "font", {
          get: function () {
              return this._getOption('font');
          },
          set: function (value) {
              this._setOption('font', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "image", {
          get: function () {
              return this._getOption('image');
          },
          set: function (value) {
              this._setOption('image', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "offsetX", {
          get: function () {
              return this._getOption('offsetX');
          },
          set: function (value) {
              this._setOption('offsetX', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "offsetY", {
          get: function () {
              return this._getOption('offsetY');
          },
          set: function (value) {
              this._setOption('offsetY', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "paddingLeftRight", {
          get: function () {
              return this._getOption('paddingLeftRight');
          },
          set: function (value) {
              this._setOption('paddingLeftRight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "paddingTopBottom", {
          get: function () {
              return this._getOption('paddingTopBottom');
          },
          set: function (value) {
              this._setOption('paddingTopBottom', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "series", {
          get: function () {
              return this._getOption('series');
          },
          set: function (value) {
              this._setOption('series', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "shadow", {
          get: function () {
              return this._getOption('shadow');
          },
          set: function (value) {
              this._setOption('shadow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "template", {
          get: function () {
              return this._getOption('template');
          },
          set: function (value) {
              this._setOption('template', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "textOverflow", {
          get: function () {
              return this._getOption('textOverflow');
          },
          set: function (value) {
              this._setOption('textOverflow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "tooltipEnabled", {
          get: function () {
              return this._getOption('tooltipEnabled');
          },
          set: function (value) {
              this._setOption('tooltipEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "tooltipTemplate", {
          get: function () {
              return this._getOption('tooltipTemplate');
          },
          set: function (value) {
              this._setOption('tooltipTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "value", {
          get: function () {
              return this._getOption('value');
          },
          set: function (value) {
              this._setOption('value', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "wordWrap", {
          get: function () {
              return this._getOption('wordWrap');
          },
          set: function (value) {
              this._setOption('wordWrap', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "x", {
          get: function () {
              return this._getOption('x');
          },
          set: function (value) {
              this._setOption('x', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "y", {
          get: function () {
              return this._getOption('y');
          },
          set: function (value) {
              this._setOption('y', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "location", {
          get: function () {
              return this._getOption('location');
          },
          set: function (value) {
              this._setOption('location', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "angle", {
          get: function () {
              return this._getOption('angle');
          },
          set: function (value) {
              this._setOption('angle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "radius", {
          get: function () {
              return this._getOption('radius');
          },
          set: function (value) {
              this._setOption('radius', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartAnnotationConfig.prototype, "coordinates", {
          get: function () {
              return this._getOption('coordinates');
          },
          set: function (value) {
              this._setOption('coordinates', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiChartAnnotationConfig;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiChartAnnotationConfig.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiChartAnnotationConfig_BaseFactory; return function DxiChartAnnotationConfig_Factory(t) { return (ɵDxiChartAnnotationConfig_BaseFactory || (ɵDxiChartAnnotationConfig_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiChartAnnotationConfig)))(t || DxiChartAnnotationConfig); }; }();
  /** @nocollapse */ DxiChartAnnotationConfig.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiChartAnnotationConfig, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiChartAnnotationConfig_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiChartAnnotationConfig, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiAnnotationComponent = /** @class */ (function (_super) {
      __extends(DxiAnnotationComponent, _super);
      function DxiAnnotationComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiAnnotationComponent.prototype, "_optionPath", {
          get: function () {
              return 'annotations';
          },
          enumerable: false,
          configurable: true
      });
      DxiAnnotationComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiAnnotationComponent;
  }(DxiChartAnnotationConfig));
  /** @nocollapse */ DxiAnnotationComponent.ɵfac = function DxiAnnotationComponent_Factory(t) { return new (t || DxiAnnotationComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiAnnotationComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiAnnotationComponent, selectors: [["dxi-annotation"]], inputs: { allowDragging: "allowDragging", argument: "argument", arrowLength: "arrowLength", arrowWidth: "arrowWidth", axis: "axis", border: "border", color: "color", customizeTooltip: "customizeTooltip", data: "data", description: "description", font: "font", height: "height", image: "image", name: "name", offsetX: "offsetX", offsetY: "offsetY", opacity: "opacity", paddingLeftRight: "paddingLeftRight", paddingTopBottom: "paddingTopBottom", series: "series", shadow: "shadow", template: "template", text: "text", textOverflow: "textOverflow", tooltipEnabled: "tooltipEnabled", tooltipTemplate: "tooltipTemplate", type: "type", value: "value", width: "width", wordWrap: "wordWrap", x: "x", y: "y", location: "location", angle: "angle", radius: "radius", coordinates: "coordinates" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiAnnotationComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiAnnotationComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-annotation',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'allowDragging',
                          'argument',
                          'arrowLength',
                          'arrowWidth',
                          'axis',
                          'border',
                          'color',
                          'customizeTooltip',
                          'data',
                          'description',
                          'font',
                          'height',
                          'image',
                          'name',
                          'offsetX',
                          'offsetY',
                          'opacity',
                          'paddingLeftRight',
                          'paddingTopBottom',
                          'series',
                          'shadow',
                          'template',
                          'text',
                          'textOverflow',
                          'tooltipEnabled',
                          'tooltipTemplate',
                          'type',
                          'value',
                          'width',
                          'wordWrap',
                          'x',
                          'y',
                          'location',
                          'angle',
                          'radius',
                          'coordinates'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxiAnnotationModule = /** @class */ (function () {
      function DxiAnnotationModule() {
      }
      return DxiAnnotationModule;
  }());
  /** @nocollapse */ DxiAnnotationModule.ɵfac = function DxiAnnotationModule_Factory(t) { return new (t || DxiAnnotationModule)(); };
  /** @nocollapse */ DxiAnnotationModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiAnnotationModule });
  /** @nocollapse */ DxiAnnotationModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiAnnotationModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiAnnotationComponent
                      ],
                      exports: [
                          DxiAnnotationComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiAnnotationModule, { declarations: [DxiAnnotationComponent], exports: [DxiAnnotationComponent] }); })();

  var DxoApiKeyComponent = /** @class */ (function (_super) {
      __extends(DxoApiKeyComponent, _super);
      function DxoApiKeyComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoApiKeyComponent.prototype, "bing", {
          get: function () {
              return this._getOption('bing');
          },
          set: function (value) {
              this._setOption('bing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoApiKeyComponent.prototype, "google", {
          get: function () {
              return this._getOption('google');
          },
          set: function (value) {
              this._setOption('google', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoApiKeyComponent.prototype, "googleStatic", {
          get: function () {
              return this._getOption('googleStatic');
          },
          set: function (value) {
              this._setOption('googleStatic', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoApiKeyComponent.prototype, "_optionPath", {
          get: function () {
              return 'apiKey';
          },
          enumerable: false,
          configurable: true
      });
      DxoApiKeyComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoApiKeyComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoApiKeyComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoApiKeyComponent.ɵfac = function DxoApiKeyComponent_Factory(t) { return new (t || DxoApiKeyComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoApiKeyComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoApiKeyComponent, selectors: [["dxo-api-key"]], inputs: { bing: "bing", google: "google", googleStatic: "googleStatic" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoApiKeyComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoApiKeyComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-api-key',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { bing: [{
                  type: i0.Input
              }], google: [{
                  type: i0.Input
              }], googleStatic: [{
                  type: i0.Input
              }] });
  })();
  var DxoApiKeyModule = /** @class */ (function () {
      function DxoApiKeyModule() {
      }
      return DxoApiKeyModule;
  }());
  /** @nocollapse */ DxoApiKeyModule.ɵfac = function DxoApiKeyModule_Factory(t) { return new (t || DxoApiKeyModule)(); };
  /** @nocollapse */ DxoApiKeyModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoApiKeyModule });
  /** @nocollapse */ DxoApiKeyModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoApiKeyModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoApiKeyComponent
                      ],
                      exports: [
                          DxoApiKeyComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoApiKeyModule, { declarations: [DxoApiKeyComponent], exports: [DxoApiKeyComponent] }); })();

  var DxoAppointmentDraggingComponent = /** @class */ (function (_super) {
      __extends(DxoAppointmentDraggingComponent, _super);
      function DxoAppointmentDraggingComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "autoScroll", {
          get: function () {
              return this._getOption('autoScroll');
          },
          set: function (value) {
              this._setOption('autoScroll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "data", {
          get: function () {
              return this._getOption('data');
          },
          set: function (value) {
              this._setOption('data', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "group", {
          get: function () {
              return this._getOption('group');
          },
          set: function (value) {
              this._setOption('group', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "onAdd", {
          get: function () {
              return this._getOption('onAdd');
          },
          set: function (value) {
              this._setOption('onAdd', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "onDragEnd", {
          get: function () {
              return this._getOption('onDragEnd');
          },
          set: function (value) {
              this._setOption('onDragEnd', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "onDragMove", {
          get: function () {
              return this._getOption('onDragMove');
          },
          set: function (value) {
              this._setOption('onDragMove', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "onDragStart", {
          get: function () {
              return this._getOption('onDragStart');
          },
          set: function (value) {
              this._setOption('onDragStart', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "onRemove", {
          get: function () {
              return this._getOption('onRemove');
          },
          set: function (value) {
              this._setOption('onRemove', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "scrollSensitivity", {
          get: function () {
              return this._getOption('scrollSensitivity');
          },
          set: function (value) {
              this._setOption('scrollSensitivity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "scrollSpeed", {
          get: function () {
              return this._getOption('scrollSpeed');
          },
          set: function (value) {
              this._setOption('scrollSpeed', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAppointmentDraggingComponent.prototype, "_optionPath", {
          get: function () {
              return 'appointmentDragging';
          },
          enumerable: false,
          configurable: true
      });
      DxoAppointmentDraggingComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoAppointmentDraggingComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoAppointmentDraggingComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoAppointmentDraggingComponent.ɵfac = function DxoAppointmentDraggingComponent_Factory(t) { return new (t || DxoAppointmentDraggingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoAppointmentDraggingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoAppointmentDraggingComponent, selectors: [["dxo-appointment-dragging"]], inputs: { autoScroll: "autoScroll", data: "data", group: "group", onAdd: "onAdd", onDragEnd: "onDragEnd", onDragMove: "onDragMove", onDragStart: "onDragStart", onRemove: "onRemove", scrollSensitivity: "scrollSensitivity", scrollSpeed: "scrollSpeed" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoAppointmentDraggingComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAppointmentDraggingComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-appointment-dragging',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { autoScroll: [{
                  type: i0.Input
              }], data: [{
                  type: i0.Input
              }], group: [{
                  type: i0.Input
              }], onAdd: [{
                  type: i0.Input
              }], onDragEnd: [{
                  type: i0.Input
              }], onDragMove: [{
                  type: i0.Input
              }], onDragStart: [{
                  type: i0.Input
              }], onRemove: [{
                  type: i0.Input
              }], scrollSensitivity: [{
                  type: i0.Input
              }], scrollSpeed: [{
                  type: i0.Input
              }] });
  })();
  var DxoAppointmentDraggingModule = /** @class */ (function () {
      function DxoAppointmentDraggingModule() {
      }
      return DxoAppointmentDraggingModule;
  }());
  /** @nocollapse */ DxoAppointmentDraggingModule.ɵfac = function DxoAppointmentDraggingModule_Factory(t) { return new (t || DxoAppointmentDraggingModule)(); };
  /** @nocollapse */ DxoAppointmentDraggingModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoAppointmentDraggingModule });
  /** @nocollapse */ DxoAppointmentDraggingModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAppointmentDraggingModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoAppointmentDraggingComponent
                      ],
                      exports: [
                          DxoAppointmentDraggingComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoAppointmentDraggingModule, { declarations: [DxoAppointmentDraggingComponent], exports: [DxoAppointmentDraggingComponent] }); })();

  var DxoChartCommonSeriesSettings = /** @class */ (function (_super) {
      __extends(DxoChartCommonSeriesSettings, _super);
      function DxoChartCommonSeriesSettings() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "aggregation", {
          get: function () {
              return this._getOption('aggregation');
          },
          set: function (value) {
              this._setOption('aggregation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "area", {
          get: function () {
              return this._getOption('area');
          },
          set: function (value) {
              this._setOption('area', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "argumentField", {
          get: function () {
              return this._getOption('argumentField');
          },
          set: function (value) {
              this._setOption('argumentField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "axis", {
          get: function () {
              return this._getOption('axis');
          },
          set: function (value) {
              this._setOption('axis', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "bar", {
          get: function () {
              return this._getOption('bar');
          },
          set: function (value) {
              this._setOption('bar', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "barOverlapGroup", {
          get: function () {
              return this._getOption('barOverlapGroup');
          },
          set: function (value) {
              this._setOption('barOverlapGroup', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "barPadding", {
          get: function () {
              return this._getOption('barPadding');
          },
          set: function (value) {
              this._setOption('barPadding', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "barWidth", {
          get: function () {
              return this._getOption('barWidth');
          },
          set: function (value) {
              this._setOption('barWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "bubble", {
          get: function () {
              return this._getOption('bubble');
          },
          set: function (value) {
              this._setOption('bubble', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "candlestick", {
          get: function () {
              return this._getOption('candlestick');
          },
          set: function (value) {
              this._setOption('candlestick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "closeValueField", {
          get: function () {
              return this._getOption('closeValueField');
          },
          set: function (value) {
              this._setOption('closeValueField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "cornerRadius", {
          get: function () {
              return this._getOption('cornerRadius');
          },
          set: function (value) {
              this._setOption('cornerRadius', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "dashStyle", {
          get: function () {
              return this._getOption('dashStyle');
          },
          set: function (value) {
              this._setOption('dashStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedarea", {
          get: function () {
              return this._getOption('fullstackedarea');
          },
          set: function (value) {
              this._setOption('fullstackedarea', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedbar", {
          get: function () {
              return this._getOption('fullstackedbar');
          },
          set: function (value) {
              this._setOption('fullstackedbar', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedline", {
          get: function () {
              return this._getOption('fullstackedline');
          },
          set: function (value) {
              this._setOption('fullstackedline', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedspline", {
          get: function () {
              return this._getOption('fullstackedspline');
          },
          set: function (value) {
              this._setOption('fullstackedspline', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedsplinearea", {
          get: function () {
              return this._getOption('fullstackedsplinearea');
          },
          set: function (value) {
              this._setOption('fullstackedsplinearea', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "highValueField", {
          get: function () {
              return this._getOption('highValueField');
          },
          set: function (value) {
              this._setOption('highValueField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "hoverMode", {
          get: function () {
              return this._getOption('hoverMode');
          },
          set: function (value) {
              this._setOption('hoverMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "hoverStyle", {
          get: function () {
              return this._getOption('hoverStyle');
          },
          set: function (value) {
              this._setOption('hoverStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "ignoreEmptyPoints", {
          get: function () {
              return this._getOption('ignoreEmptyPoints');
          },
          set: function (value) {
              this._setOption('ignoreEmptyPoints', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "innerColor", {
          get: function () {
              return this._getOption('innerColor');
          },
          set: function (value) {
              this._setOption('innerColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "line", {
          get: function () {
              return this._getOption('line');
          },
          set: function (value) {
              this._setOption('line', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "lowValueField", {
          get: function () {
              return this._getOption('lowValueField');
          },
          set: function (value) {
              this._setOption('lowValueField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "maxLabelCount", {
          get: function () {
              return this._getOption('maxLabelCount');
          },
          set: function (value) {
              this._setOption('maxLabelCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "minBarSize", {
          get: function () {
              return this._getOption('minBarSize');
          },
          set: function (value) {
              this._setOption('minBarSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "openValueField", {
          get: function () {
              return this._getOption('openValueField');
          },
          set: function (value) {
              this._setOption('openValueField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "pane", {
          get: function () {
              return this._getOption('pane');
          },
          set: function (value) {
              this._setOption('pane', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "point", {
          get: function () {
              return this._getOption('point');
          },
          set: function (value) {
              this._setOption('point', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "rangearea", {
          get: function () {
              return this._getOption('rangearea');
          },
          set: function (value) {
              this._setOption('rangearea', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "rangebar", {
          get: function () {
              return this._getOption('rangebar');
          },
          set: function (value) {
              this._setOption('rangebar', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "rangeValue1Field", {
          get: function () {
              return this._getOption('rangeValue1Field');
          },
          set: function (value) {
              this._setOption('rangeValue1Field', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "rangeValue2Field", {
          get: function () {
              return this._getOption('rangeValue2Field');
          },
          set: function (value) {
              this._setOption('rangeValue2Field', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "reduction", {
          get: function () {
              return this._getOption('reduction');
          },
          set: function (value) {
              this._setOption('reduction', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "scatter", {
          get: function () {
              return this._getOption('scatter');
          },
          set: function (value) {
              this._setOption('scatter', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "selectionMode", {
          get: function () {
              return this._getOption('selectionMode');
          },
          set: function (value) {
              this._setOption('selectionMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "selectionStyle", {
          get: function () {
              return this._getOption('selectionStyle');
          },
          set: function (value) {
              this._setOption('selectionStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "showInLegend", {
          get: function () {
              return this._getOption('showInLegend');
          },
          set: function (value) {
              this._setOption('showInLegend', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "sizeField", {
          get: function () {
              return this._getOption('sizeField');
          },
          set: function (value) {
              this._setOption('sizeField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "spline", {
          get: function () {
              return this._getOption('spline');
          },
          set: function (value) {
              this._setOption('spline', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "splinearea", {
          get: function () {
              return this._getOption('splinearea');
          },
          set: function (value) {
              this._setOption('splinearea', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stack", {
          get: function () {
              return this._getOption('stack');
          },
          set: function (value) {
              this._setOption('stack', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedarea", {
          get: function () {
              return this._getOption('stackedarea');
          },
          set: function (value) {
              this._setOption('stackedarea', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedbar", {
          get: function () {
              return this._getOption('stackedbar');
          },
          set: function (value) {
              this._setOption('stackedbar', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedline", {
          get: function () {
              return this._getOption('stackedline');
          },
          set: function (value) {
              this._setOption('stackedline', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedspline", {
          get: function () {
              return this._getOption('stackedspline');
          },
          set: function (value) {
              this._setOption('stackedspline', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedsplinearea", {
          get: function () {
              return this._getOption('stackedsplinearea');
          },
          set: function (value) {
              this._setOption('stackedsplinearea', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "steparea", {
          get: function () {
              return this._getOption('steparea');
          },
          set: function (value) {
              this._setOption('steparea', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stepline", {
          get: function () {
              return this._getOption('stepline');
          },
          set: function (value) {
              this._setOption('stepline', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stock", {
          get: function () {
              return this._getOption('stock');
          },
          set: function (value) {
              this._setOption('stock', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "tagField", {
          get: function () {
              return this._getOption('tagField');
          },
          set: function (value) {
              this._setOption('tagField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "valueErrorBar", {
          get: function () {
              return this._getOption('valueErrorBar');
          },
          set: function (value) {
              this._setOption('valueErrorBar', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "valueField", {
          get: function () {
              return this._getOption('valueField');
          },
          set: function (value) {
              this._setOption('valueField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "argumentType", {
          get: function () {
              return this._getOption('argumentType');
          },
          set: function (value) {
              this._setOption('argumentType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "minSegmentSize", {
          get: function () {
              return this._getOption('minSegmentSize');
          },
          set: function (value) {
              this._setOption('minSegmentSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "smallValuesGrouping", {
          get: function () {
              return this._getOption('smallValuesGrouping');
          },
          set: function (value) {
              this._setOption('smallValuesGrouping', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "closed", {
          get: function () {
              return this._getOption('closed');
          },
          set: function (value) {
              this._setOption('closed', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoChartCommonSeriesSettings;
  }(i1.NestedOption));
  /** @nocollapse */ DxoChartCommonSeriesSettings.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoChartCommonSeriesSettings_BaseFactory; return function DxoChartCommonSeriesSettings_Factory(t) { return (ɵDxoChartCommonSeriesSettings_BaseFactory || (ɵDxoChartCommonSeriesSettings_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoChartCommonSeriesSettings)))(t || DxoChartCommonSeriesSettings); }; }();
  /** @nocollapse */ DxoChartCommonSeriesSettings.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoChartCommonSeriesSettings, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoChartCommonSeriesSettings_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoChartCommonSeriesSettings, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoAreaComponent = /** @class */ (function (_super) {
      __extends(DxoAreaComponent, _super);
      function DxoAreaComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoAreaComponent.prototype, "_optionPath", {
          get: function () {
              return 'area';
          },
          enumerable: false,
          configurable: true
      });
      DxoAreaComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoAreaComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoAreaComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoAreaComponent.ɵfac = function DxoAreaComponent_Factory(t) { return new (t || DxoAreaComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoAreaComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoAreaComponent, selectors: [["dxo-area"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width", closed: "closed" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoAreaComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAreaComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-area',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width',
                          'closed'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoAreaModule = /** @class */ (function () {
      function DxoAreaModule() {
      }
      return DxoAreaModule;
  }());
  /** @nocollapse */ DxoAreaModule.ɵfac = function DxoAreaModule_Factory(t) { return new (t || DxoAreaModule)(); };
  /** @nocollapse */ DxoAreaModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoAreaModule });
  /** @nocollapse */ DxoAreaModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAreaModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoAreaComponent
                      ],
                      exports: [
                          DxoAreaComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoAreaModule, { declarations: [DxoAreaComponent], exports: [DxoAreaComponent] }); })();

  var DxiVizScaleBreak = /** @class */ (function (_super) {
      __extends(DxiVizScaleBreak, _super);
      function DxiVizScaleBreak() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiVizScaleBreak.prototype, "endValue", {
          get: function () {
              return this._getOption('endValue');
          },
          set: function (value) {
              this._setOption('endValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiVizScaleBreak.prototype, "startValue", {
          get: function () {
              return this._getOption('startValue');
          },
          set: function (value) {
              this._setOption('startValue', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiVizScaleBreak;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiVizScaleBreak.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiVizScaleBreak_BaseFactory; return function DxiVizScaleBreak_Factory(t) { return (ɵDxiVizScaleBreak_BaseFactory || (ɵDxiVizScaleBreak_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiVizScaleBreak)))(t || DxiVizScaleBreak); }; }();
  /** @nocollapse */ DxiVizScaleBreak.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiVizScaleBreak, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiVizScaleBreak_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiVizScaleBreak, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiBreakComponent = /** @class */ (function (_super) {
      __extends(DxiBreakComponent, _super);
      function DxiBreakComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiBreakComponent.prototype, "_optionPath", {
          get: function () {
              return 'breaks';
          },
          enumerable: false,
          configurable: true
      });
      DxiBreakComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiBreakComponent;
  }(DxiVizScaleBreak));
  /** @nocollapse */ DxiBreakComponent.ɵfac = function DxiBreakComponent_Factory(t) { return new (t || DxiBreakComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiBreakComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiBreakComponent, selectors: [["dxi-break"]], inputs: { endValue: "endValue", startValue: "startValue" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiBreakComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiBreakComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-break',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'endValue',
                          'startValue'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxiBreakModule = /** @class */ (function () {
      function DxiBreakModule() {
      }
      return DxiBreakModule;
  }());
  /** @nocollapse */ DxiBreakModule.ɵfac = function DxiBreakModule_Factory(t) { return new (t || DxiBreakModule)(); };
  /** @nocollapse */ DxiBreakModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiBreakModule });
  /** @nocollapse */ DxiBreakModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiBreakModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiBreakComponent
                      ],
                      exports: [
                          DxiBreakComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiBreakModule, { declarations: [DxiBreakComponent], exports: [DxiBreakComponent] }); })();

  var DxiConstantLineComponent = /** @class */ (function (_super) {
      __extends(DxiConstantLineComponent, _super);
      function DxiConstantLineComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiConstantLineComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiConstantLineComponent.prototype, "dashStyle", {
          get: function () {
              return this._getOption('dashStyle');
          },
          set: function (value) {
              this._setOption('dashStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiConstantLineComponent.prototype, "displayBehindSeries", {
          get: function () {
              return this._getOption('displayBehindSeries');
          },
          set: function (value) {
              this._setOption('displayBehindSeries', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiConstantLineComponent.prototype, "extendAxis", {
          get: function () {
              return this._getOption('extendAxis');
          },
          set: function (value) {
              this._setOption('extendAxis', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiConstantLineComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiConstantLineComponent.prototype, "paddingLeftRight", {
          get: function () {
              return this._getOption('paddingLeftRight');
          },
          set: function (value) {
              this._setOption('paddingLeftRight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiConstantLineComponent.prototype, "paddingTopBottom", {
          get: function () {
              return this._getOption('paddingTopBottom');
          },
          set: function (value) {
              this._setOption('paddingTopBottom', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiConstantLineComponent.prototype, "value", {
          get: function () {
              return this._getOption('value');
          },
          set: function (value) {
              this._setOption('value', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiConstantLineComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiConstantLineComponent.prototype, "_optionPath", {
          get: function () {
              return 'constantLines';
          },
          enumerable: false,
          configurable: true
      });
      DxiConstantLineComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiConstantLineComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiConstantLineComponent.ɵfac = function DxiConstantLineComponent_Factory(t) { return new (t || DxiConstantLineComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiConstantLineComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiConstantLineComponent, selectors: [["dxi-constant-line"]], inputs: { color: "color", dashStyle: "dashStyle", displayBehindSeries: "displayBehindSeries", extendAxis: "extendAxis", label: "label", paddingLeftRight: "paddingLeftRight", paddingTopBottom: "paddingTopBottom", value: "value", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiConstantLineComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiConstantLineComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-constant-line',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], dashStyle: [{
                  type: i0.Input
              }], displayBehindSeries: [{
                  type: i0.Input
              }], extendAxis: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], paddingLeftRight: [{
                  type: i0.Input
              }], paddingTopBottom: [{
                  type: i0.Input
              }], value: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxiConstantLineModule = /** @class */ (function () {
      function DxiConstantLineModule() {
      }
      return DxiConstantLineModule;
  }());
  /** @nocollapse */ DxiConstantLineModule.ɵfac = function DxiConstantLineModule_Factory(t) { return new (t || DxiConstantLineModule)(); };
  /** @nocollapse */ DxiConstantLineModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiConstantLineModule });
  /** @nocollapse */ DxiConstantLineModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiConstantLineModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiConstantLineComponent
                      ],
                      exports: [
                          DxiConstantLineComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiConstantLineModule, { declarations: [DxiConstantLineComponent], exports: [DxiConstantLineComponent] }); })();

  var DxiStripComponent = /** @class */ (function (_super) {
      __extends(DxiStripComponent, _super);
      function DxiStripComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiStripComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiStripComponent.prototype, "endValue", {
          get: function () {
              return this._getOption('endValue');
          },
          set: function (value) {
              this._setOption('endValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiStripComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiStripComponent.prototype, "paddingLeftRight", {
          get: function () {
              return this._getOption('paddingLeftRight');
          },
          set: function (value) {
              this._setOption('paddingLeftRight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiStripComponent.prototype, "paddingTopBottom", {
          get: function () {
              return this._getOption('paddingTopBottom');
          },
          set: function (value) {
              this._setOption('paddingTopBottom', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiStripComponent.prototype, "startValue", {
          get: function () {
              return this._getOption('startValue');
          },
          set: function (value) {
              this._setOption('startValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiStripComponent.prototype, "_optionPath", {
          get: function () {
              return 'strips';
          },
          enumerable: false,
          configurable: true
      });
      DxiStripComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiStripComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiStripComponent.ɵfac = function DxiStripComponent_Factory(t) { return new (t || DxiStripComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiStripComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiStripComponent, selectors: [["dxi-strip"]], inputs: { color: "color", endValue: "endValue", label: "label", paddingLeftRight: "paddingLeftRight", paddingTopBottom: "paddingTopBottom", startValue: "startValue" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiStripComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiStripComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-strip',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], endValue: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], paddingLeftRight: [{
                  type: i0.Input
              }], paddingTopBottom: [{
                  type: i0.Input
              }], startValue: [{
                  type: i0.Input
              }] });
  })();
  var DxiStripModule = /** @class */ (function () {
      function DxiStripModule() {
      }
      return DxiStripModule;
  }());
  /** @nocollapse */ DxiStripModule.ɵfac = function DxiStripModule_Factory(t) { return new (t || DxiStripModule)(); };
  /** @nocollapse */ DxiStripModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiStripModule });
  /** @nocollapse */ DxiStripModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiStripModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiStripComponent
                      ],
                      exports: [
                          DxiStripComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiStripModule, { declarations: [DxiStripComponent], exports: [DxiStripComponent] }); })();

  var DxoArgumentAxisComponent = /** @class */ (function (_super) {
      __extends(DxoArgumentAxisComponent, _super);
      function DxoArgumentAxisComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'categoriesChange' },
              { emit: 'visualRangeChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "aggregateByCategory", {
          get: function () {
              return this._getOption('aggregateByCategory');
          },
          set: function (value) {
              this._setOption('aggregateByCategory', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "aggregatedPointsPosition", {
          get: function () {
              return this._getOption('aggregatedPointsPosition');
          },
          set: function (value) {
              this._setOption('aggregatedPointsPosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "aggregationGroupWidth", {
          get: function () {
              return this._getOption('aggregationGroupWidth');
          },
          set: function (value) {
              this._setOption('aggregationGroupWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "aggregationInterval", {
          get: function () {
              return this._getOption('aggregationInterval');
          },
          set: function (value) {
              this._setOption('aggregationInterval', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "allowDecimals", {
          get: function () {
              return this._getOption('allowDecimals');
          },
          set: function (value) {
              this._setOption('allowDecimals', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "argumentType", {
          get: function () {
              return this._getOption('argumentType');
          },
          set: function (value) {
              this._setOption('argumentType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "axisDivisionFactor", {
          get: function () {
              return this._getOption('axisDivisionFactor');
          },
          set: function (value) {
              this._setOption('axisDivisionFactor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "breaks", {
          get: function () {
              return this._getOption('breaks');
          },
          set: function (value) {
              this._setOption('breaks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "breakStyle", {
          get: function () {
              return this._getOption('breakStyle');
          },
          set: function (value) {
              this._setOption('breakStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "categories", {
          get: function () {
              return this._getOption('categories');
          },
          set: function (value) {
              this._setOption('categories', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "constantLines", {
          get: function () {
              return this._getOption('constantLines');
          },
          set: function (value) {
              this._setOption('constantLines', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "constantLineStyle", {
          get: function () {
              return this._getOption('constantLineStyle');
          },
          set: function (value) {
              this._setOption('constantLineStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "customPosition", {
          get: function () {
              return this._getOption('customPosition');
          },
          set: function (value) {
              this._setOption('customPosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "customPositionAxis", {
          get: function () {
              return this._getOption('customPositionAxis');
          },
          set: function (value) {
              this._setOption('customPositionAxis', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "discreteAxisDivisionMode", {
          get: function () {
              return this._getOption('discreteAxisDivisionMode');
          },
          set: function (value) {
              this._setOption('discreteAxisDivisionMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "endOnTick", {
          get: function () {
              return this._getOption('endOnTick');
          },
          set: function (value) {
              this._setOption('endOnTick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "grid", {
          get: function () {
              return this._getOption('grid');
          },
          set: function (value) {
              this._setOption('grid', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "holidays", {
          get: function () {
              return this._getOption('holidays');
          },
          set: function (value) {
              this._setOption('holidays', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "hoverMode", {
          get: function () {
              return this._getOption('hoverMode');
          },
          set: function (value) {
              this._setOption('hoverMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "inverted", {
          get: function () {
              return this._getOption('inverted');
          },
          set: function (value) {
              this._setOption('inverted', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "linearThreshold", {
          get: function () {
              return this._getOption('linearThreshold');
          },
          set: function (value) {
              this._setOption('linearThreshold', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "logarithmBase", {
          get: function () {
              return this._getOption('logarithmBase');
          },
          set: function (value) {
              this._setOption('logarithmBase', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "maxValueMargin", {
          get: function () {
              return this._getOption('maxValueMargin');
          },
          set: function (value) {
              this._setOption('maxValueMargin', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "minorGrid", {
          get: function () {
              return this._getOption('minorGrid');
          },
          set: function (value) {
              this._setOption('minorGrid', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "minorTick", {
          get: function () {
              return this._getOption('minorTick');
          },
          set: function (value) {
              this._setOption('minorTick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "minorTickCount", {
          get: function () {
              return this._getOption('minorTickCount');
          },
          set: function (value) {
              this._setOption('minorTickCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "minorTickInterval", {
          get: function () {
              return this._getOption('minorTickInterval');
          },
          set: function (value) {
              this._setOption('minorTickInterval', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "minValueMargin", {
          get: function () {
              return this._getOption('minValueMargin');
          },
          set: function (value) {
              this._setOption('minValueMargin', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "minVisualRangeLength", {
          get: function () {
              return this._getOption('minVisualRangeLength');
          },
          set: function (value) {
              this._setOption('minVisualRangeLength', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "offset", {
          get: function () {
              return this._getOption('offset');
          },
          set: function (value) {
              this._setOption('offset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "placeholderSize", {
          get: function () {
              return this._getOption('placeholderSize');
          },
          set: function (value) {
              this._setOption('placeholderSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "position", {
          get: function () {
              return this._getOption('position');
          },
          set: function (value) {
              this._setOption('position', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "singleWorkdays", {
          get: function () {
              return this._getOption('singleWorkdays');
          },
          set: function (value) {
              this._setOption('singleWorkdays', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "strips", {
          get: function () {
              return this._getOption('strips');
          },
          set: function (value) {
              this._setOption('strips', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "stripStyle", {
          get: function () {
              return this._getOption('stripStyle');
          },
          set: function (value) {
              this._setOption('stripStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "tick", {
          get: function () {
              return this._getOption('tick');
          },
          set: function (value) {
              this._setOption('tick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "tickInterval", {
          get: function () {
              return this._getOption('tickInterval');
          },
          set: function (value) {
              this._setOption('tickInterval', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "title", {
          get: function () {
              return this._getOption('title');
          },
          set: function (value) {
              this._setOption('title', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "valueMarginsEnabled", {
          get: function () {
              return this._getOption('valueMarginsEnabled');
          },
          set: function (value) {
              this._setOption('valueMarginsEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "visualRange", {
          get: function () {
              return this._getOption('visualRange');
          },
          set: function (value) {
              this._setOption('visualRange', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "visualRangeUpdateMode", {
          get: function () {
              return this._getOption('visualRangeUpdateMode');
          },
          set: function (value) {
              this._setOption('visualRangeUpdateMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "wholeRange", {
          get: function () {
              return this._getOption('wholeRange');
          },
          set: function (value) {
              this._setOption('wholeRange', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "workdaysOnly", {
          get: function () {
              return this._getOption('workdaysOnly');
          },
          set: function (value) {
              this._setOption('workdaysOnly', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "workWeek", {
          get: function () {
              return this._getOption('workWeek');
          },
          set: function (value) {
              this._setOption('workWeek', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "firstPointOnStartAngle", {
          get: function () {
              return this._getOption('firstPointOnStartAngle');
          },
          set: function (value) {
              this._setOption('firstPointOnStartAngle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "originValue", {
          get: function () {
              return this._getOption('originValue');
          },
          set: function (value) {
              this._setOption('originValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "period", {
          get: function () {
              return this._getOption('period');
          },
          set: function (value) {
              this._setOption('period', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "startAngle", {
          get: function () {
              return this._getOption('startAngle');
          },
          set: function (value) {
              this._setOption('startAngle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "_optionPath", {
          get: function () {
              return 'argumentAxis';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "breaksChildren", {
          get: function () {
              return this._getOption('breaks');
          },
          set: function (value) {
              this.setChildren('breaks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "constantLinesChildren", {
          get: function () {
              return this._getOption('constantLines');
          },
          set: function (value) {
              this.setChildren('constantLines', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoArgumentAxisComponent.prototype, "stripsChildren", {
          get: function () {
              return this._getOption('strips');
          },
          set: function (value) {
              this.setChildren('strips', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoArgumentAxisComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoArgumentAxisComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoArgumentAxisComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoArgumentAxisComponent.ɵfac = function DxoArgumentAxisComponent_Factory(t) { return new (t || DxoArgumentAxisComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoArgumentAxisComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoArgumentAxisComponent, selectors: [["dxo-argument-axis"]], contentQueries: function DxoArgumentAxisComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiBreakComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiConstantLineComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiStripComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.breaksChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.constantLinesChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.stripsChildren = _t);
          }
      }, inputs: { aggregateByCategory: "aggregateByCategory", aggregatedPointsPosition: "aggregatedPointsPosition", aggregationGroupWidth: "aggregationGroupWidth", aggregationInterval: "aggregationInterval", allowDecimals: "allowDecimals", argumentType: "argumentType", axisDivisionFactor: "axisDivisionFactor", breaks: "breaks", breakStyle: "breakStyle", categories: "categories", color: "color", constantLines: "constantLines", constantLineStyle: "constantLineStyle", customPosition: "customPosition", customPositionAxis: "customPositionAxis", discreteAxisDivisionMode: "discreteAxisDivisionMode", endOnTick: "endOnTick", grid: "grid", holidays: "holidays", hoverMode: "hoverMode", inverted: "inverted", label: "label", linearThreshold: "linearThreshold", logarithmBase: "logarithmBase", maxValueMargin: "maxValueMargin", minorGrid: "minorGrid", minorTick: "minorTick", minorTickCount: "minorTickCount", minorTickInterval: "minorTickInterval", minValueMargin: "minValueMargin", minVisualRangeLength: "minVisualRangeLength", offset: "offset", opacity: "opacity", placeholderSize: "placeholderSize", position: "position", singleWorkdays: "singleWorkdays", strips: "strips", stripStyle: "stripStyle", tick: "tick", tickInterval: "tickInterval", title: "title", type: "type", valueMarginsEnabled: "valueMarginsEnabled", visible: "visible", visualRange: "visualRange", visualRangeUpdateMode: "visualRangeUpdateMode", wholeRange: "wholeRange", width: "width", workdaysOnly: "workdaysOnly", workWeek: "workWeek", firstPointOnStartAngle: "firstPointOnStartAngle", originValue: "originValue", period: "period", startAngle: "startAngle" }, outputs: { categoriesChange: "categoriesChange", visualRangeChange: "visualRangeChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoArgumentAxisComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoArgumentAxisComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-argument-axis',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { aggregateByCategory: [{
                  type: i0.Input
              }], aggregatedPointsPosition: [{
                  type: i0.Input
              }], aggregationGroupWidth: [{
                  type: i0.Input
              }], aggregationInterval: [{
                  type: i0.Input
              }], allowDecimals: [{
                  type: i0.Input
              }], argumentType: [{
                  type: i0.Input
              }], axisDivisionFactor: [{
                  type: i0.Input
              }], breaks: [{
                  type: i0.Input
              }], breakStyle: [{
                  type: i0.Input
              }], categories: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], constantLines: [{
                  type: i0.Input
              }], constantLineStyle: [{
                  type: i0.Input
              }], customPosition: [{
                  type: i0.Input
              }], customPositionAxis: [{
                  type: i0.Input
              }], discreteAxisDivisionMode: [{
                  type: i0.Input
              }], endOnTick: [{
                  type: i0.Input
              }], grid: [{
                  type: i0.Input
              }], holidays: [{
                  type: i0.Input
              }], hoverMode: [{
                  type: i0.Input
              }], inverted: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], linearThreshold: [{
                  type: i0.Input
              }], logarithmBase: [{
                  type: i0.Input
              }], maxValueMargin: [{
                  type: i0.Input
              }], minorGrid: [{
                  type: i0.Input
              }], minorTick: [{
                  type: i0.Input
              }], minorTickCount: [{
                  type: i0.Input
              }], minorTickInterval: [{
                  type: i0.Input
              }], minValueMargin: [{
                  type: i0.Input
              }], minVisualRangeLength: [{
                  type: i0.Input
              }], offset: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], placeholderSize: [{
                  type: i0.Input
              }], position: [{
                  type: i0.Input
              }], singleWorkdays: [{
                  type: i0.Input
              }], strips: [{
                  type: i0.Input
              }], stripStyle: [{
                  type: i0.Input
              }], tick: [{
                  type: i0.Input
              }], tickInterval: [{
                  type: i0.Input
              }], title: [{
                  type: i0.Input
              }], type: [{
                  type: i0.Input
              }], valueMarginsEnabled: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], visualRange: [{
                  type: i0.Input
              }], visualRangeUpdateMode: [{
                  type: i0.Input
              }], wholeRange: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }], workdaysOnly: [{
                  type: i0.Input
              }], workWeek: [{
                  type: i0.Input
              }], firstPointOnStartAngle: [{
                  type: i0.Input
              }], originValue: [{
                  type: i0.Input
              }], period: [{
                  type: i0.Input
              }], startAngle: [{
                  type: i0.Input
              }], categoriesChange: [{
                  type: i0.Output
              }], visualRangeChange: [{
                  type: i0.Output
              }], breaksChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiBreakComponent; })]
              }], constantLinesChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiConstantLineComponent; })]
              }], stripsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiStripComponent; })]
              }] });
  })();
  var DxoArgumentAxisModule = /** @class */ (function () {
      function DxoArgumentAxisModule() {
      }
      return DxoArgumentAxisModule;
  }());
  /** @nocollapse */ DxoArgumentAxisModule.ɵfac = function DxoArgumentAxisModule_Factory(t) { return new (t || DxoArgumentAxisModule)(); };
  /** @nocollapse */ DxoArgumentAxisModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoArgumentAxisModule });
  /** @nocollapse */ DxoArgumentAxisModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoArgumentAxisModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoArgumentAxisComponent
                      ],
                      exports: [
                          DxoArgumentAxisComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoArgumentAxisModule, { declarations: [DxoArgumentAxisComponent], exports: [DxoArgumentAxisComponent] }); })();

  var DxoFormat = /** @class */ (function (_super) {
      __extends(DxoFormat, _super);
      function DxoFormat() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoFormat.prototype, "currency", {
          get: function () {
              return this._getOption('currency');
          },
          set: function (value) {
              this._setOption('currency', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormat.prototype, "formatter", {
          get: function () {
              return this._getOption('formatter');
          },
          set: function (value) {
              this._setOption('formatter', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormat.prototype, "parser", {
          get: function () {
              return this._getOption('parser');
          },
          set: function (value) {
              this._setOption('parser', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormat.prototype, "precision", {
          get: function () {
              return this._getOption('precision');
          },
          set: function (value) {
              this._setOption('precision', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormat.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormat.prototype, "useCurrencyAccountingStyle", {
          get: function () {
              return this._getOption('useCurrencyAccountingStyle');
          },
          set: function (value) {
              this._setOption('useCurrencyAccountingStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoFormat;
  }(i1.NestedOption));
  /** @nocollapse */ DxoFormat.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoFormat_BaseFactory; return function DxoFormat_Factory(t) { return (ɵDxoFormat_BaseFactory || (ɵDxoFormat_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoFormat)))(t || DxoFormat); }; }();
  /** @nocollapse */ DxoFormat.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFormat, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFormat_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFormat, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoArgumentFormatComponent = /** @class */ (function (_super) {
      __extends(DxoArgumentFormatComponent, _super);
      function DxoArgumentFormatComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoArgumentFormatComponent.prototype, "_optionPath", {
          get: function () {
              return 'argumentFormat';
          },
          enumerable: false,
          configurable: true
      });
      DxoArgumentFormatComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoArgumentFormatComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoArgumentFormatComponent;
  }(DxoFormat));
  /** @nocollapse */ DxoArgumentFormatComponent.ɵfac = function DxoArgumentFormatComponent_Factory(t) { return new (t || DxoArgumentFormatComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoArgumentFormatComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoArgumentFormatComponent, selectors: [["dxo-argument-format"]], inputs: { currency: "currency", formatter: "formatter", parser: "parser", precision: "precision", type: "type", useCurrencyAccountingStyle: "useCurrencyAccountingStyle" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoArgumentFormatComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoArgumentFormatComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-argument-format',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'currency',
                          'formatter',
                          'parser',
                          'precision',
                          'type',
                          'useCurrencyAccountingStyle'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoArgumentFormatModule = /** @class */ (function () {
      function DxoArgumentFormatModule() {
      }
      return DxoArgumentFormatModule;
  }());
  /** @nocollapse */ DxoArgumentFormatModule.ɵfac = function DxoArgumentFormatModule_Factory(t) { return new (t || DxoArgumentFormatModule)(); };
  /** @nocollapse */ DxoArgumentFormatModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoArgumentFormatModule });
  /** @nocollapse */ DxoArgumentFormatModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoArgumentFormatModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoArgumentFormatComponent
                      ],
                      exports: [
                          DxoArgumentFormatComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoArgumentFormatModule, { declarations: [DxoArgumentFormatComponent], exports: [DxoArgumentFormatComponent] }); })();

  var DxoAtComponent = /** @class */ (function (_super) {
      __extends(DxoAtComponent, _super);
      function DxoAtComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoAtComponent.prototype, "x", {
          get: function () {
              return this._getOption('x');
          },
          set: function (value) {
              this._setOption('x', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAtComponent.prototype, "y", {
          get: function () {
              return this._getOption('y');
          },
          set: function (value) {
              this._setOption('y', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAtComponent.prototype, "_optionPath", {
          get: function () {
              return 'at';
          },
          enumerable: false,
          configurable: true
      });
      DxoAtComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoAtComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoAtComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoAtComponent.ɵfac = function DxoAtComponent_Factory(t) { return new (t || DxoAtComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoAtComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoAtComponent, selectors: [["dxo-at"]], inputs: { x: "x", y: "y" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoAtComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAtComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-at',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { x: [{
                  type: i0.Input
              }], y: [{
                  type: i0.Input
              }] });
  })();
  var DxoAtModule = /** @class */ (function () {
      function DxoAtModule() {
      }
      return DxoAtModule;
  }());
  /** @nocollapse */ DxoAtModule.ɵfac = function DxoAtModule_Factory(t) { return new (t || DxoAtModule)(); };
  /** @nocollapse */ DxoAtModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoAtModule });
  /** @nocollapse */ DxoAtModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAtModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoAtComponent
                      ],
                      exports: [
                          DxoAtComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoAtModule, { declarations: [DxoAtComponent], exports: [DxoAtComponent] }); })();

  var DxoAutoLayoutComponent = /** @class */ (function (_super) {
      __extends(DxoAutoLayoutComponent, _super);
      function DxoAutoLayoutComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoAutoLayoutComponent.prototype, "orientation", {
          get: function () {
              return this._getOption('orientation');
          },
          set: function (value) {
              this._setOption('orientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAutoLayoutComponent.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAutoLayoutComponent.prototype, "_optionPath", {
          get: function () {
              return 'autoLayout';
          },
          enumerable: false,
          configurable: true
      });
      DxoAutoLayoutComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoAutoLayoutComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoAutoLayoutComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoAutoLayoutComponent.ɵfac = function DxoAutoLayoutComponent_Factory(t) { return new (t || DxoAutoLayoutComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoAutoLayoutComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoAutoLayoutComponent, selectors: [["dxo-auto-layout"]], inputs: { orientation: "orientation", type: "type" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoAutoLayoutComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAutoLayoutComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-auto-layout',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { orientation: [{
                  type: i0.Input
              }], type: [{
                  type: i0.Input
              }] });
  })();
  var DxoAutoLayoutModule = /** @class */ (function () {
      function DxoAutoLayoutModule() {
      }
      return DxoAutoLayoutModule;
  }());
  /** @nocollapse */ DxoAutoLayoutModule.ɵfac = function DxoAutoLayoutModule_Factory(t) { return new (t || DxoAutoLayoutModule)(); };
  /** @nocollapse */ DxoAutoLayoutModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoAutoLayoutModule });
  /** @nocollapse */ DxoAutoLayoutModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAutoLayoutModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoAutoLayoutComponent
                      ],
                      exports: [
                          DxoAutoLayoutComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoAutoLayoutModule, { declarations: [DxoAutoLayoutComponent], exports: [DxoAutoLayoutComponent] }); })();

  var DxoChartsColor = /** @class */ (function (_super) {
      __extends(DxoChartsColor, _super);
      function DxoChartsColor() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoChartsColor.prototype, "base", {
          get: function () {
              return this._getOption('base');
          },
          set: function (value) {
              this._setOption('base', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartsColor.prototype, "fillId", {
          get: function () {
              return this._getOption('fillId');
          },
          set: function (value) {
              this._setOption('fillId', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoChartsColor;
  }(i1.NestedOption));
  /** @nocollapse */ DxoChartsColor.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoChartsColor_BaseFactory; return function DxoChartsColor_Factory(t) { return (ɵDxoChartsColor_BaseFactory || (ɵDxoChartsColor_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoChartsColor)))(t || DxoChartsColor); }; }();
  /** @nocollapse */ DxoChartsColor.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoChartsColor, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoChartsColor_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoChartsColor, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoBackgroundColorComponent = /** @class */ (function (_super) {
      __extends(DxoBackgroundColorComponent, _super);
      function DxoBackgroundColorComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoBackgroundColorComponent.prototype, "_optionPath", {
          get: function () {
              return 'backgroundColor';
          },
          enumerable: false,
          configurable: true
      });
      DxoBackgroundColorComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoBackgroundColorComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoBackgroundColorComponent;
  }(DxoChartsColor));
  /** @nocollapse */ DxoBackgroundColorComponent.ɵfac = function DxoBackgroundColorComponent_Factory(t) { return new (t || DxoBackgroundColorComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoBackgroundColorComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoBackgroundColorComponent, selectors: [["dxo-background-color"]], inputs: { base: "base", fillId: "fillId" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoBackgroundColorComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBackgroundColorComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-background-color',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'base',
                          'fillId'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoBackgroundColorModule = /** @class */ (function () {
      function DxoBackgroundColorModule() {
      }
      return DxoBackgroundColorModule;
  }());
  /** @nocollapse */ DxoBackgroundColorModule.ɵfac = function DxoBackgroundColorModule_Factory(t) { return new (t || DxoBackgroundColorModule)(); };
  /** @nocollapse */ DxoBackgroundColorModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoBackgroundColorModule });
  /** @nocollapse */ DxoBackgroundColorModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBackgroundColorModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoBackgroundColorComponent
                      ],
                      exports: [
                          DxoBackgroundColorComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoBackgroundColorModule, { declarations: [DxoBackgroundColorComponent], exports: [DxoBackgroundColorComponent] }); })();

  var DxoBackgroundComponent = /** @class */ (function (_super) {
      __extends(DxoBackgroundComponent, _super);
      function DxoBackgroundComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoBackgroundComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBackgroundComponent.prototype, "image", {
          get: function () {
              return this._getOption('image');
          },
          set: function (value) {
              this._setOption('image', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBackgroundComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBackgroundComponent.prototype, "borderColor", {
          get: function () {
              return this._getOption('borderColor');
          },
          set: function (value) {
              this._setOption('borderColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBackgroundComponent.prototype, "_optionPath", {
          get: function () {
              return 'background';
          },
          enumerable: false,
          configurable: true
      });
      DxoBackgroundComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoBackgroundComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoBackgroundComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoBackgroundComponent.ɵfac = function DxoBackgroundComponent_Factory(t) { return new (t || DxoBackgroundComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoBackgroundComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoBackgroundComponent, selectors: [["dxo-background"]], inputs: { color: "color", image: "image", visible: "visible", borderColor: "borderColor" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoBackgroundComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBackgroundComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-background',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], image: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], borderColor: [{
                  type: i0.Input
              }] });
  })();
  var DxoBackgroundModule = /** @class */ (function () {
      function DxoBackgroundModule() {
      }
      return DxoBackgroundModule;
  }());
  /** @nocollapse */ DxoBackgroundModule.ɵfac = function DxoBackgroundModule_Factory(t) { return new (t || DxoBackgroundModule)(); };
  /** @nocollapse */ DxoBackgroundModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoBackgroundModule });
  /** @nocollapse */ DxoBackgroundModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBackgroundModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoBackgroundComponent
                      ],
                      exports: [
                          DxoBackgroundComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoBackgroundModule, { declarations: [DxoBackgroundComponent], exports: [DxoBackgroundComponent] }); })();

  var DxoBarComponent = /** @class */ (function (_super) {
      __extends(DxoBarComponent, _super);
      function DxoBarComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoBarComponent.prototype, "_optionPath", {
          get: function () {
              return 'bar';
          },
          enumerable: false,
          configurable: true
      });
      DxoBarComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoBarComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoBarComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoBarComponent.ɵfac = function DxoBarComponent_Factory(t) { return new (t || DxoBarComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoBarComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoBarComponent, selectors: [["dxo-bar"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width", closed: "closed" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoBarComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBarComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-bar',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width',
                          'closed'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoBarModule = /** @class */ (function () {
      function DxoBarModule() {
      }
      return DxoBarModule;
  }());
  /** @nocollapse */ DxoBarModule.ɵfac = function DxoBarModule_Factory(t) { return new (t || DxoBarModule)(); };
  /** @nocollapse */ DxoBarModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoBarModule });
  /** @nocollapse */ DxoBarModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBarModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoBarComponent
                      ],
                      exports: [
                          DxoBarComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoBarModule, { declarations: [DxoBarComponent], exports: [DxoBarComponent] }); })();

  var DxoBehaviorComponent = /** @class */ (function (_super) {
      __extends(DxoBehaviorComponent, _super);
      function DxoBehaviorComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoBehaviorComponent.prototype, "allowSlidersSwap", {
          get: function () {
              return this._getOption('allowSlidersSwap');
          },
          set: function (value) {
              this._setOption('allowSlidersSwap', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBehaviorComponent.prototype, "animationEnabled", {
          get: function () {
              return this._getOption('animationEnabled');
          },
          set: function (value) {
              this._setOption('animationEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBehaviorComponent.prototype, "callValueChanged", {
          get: function () {
              return this._getOption('callValueChanged');
          },
          set: function (value) {
              this._setOption('callValueChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBehaviorComponent.prototype, "manualRangeSelectionEnabled", {
          get: function () {
              return this._getOption('manualRangeSelectionEnabled');
          },
          set: function (value) {
              this._setOption('manualRangeSelectionEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBehaviorComponent.prototype, "moveSelectedRangeByClick", {
          get: function () {
              return this._getOption('moveSelectedRangeByClick');
          },
          set: function (value) {
              this._setOption('moveSelectedRangeByClick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBehaviorComponent.prototype, "snapToTicks", {
          get: function () {
              return this._getOption('snapToTicks');
          },
          set: function (value) {
              this._setOption('snapToTicks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBehaviorComponent.prototype, "valueChangeMode", {
          get: function () {
              return this._getOption('valueChangeMode');
          },
          set: function (value) {
              this._setOption('valueChangeMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBehaviorComponent.prototype, "_optionPath", {
          get: function () {
              return 'behavior';
          },
          enumerable: false,
          configurable: true
      });
      DxoBehaviorComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoBehaviorComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoBehaviorComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoBehaviorComponent.ɵfac = function DxoBehaviorComponent_Factory(t) { return new (t || DxoBehaviorComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoBehaviorComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoBehaviorComponent, selectors: [["dxo-behavior"]], inputs: { allowSlidersSwap: "allowSlidersSwap", animationEnabled: "animationEnabled", callValueChanged: "callValueChanged", manualRangeSelectionEnabled: "manualRangeSelectionEnabled", moveSelectedRangeByClick: "moveSelectedRangeByClick", snapToTicks: "snapToTicks", valueChangeMode: "valueChangeMode" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoBehaviorComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBehaviorComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-behavior',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowSlidersSwap: [{
                  type: i0.Input
              }], animationEnabled: [{
                  type: i0.Input
              }], callValueChanged: [{
                  type: i0.Input
              }], manualRangeSelectionEnabled: [{
                  type: i0.Input
              }], moveSelectedRangeByClick: [{
                  type: i0.Input
              }], snapToTicks: [{
                  type: i0.Input
              }], valueChangeMode: [{
                  type: i0.Input
              }] });
  })();
  var DxoBehaviorModule = /** @class */ (function () {
      function DxoBehaviorModule() {
      }
      return DxoBehaviorModule;
  }());
  /** @nocollapse */ DxoBehaviorModule.ɵfac = function DxoBehaviorModule_Factory(t) { return new (t || DxoBehaviorModule)(); };
  /** @nocollapse */ DxoBehaviorModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoBehaviorModule });
  /** @nocollapse */ DxoBehaviorModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBehaviorModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoBehaviorComponent
                      ],
                      exports: [
                          DxoBehaviorComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoBehaviorModule, { declarations: [DxoBehaviorComponent], exports: [DxoBehaviorComponent] }); })();

  var DxoBorderComponent = /** @class */ (function (_super) {
      __extends(DxoBorderComponent, _super);
      function DxoBorderComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoBorderComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBorderComponent.prototype, "cornerRadius", {
          get: function () {
              return this._getOption('cornerRadius');
          },
          set: function (value) {
              this._setOption('cornerRadius', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBorderComponent.prototype, "dashStyle", {
          get: function () {
              return this._getOption('dashStyle');
          },
          set: function (value) {
              this._setOption('dashStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBorderComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBorderComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBorderComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBorderComponent.prototype, "bottom", {
          get: function () {
              return this._getOption('bottom');
          },
          set: function (value) {
              this._setOption('bottom', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBorderComponent.prototype, "left", {
          get: function () {
              return this._getOption('left');
          },
          set: function (value) {
              this._setOption('left', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBorderComponent.prototype, "right", {
          get: function () {
              return this._getOption('right');
          },
          set: function (value) {
              this._setOption('right', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBorderComponent.prototype, "top", {
          get: function () {
              return this._getOption('top');
          },
          set: function (value) {
              this._setOption('top', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBorderComponent.prototype, "_optionPath", {
          get: function () {
              return 'border';
          },
          enumerable: false,
          configurable: true
      });
      DxoBorderComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoBorderComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoBorderComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoBorderComponent.ɵfac = function DxoBorderComponent_Factory(t) { return new (t || DxoBorderComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoBorderComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoBorderComponent, selectors: [["dxo-border"]], inputs: { color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", opacity: "opacity", visible: "visible", width: "width", bottom: "bottom", left: "left", right: "right", top: "top" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoBorderComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBorderComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-border',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], cornerRadius: [{
                  type: i0.Input
              }], dashStyle: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }], bottom: [{
                  type: i0.Input
              }], left: [{
                  type: i0.Input
              }], right: [{
                  type: i0.Input
              }], top: [{
                  type: i0.Input
              }] });
  })();
  var DxoBorderModule = /** @class */ (function () {
      function DxoBorderModule() {
      }
      return DxoBorderModule;
  }());
  /** @nocollapse */ DxoBorderModule.ɵfac = function DxoBorderModule_Factory(t) { return new (t || DxoBorderModule)(); };
  /** @nocollapse */ DxoBorderModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoBorderModule });
  /** @nocollapse */ DxoBorderModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBorderModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoBorderComponent
                      ],
                      exports: [
                          DxoBorderComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoBorderModule, { declarations: [DxoBorderComponent], exports: [DxoBorderComponent] }); })();

  var DxoBoundaryOffsetComponent = /** @class */ (function (_super) {
      __extends(DxoBoundaryOffsetComponent, _super);
      function DxoBoundaryOffsetComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoBoundaryOffsetComponent.prototype, "x", {
          get: function () {
              return this._getOption('x');
          },
          set: function (value) {
              this._setOption('x', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoundaryOffsetComponent.prototype, "y", {
          get: function () {
              return this._getOption('y');
          },
          set: function (value) {
              this._setOption('y', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoundaryOffsetComponent.prototype, "_optionPath", {
          get: function () {
              return 'boundaryOffset';
          },
          enumerable: false,
          configurable: true
      });
      DxoBoundaryOffsetComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoBoundaryOffsetComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoBoundaryOffsetComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoBoundaryOffsetComponent.ɵfac = function DxoBoundaryOffsetComponent_Factory(t) { return new (t || DxoBoundaryOffsetComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoBoundaryOffsetComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoBoundaryOffsetComponent, selectors: [["dxo-boundary-offset"]], inputs: { x: "x", y: "y" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoBoundaryOffsetComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBoundaryOffsetComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-boundary-offset',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { x: [{
                  type: i0.Input
              }], y: [{
                  type: i0.Input
              }] });
  })();
  var DxoBoundaryOffsetModule = /** @class */ (function () {
      function DxoBoundaryOffsetModule() {
      }
      return DxoBoundaryOffsetModule;
  }());
  /** @nocollapse */ DxoBoundaryOffsetModule.ɵfac = function DxoBoundaryOffsetModule_Factory(t) { return new (t || DxoBoundaryOffsetModule)(); };
  /** @nocollapse */ DxoBoundaryOffsetModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoBoundaryOffsetModule });
  /** @nocollapse */ DxoBoundaryOffsetModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBoundaryOffsetModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoBoundaryOffsetComponent
                      ],
                      exports: [
                          DxoBoundaryOffsetComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoBoundaryOffsetModule, { declarations: [DxoBoundaryOffsetComponent], exports: [DxoBoundaryOffsetComponent] }); })();

  var DxoBoxOptions = /** @class */ (function (_super) {
      __extends(DxoBoxOptions, _super);
      function DxoBoxOptions() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoBoxOptions.prototype, "align", {
          get: function () {
              return this._getOption('align');
          },
          set: function (value) {
              this._setOption('align', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "crossAlign", {
          get: function () {
              return this._getOption('crossAlign');
          },
          set: function (value) {
              this._setOption('crossAlign', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "direction", {
          get: function () {
              return this._getOption('direction');
          },
          set: function (value) {
              this._setOption('direction', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "elementAttr", {
          get: function () {
              return this._getOption('elementAttr');
          },
          set: function (value) {
              this._setOption('elementAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "hoverStateEnabled", {
          get: function () {
              return this._getOption('hoverStateEnabled');
          },
          set: function (value) {
              this._setOption('hoverStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "itemHoldTimeout", {
          get: function () {
              return this._getOption('itemHoldTimeout');
          },
          set: function (value) {
              this._setOption('itemHoldTimeout', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "items", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this._setOption('items', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "itemTemplate", {
          get: function () {
              return this._getOption('itemTemplate');
          },
          set: function (value) {
              this._setOption('itemTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "onContentReady", {
          get: function () {
              return this._getOption('onContentReady');
          },
          set: function (value) {
              this._setOption('onContentReady', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "onDisposing", {
          get: function () {
              return this._getOption('onDisposing');
          },
          set: function (value) {
              this._setOption('onDisposing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "onInitialized", {
          get: function () {
              return this._getOption('onInitialized');
          },
          set: function (value) {
              this._setOption('onInitialized', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "onItemClick", {
          get: function () {
              return this._getOption('onItemClick');
          },
          set: function (value) {
              this._setOption('onItemClick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "onItemContextMenu", {
          get: function () {
              return this._getOption('onItemContextMenu');
          },
          set: function (value) {
              this._setOption('onItemContextMenu', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "onItemHold", {
          get: function () {
              return this._getOption('onItemHold');
          },
          set: function (value) {
              this._setOption('onItemHold', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "onItemRendered", {
          get: function () {
              return this._getOption('onItemRendered');
          },
          set: function (value) {
              this._setOption('onItemRendered', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "onOptionChanged", {
          get: function () {
              return this._getOption('onOptionChanged');
          },
          set: function (value) {
              this._setOption('onOptionChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "rtlEnabled", {
          get: function () {
              return this._getOption('rtlEnabled');
          },
          set: function (value) {
              this._setOption('rtlEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxOptions.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoBoxOptions;
  }(i1.NestedOption));
  /** @nocollapse */ DxoBoxOptions.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoBoxOptions_BaseFactory; return function DxoBoxOptions_Factory(t) { return (ɵDxoBoxOptions_BaseFactory || (ɵDxoBoxOptions_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoBoxOptions)))(t || DxoBoxOptions); }; }();
  /** @nocollapse */ DxoBoxOptions.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoBoxOptions, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoBoxOptions_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBoxOptions, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiButtonGroupItem = /** @class */ (function (_super) {
      __extends(DxiButtonGroupItem, _super);
      function DxiButtonGroupItem() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiButtonGroupItem.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "html", {
          get: function () {
              return this._getOption('html');
          },
          set: function (value) {
              this._setOption('html', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "icon", {
          get: function () {
              return this._getOption('icon');
          },
          set: function (value) {
              this._setOption('icon', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "template", {
          get: function () {
              return this._getOption('template');
          },
          set: function (value) {
              this._setOption('template', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "title", {
          get: function () {
              return this._getOption('title');
          },
          set: function (value) {
              this._setOption('title', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "titleTemplate", {
          get: function () {
              return this._getOption('titleTemplate');
          },
          set: function (value) {
              this._setOption('titleTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "onClick", {
          get: function () {
              return this._getOption('onClick');
          },
          set: function (value) {
              this._setOption('onClick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "stylingMode", {
          get: function () {
              return this._getOption('stylingMode');
          },
          set: function (value) {
              this._setOption('stylingMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "baseSize", {
          get: function () {
              return this._getOption('baseSize');
          },
          set: function (value) {
              this._setOption('baseSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "box", {
          get: function () {
              return this._getOption('box');
          },
          set: function (value) {
              this._setOption('box', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "ratio", {
          get: function () {
              return this._getOption('ratio');
          },
          set: function (value) {
              this._setOption('ratio', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "shrink", {
          get: function () {
              return this._getOption('shrink');
          },
          set: function (value) {
              this._setOption('shrink', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "elementAttr", {
          get: function () {
              return this._getOption('elementAttr');
          },
          set: function (value) {
              this._setOption('elementAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "hint", {
          get: function () {
              return this._getOption('hint');
          },
          set: function (value) {
              this._setOption('hint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "beginGroup", {
          get: function () {
              return this._getOption('beginGroup');
          },
          set: function (value) {
              this._setOption('beginGroup', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "closeMenuOnClick", {
          get: function () {
              return this._getOption('closeMenuOnClick');
          },
          set: function (value) {
              this._setOption('closeMenuOnClick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "items", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this._setOption('items', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "selectable", {
          get: function () {
              return this._getOption('selectable');
          },
          set: function (value) {
              this._setOption('selectable', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "selected", {
          get: function () {
              return this._getOption('selected');
          },
          set: function (value) {
              this._setOption('selected', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "colSpan", {
          get: function () {
              return this._getOption('colSpan');
          },
          set: function (value) {
              this._setOption('colSpan', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "cssClass", {
          get: function () {
              return this._getOption('cssClass');
          },
          set: function (value) {
              this._setOption('cssClass', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "dataField", {
          get: function () {
              return this._getOption('dataField');
          },
          set: function (value) {
              this._setOption('dataField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "editorOptions", {
          get: function () {
              return this._getOption('editorOptions');
          },
          set: function (value) {
              this._setOption('editorOptions', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "editorType", {
          get: function () {
              return this._getOption('editorType');
          },
          set: function (value) {
              this._setOption('editorType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "helpText", {
          get: function () {
              return this._getOption('helpText');
          },
          set: function (value) {
              this._setOption('helpText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "isRequired", {
          get: function () {
              return this._getOption('isRequired');
          },
          set: function (value) {
              this._setOption('isRequired', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "itemType", {
          get: function () {
              return this._getOption('itemType');
          },
          set: function (value) {
              this._setOption('itemType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "validationRules", {
          get: function () {
              return this._getOption('validationRules');
          },
          set: function (value) {
              this._setOption('validationRules', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "visibleIndex", {
          get: function () {
              return this._getOption('visibleIndex');
          },
          set: function (value) {
              this._setOption('visibleIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "alignItemLabels", {
          get: function () {
              return this._getOption('alignItemLabels');
          },
          set: function (value) {
              this._setOption('alignItemLabels', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "caption", {
          get: function () {
              return this._getOption('caption');
          },
          set: function (value) {
              this._setOption('caption', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "colCount", {
          get: function () {
              return this._getOption('colCount');
          },
          set: function (value) {
              this._setOption('colCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "colCountByScreen", {
          get: function () {
              return this._getOption('colCountByScreen');
          },
          set: function (value) {
              this._setOption('colCountByScreen', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "tabPanelOptions", {
          get: function () {
              return this._getOption('tabPanelOptions');
          },
          set: function (value) {
              this._setOption('tabPanelOptions', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "tabs", {
          get: function () {
              return this._getOption('tabs');
          },
          set: function (value) {
              this._setOption('tabs', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "badge", {
          get: function () {
              return this._getOption('badge');
          },
          set: function (value) {
              this._setOption('badge', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "tabTemplate", {
          get: function () {
              return this._getOption('tabTemplate');
          },
          set: function (value) {
              this._setOption('tabTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "buttonOptions", {
          get: function () {
              return this._getOption('buttonOptions');
          },
          set: function (value) {
              this._setOption('buttonOptions', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "horizontalAlignment", {
          get: function () {
              return this._getOption('horizontalAlignment');
          },
          set: function (value) {
              this._setOption('horizontalAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "verticalAlignment", {
          get: function () {
              return this._getOption('verticalAlignment');
          },
          set: function (value) {
              this._setOption('verticalAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "locateInMenu", {
          get: function () {
              return this._getOption('locateInMenu');
          },
          set: function (value) {
              this._setOption('locateInMenu', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "location", {
          get: function () {
              return this._getOption('location');
          },
          set: function (value) {
              this._setOption('location', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "menuItemTemplate", {
          get: function () {
              return this._getOption('menuItemTemplate');
          },
          set: function (value) {
              this._setOption('menuItemTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "options", {
          get: function () {
              return this._getOption('options');
          },
          set: function (value) {
              this._setOption('options', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "showText", {
          get: function () {
              return this._getOption('showText');
          },
          set: function (value) {
              this._setOption('showText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "widget", {
          get: function () {
              return this._getOption('widget');
          },
          set: function (value) {
              this._setOption('widget', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "imageAlt", {
          get: function () {
              return this._getOption('imageAlt');
          },
          set: function (value) {
              this._setOption('imageAlt', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "imageSrc", {
          get: function () {
              return this._getOption('imageSrc');
          },
          set: function (value) {
              this._setOption('imageSrc', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "acceptedValues", {
          get: function () {
              return this._getOption('acceptedValues');
          },
          set: function (value) {
              this._setOption('acceptedValues', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "formatName", {
          get: function () {
              return this._getOption('formatName');
          },
          set: function (value) {
              this._setOption('formatName', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "formatValues", {
          get: function () {
              return this._getOption('formatValues');
          },
          set: function (value) {
              this._setOption('formatValues', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "key", {
          get: function () {
              return this._getOption('key');
          },
          set: function (value) {
              this._setOption('key', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "showChevron", {
          get: function () {
              return this._getOption('showChevron');
          },
          set: function (value) {
              this._setOption('showChevron', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "linkAttr", {
          get: function () {
              return this._getOption('linkAttr');
          },
          set: function (value) {
              this._setOption('linkAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "url", {
          get: function () {
              return this._getOption('url');
          },
          set: function (value) {
              this._setOption('url', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "heightRatio", {
          get: function () {
              return this._getOption('heightRatio');
          },
          set: function (value) {
              this._setOption('heightRatio', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "widthRatio", {
          get: function () {
              return this._getOption('widthRatio');
          },
          set: function (value) {
              this._setOption('widthRatio', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "expanded", {
          get: function () {
              return this._getOption('expanded');
          },
          set: function (value) {
              this._setOption('expanded', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "hasItems", {
          get: function () {
              return this._getOption('hasItems');
          },
          set: function (value) {
              this._setOption('hasItems', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "id", {
          get: function () {
              return this._getOption('id');
          },
          set: function (value) {
              this._setOption('id', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiButtonGroupItem.prototype, "parentId", {
          get: function () {
              return this._getOption('parentId');
          },
          set: function (value) {
              this._setOption('parentId', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiButtonGroupItem;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiButtonGroupItem.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiButtonGroupItem_BaseFactory; return function DxiButtonGroupItem_Factory(t) { return (ɵDxiButtonGroupItem_BaseFactory || (ɵDxiButtonGroupItem_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiButtonGroupItem)))(t || DxiButtonGroupItem); }; }();
  /** @nocollapse */ DxiButtonGroupItem.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiButtonGroupItem, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiButtonGroupItem_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiButtonGroupItem, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiValidationRuleComponent = /** @class */ (function (_super) {
      __extends(DxiValidationRuleComponent, _super);
      function DxiValidationRuleComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiValidationRuleComponent.prototype, "message", {
          get: function () {
              return this._getOption('message');
          },
          set: function (value) {
              this._setOption('message', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValidationRuleComponent.prototype, "trim", {
          get: function () {
              return this._getOption('trim');
          },
          set: function (value) {
              this._setOption('trim', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValidationRuleComponent.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValidationRuleComponent.prototype, "ignoreEmptyValue", {
          get: function () {
              return this._getOption('ignoreEmptyValue');
          },
          set: function (value) {
              this._setOption('ignoreEmptyValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValidationRuleComponent.prototype, "max", {
          get: function () {
              return this._getOption('max');
          },
          set: function (value) {
              this._setOption('max', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValidationRuleComponent.prototype, "min", {
          get: function () {
              return this._getOption('min');
          },
          set: function (value) {
              this._setOption('min', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValidationRuleComponent.prototype, "reevaluate", {
          get: function () {
              return this._getOption('reevaluate');
          },
          set: function (value) {
              this._setOption('reevaluate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValidationRuleComponent.prototype, "validationCallback", {
          get: function () {
              return this._getOption('validationCallback');
          },
          set: function (value) {
              this._setOption('validationCallback', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValidationRuleComponent.prototype, "comparisonTarget", {
          get: function () {
              return this._getOption('comparisonTarget');
          },
          set: function (value) {
              this._setOption('comparisonTarget', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValidationRuleComponent.prototype, "comparisonType", {
          get: function () {
              return this._getOption('comparisonType');
          },
          set: function (value) {
              this._setOption('comparisonType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValidationRuleComponent.prototype, "pattern", {
          get: function () {
              return this._getOption('pattern');
          },
          set: function (value) {
              this._setOption('pattern', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValidationRuleComponent.prototype, "_optionPath", {
          get: function () {
              return 'validationRules';
          },
          enumerable: false,
          configurable: true
      });
      DxiValidationRuleComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiValidationRuleComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiValidationRuleComponent.ɵfac = function DxiValidationRuleComponent_Factory(t) { return new (t || DxiValidationRuleComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiValidationRuleComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiValidationRuleComponent, selectors: [["dxi-validation-rule"]], inputs: { message: "message", trim: "trim", type: "type", ignoreEmptyValue: "ignoreEmptyValue", max: "max", min: "min", reevaluate: "reevaluate", validationCallback: "validationCallback", comparisonTarget: "comparisonTarget", comparisonType: "comparisonType", pattern: "pattern" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiValidationRuleComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiValidationRuleComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-validation-rule',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { message: [{
                  type: i0.Input
              }], trim: [{
                  type: i0.Input
              }], type: [{
                  type: i0.Input
              }], ignoreEmptyValue: [{
                  type: i0.Input
              }], max: [{
                  type: i0.Input
              }], min: [{
                  type: i0.Input
              }], reevaluate: [{
                  type: i0.Input
              }], validationCallback: [{
                  type: i0.Input
              }], comparisonTarget: [{
                  type: i0.Input
              }], comparisonType: [{
                  type: i0.Input
              }], pattern: [{
                  type: i0.Input
              }] });
  })();
  var DxiValidationRuleModule = /** @class */ (function () {
      function DxiValidationRuleModule() {
      }
      return DxiValidationRuleModule;
  }());
  /** @nocollapse */ DxiValidationRuleModule.ɵfac = function DxiValidationRuleModule_Factory(t) { return new (t || DxiValidationRuleModule)(); };
  /** @nocollapse */ DxiValidationRuleModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiValidationRuleModule });
  /** @nocollapse */ DxiValidationRuleModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiValidationRuleModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiValidationRuleComponent
                      ],
                      exports: [
                          DxiValidationRuleComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiValidationRuleModule, { declarations: [DxiValidationRuleComponent], exports: [DxiValidationRuleComponent] }); })();

  var DxiHtmlEditorImageUploadTabItem = /** @class */ (function (_super) {
      __extends(DxiHtmlEditorImageUploadTabItem, _super);
      function DxiHtmlEditorImageUploadTabItem() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiHtmlEditorImageUploadTabItem.prototype, "alignItemLabels", {
          get: function () {
              return this._getOption('alignItemLabels');
          },
          set: function (value) {
              this._setOption('alignItemLabels', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorImageUploadTabItem.prototype, "badge", {
          get: function () {
              return this._getOption('badge');
          },
          set: function (value) {
              this._setOption('badge', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorImageUploadTabItem.prototype, "colCount", {
          get: function () {
              return this._getOption('colCount');
          },
          set: function (value) {
              this._setOption('colCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorImageUploadTabItem.prototype, "colCountByScreen", {
          get: function () {
              return this._getOption('colCountByScreen');
          },
          set: function (value) {
              this._setOption('colCountByScreen', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorImageUploadTabItem.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorImageUploadTabItem.prototype, "icon", {
          get: function () {
              return this._getOption('icon');
          },
          set: function (value) {
              this._setOption('icon', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorImageUploadTabItem.prototype, "items", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this._setOption('items', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorImageUploadTabItem.prototype, "tabTemplate", {
          get: function () {
              return this._getOption('tabTemplate');
          },
          set: function (value) {
              this._setOption('tabTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorImageUploadTabItem.prototype, "template", {
          get: function () {
              return this._getOption('template');
          },
          set: function (value) {
              this._setOption('template', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorImageUploadTabItem.prototype, "title", {
          get: function () {
              return this._getOption('title');
          },
          set: function (value) {
              this._setOption('title', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorImageUploadTabItem.prototype, "commands", {
          get: function () {
              return this._getOption('commands');
          },
          set: function (value) {
              this._setOption('commands', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorImageUploadTabItem.prototype, "groups", {
          get: function () {
              return this._getOption('groups');
          },
          set: function (value) {
              this._setOption('groups', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorImageUploadTabItem.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiHtmlEditorImageUploadTabItem;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiHtmlEditorImageUploadTabItem.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiHtmlEditorImageUploadTabItem_BaseFactory; return function DxiHtmlEditorImageUploadTabItem_Factory(t) { return (ɵDxiHtmlEditorImageUploadTabItem_BaseFactory || (ɵDxiHtmlEditorImageUploadTabItem_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiHtmlEditorImageUploadTabItem)))(t || DxiHtmlEditorImageUploadTabItem); }; }();
  /** @nocollapse */ DxiHtmlEditorImageUploadTabItem.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiHtmlEditorImageUploadTabItem, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiHtmlEditorImageUploadTabItem_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiHtmlEditorImageUploadTabItem, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiDiagramCustomCommand = /** @class */ (function (_super) {
      __extends(DxiDiagramCustomCommand, _super);
      function DxiDiagramCustomCommand() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiDiagramCustomCommand.prototype, "icon", {
          get: function () {
              return this._getOption('icon');
          },
          set: function (value) {
              this._setOption('icon', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDiagramCustomCommand.prototype, "items", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this._setOption('items', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDiagramCustomCommand.prototype, "location", {
          get: function () {
              return this._getOption('location');
          },
          set: function (value) {
              this._setOption('location', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDiagramCustomCommand.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDiagramCustomCommand.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiDiagramCustomCommand;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiDiagramCustomCommand.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiDiagramCustomCommand_BaseFactory; return function DxiDiagramCustomCommand_Factory(t) { return (ɵDxiDiagramCustomCommand_BaseFactory || (ɵDxiDiagramCustomCommand_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiDiagramCustomCommand)))(t || DxiDiagramCustomCommand); }; }();
  /** @nocollapse */ DxiDiagramCustomCommand.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiDiagramCustomCommand, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiDiagramCustomCommand_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiDiagramCustomCommand, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiCommandComponent = /** @class */ (function (_super) {
      __extends(DxiCommandComponent, _super);
      function DxiCommandComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiCommandComponent.prototype, "_optionPath", {
          get: function () {
              return 'commands';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCommandComponent.prototype, "itemsChildren", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this.setChildren('items', value);
          },
          enumerable: false,
          configurable: true
      });
      DxiCommandComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiCommandComponent;
  }(DxiDiagramCustomCommand));
  /** @nocollapse */ DxiCommandComponent.ɵfac = function DxiCommandComponent_Factory(t) { return new (t || DxiCommandComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiCommandComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiCommandComponent, selectors: [["dxi-command"]], contentQueries: function DxiCommandComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiItemComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
          }
      }, inputs: { icon: "icon", items: "items", location: "location", name: "name", text: "text" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiCommandComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiCommandComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-command',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'icon',
                          'items',
                          'location',
                          'name',
                          'text'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { itemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiItemComponent; })]
              }] });
  })();
  var DxiCommandModule = /** @class */ (function () {
      function DxiCommandModule() {
      }
      return DxiCommandModule;
  }());
  /** @nocollapse */ DxiCommandModule.ɵfac = function DxiCommandModule_Factory(t) { return new (t || DxiCommandModule)(); };
  /** @nocollapse */ DxiCommandModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiCommandModule });
  /** @nocollapse */ DxiCommandModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiCommandModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiCommandComponent
                      ],
                      exports: [
                          DxiCommandComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiCommandModule, { declarations: [DxiCommandComponent], exports: [DxiCommandComponent] }); })();

  var DxiGroupComponent = /** @class */ (function (_super) {
      __extends(DxiGroupComponent, _super);
      function DxiGroupComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiGroupComponent.prototype, "commands", {
          get: function () {
              return this._getOption('commands');
          },
          set: function (value) {
              this._setOption('commands', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupComponent.prototype, "title", {
          get: function () {
              return this._getOption('title');
          },
          set: function (value) {
              this._setOption('title', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupComponent.prototype, "category", {
          get: function () {
              return this._getOption('category');
          },
          set: function (value) {
              this._setOption('category', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupComponent.prototype, "displayMode", {
          get: function () {
              return this._getOption('displayMode');
          },
          set: function (value) {
              this._setOption('displayMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupComponent.prototype, "expanded", {
          get: function () {
              return this._getOption('expanded');
          },
          set: function (value) {
              this._setOption('expanded', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupComponent.prototype, "shapes", {
          get: function () {
              return this._getOption('shapes');
          },
          set: function (value) {
              this._setOption('shapes', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupComponent.prototype, "_optionPath", {
          get: function () {
              return 'groups';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupComponent.prototype, "commandsChildren", {
          get: function () {
              return this._getOption('commands');
          },
          set: function (value) {
              this.setChildren('commands', value);
          },
          enumerable: false,
          configurable: true
      });
      DxiGroupComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiGroupComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiGroupComponent.ɵfac = function DxiGroupComponent_Factory(t) { return new (t || DxiGroupComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiGroupComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiGroupComponent, selectors: [["dxi-group"]], contentQueries: function DxiGroupComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiCommandComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.commandsChildren = _t);
          }
      }, inputs: { commands: "commands", title: "title", category: "category", displayMode: "displayMode", expanded: "expanded", shapes: "shapes" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiGroupComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiGroupComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-group',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { commands: [{
                  type: i0.Input
              }], title: [{
                  type: i0.Input
              }], category: [{
                  type: i0.Input
              }], displayMode: [{
                  type: i0.Input
              }], expanded: [{
                  type: i0.Input
              }], shapes: [{
                  type: i0.Input
              }], commandsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiCommandComponent; })]
              }] });
  })();
  var DxiGroupModule = /** @class */ (function () {
      function DxiGroupModule() {
      }
      return DxiGroupModule;
  }());
  /** @nocollapse */ DxiGroupModule.ɵfac = function DxiGroupModule_Factory(t) { return new (t || DxiGroupModule)(); };
  /** @nocollapse */ DxiGroupModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiGroupModule });
  /** @nocollapse */ DxiGroupModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiGroupModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiGroupComponent
                      ],
                      exports: [
                          DxiGroupComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiGroupModule, { declarations: [DxiGroupComponent], exports: [DxiGroupComponent] }); })();

  var _c0$4 = ["*"];
  var DxiTabComponent = /** @class */ (function (_super) {
      __extends(DxiTabComponent, _super);
      function DxiTabComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
          var _this = _super.call(this) || this;
          _this.renderer = renderer;
          _this.document = document;
          _this.element = element;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          templateHost.setHost(_this);
          return _this;
      }
      Object.defineProperty(DxiTabComponent.prototype, "_optionPath", {
          get: function () {
              return 'tabs';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTabComponent.prototype, "itemsChildren", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this.setChildren('items', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTabComponent.prototype, "commandsChildren", {
          get: function () {
              return this._getOption('commands');
          },
          set: function (value) {
              this.setChildren('commands', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTabComponent.prototype, "groupsChildren", {
          get: function () {
              return this._getOption('groups');
          },
          set: function (value) {
              this.setChildren('groups', value);
          },
          enumerable: false,
          configurable: true
      });
      DxiTabComponent.prototype.setTemplate = function (template) {
          this.template = template;
      };
      DxiTabComponent.prototype.ngAfterViewInit = function () {
          i1.extractTemplate(this, this.element, this.renderer, this.document);
      };
      DxiTabComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiTabComponent;
  }(DxiHtmlEditorImageUploadTabItem));
  /** @nocollapse */ DxiTabComponent.ɵfac = function DxiTabComponent_Factory(t) { return new (t || DxiTabComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(common.DOCUMENT), i0__namespace.ɵɵdirectiveInject(i1__namespace.DxTemplateHost, 1), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
  /** @nocollapse */ DxiTabComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiTabComponent, selectors: [["dxi-tab"]], contentQueries: function DxiTabComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiItemComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiCommandComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiGroupComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.commandsChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.groupsChildren = _t);
          }
      }, inputs: { alignItemLabels: "alignItemLabels", badge: "badge", colCount: "colCount", colCountByScreen: "colCountByScreen", disabled: "disabled", icon: "icon", items: "items", tabTemplate: "tabTemplate", template: "template", title: "title", commands: "commands", groups: "groups", name: "name" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost, i1.DxTemplateHost]), i0__namespace.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0$4, decls: 1, vars: 0, template: function DxiTabComponent_Template(rf, ctx) {
          if (rf & 1) {
              i0__namespace.ɵɵprojectionDef();
              i0__namespace.ɵɵprojection(0);
          }
      }, styles: ["[_nghost-%COMP%] { display: block; }"] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiTabComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-tab',
                      template: '<ng-content></ng-content>',
                      styles: [':host { display: block; }'],
                      providers: [i1.NestedOptionHost, i1.DxTemplateHost],
                      inputs: [
                          'alignItemLabels',
                          'badge',
                          'colCount',
                          'colCountByScreen',
                          'disabled',
                          'icon',
                          'items',
                          'tabTemplate',
                          'template',
                          'title',
                          'commands',
                          'groups',
                          'name'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }, { type: i0__namespace.Renderer2 }, { type: undefined, decorators: [{
                          type: i0.Inject,
                          args: [common.DOCUMENT]
                      }] }, { type: i1__namespace.DxTemplateHost, decorators: [{
                          type: i0.Host
                      }] }, { type: i0__namespace.ElementRef }];
      }, { itemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiItemComponent; })]
              }], commandsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiCommandComponent; })]
              }], groupsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiGroupComponent; })]
              }] });
  })();
  var DxiTabModule = /** @class */ (function () {
      function DxiTabModule() {
      }
      return DxiTabModule;
  }());
  /** @nocollapse */ DxiTabModule.ɵfac = function DxiTabModule_Factory(t) { return new (t || DxiTabModule)(); };
  /** @nocollapse */ DxiTabModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiTabModule });
  /** @nocollapse */ DxiTabModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiTabModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiTabComponent
                      ],
                      exports: [
                          DxiTabComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiTabModule, { declarations: [DxiTabComponent], exports: [DxiTabComponent] }); })();

  var DxiLocationComponent = /** @class */ (function (_super) {
      __extends(DxiLocationComponent, _super);
      function DxiLocationComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiLocationComponent.prototype, "lat", {
          get: function () {
              return this._getOption('lat');
          },
          set: function (value) {
              this._setOption('lat', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLocationComponent.prototype, "lng", {
          get: function () {
              return this._getOption('lng');
          },
          set: function (value) {
              this._setOption('lng', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLocationComponent.prototype, "col", {
          get: function () {
              return this._getOption('col');
          },
          set: function (value) {
              this._setOption('col', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLocationComponent.prototype, "colspan", {
          get: function () {
              return this._getOption('colspan');
          },
          set: function (value) {
              this._setOption('colspan', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLocationComponent.prototype, "row", {
          get: function () {
              return this._getOption('row');
          },
          set: function (value) {
              this._setOption('row', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLocationComponent.prototype, "rowspan", {
          get: function () {
              return this._getOption('rowspan');
          },
          set: function (value) {
              this._setOption('rowspan', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLocationComponent.prototype, "screen", {
          get: function () {
              return this._getOption('screen');
          },
          set: function (value) {
              this._setOption('screen', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLocationComponent.prototype, "_optionPath", {
          get: function () {
              return 'location';
          },
          enumerable: false,
          configurable: true
      });
      DxiLocationComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiLocationComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiLocationComponent.ɵfac = function DxiLocationComponent_Factory(t) { return new (t || DxiLocationComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiLocationComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiLocationComponent, selectors: [["dxi-location"]], inputs: { lat: "lat", lng: "lng", col: "col", colspan: "colspan", row: "row", rowspan: "rowspan", screen: "screen" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiLocationComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiLocationComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-location',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { lat: [{
                  type: i0.Input
              }], lng: [{
                  type: i0.Input
              }], col: [{
                  type: i0.Input
              }], colspan: [{
                  type: i0.Input
              }], row: [{
                  type: i0.Input
              }], rowspan: [{
                  type: i0.Input
              }], screen: [{
                  type: i0.Input
              }] });
  })();
  var DxiLocationModule = /** @class */ (function () {
      function DxiLocationModule() {
      }
      return DxiLocationModule;
  }());
  /** @nocollapse */ DxiLocationModule.ɵfac = function DxiLocationModule_Factory(t) { return new (t || DxiLocationModule)(); };
  /** @nocollapse */ DxiLocationModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiLocationModule });
  /** @nocollapse */ DxiLocationModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiLocationModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiLocationComponent
                      ],
                      exports: [
                          DxiLocationComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiLocationModule, { declarations: [DxiLocationComponent], exports: [DxiLocationComponent] }); })();

  var _c0$3 = ["*"];
  var DxiItemComponent = /** @class */ (function (_super) {
      __extends(DxiItemComponent, _super);
      function DxiItemComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
          var _this = _super.call(this) || this;
          _this.renderer = renderer;
          _this.document = document;
          _this.element = element;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          templateHost.setHost(_this);
          return _this;
      }
      Object.defineProperty(DxiItemComponent.prototype, "_optionPath", {
          get: function () {
              return 'items';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiItemComponent.prototype, "itemsChildren", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this.setChildren('items', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiItemComponent.prototype, "validationRulesChildren", {
          get: function () {
              return this._getOption('validationRules');
          },
          set: function (value) {
              this.setChildren('validationRules', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiItemComponent.prototype, "tabsChildren", {
          get: function () {
              return this._getOption('tabs');
          },
          set: function (value) {
              this.setChildren('tabs', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiItemComponent.prototype, "locationChildren", {
          get: function () {
              return this._getOption('location');
          },
          set: function (value) {
              this.setChildren('location', value);
          },
          enumerable: false,
          configurable: true
      });
      DxiItemComponent.prototype.setTemplate = function (template) {
          this.template = template;
      };
      DxiItemComponent.prototype.ngAfterViewInit = function () {
          i1.extractTemplate(this, this.element, this.renderer, this.document);
      };
      DxiItemComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiItemComponent;
  }(DxiButtonGroupItem));
  /** @nocollapse */ DxiItemComponent.ɵfac = function DxiItemComponent_Factory(t) { return new (t || DxiItemComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(common.DOCUMENT), i0__namespace.ɵɵdirectiveInject(i1__namespace.DxTemplateHost, 1), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
  /** @nocollapse */ DxiItemComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiItemComponent, selectors: [["dxi-item"]], contentQueries: function DxiItemComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiItemComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiValidationRuleComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiTabComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiLocationComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.validationRulesChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.tabsChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.locationChildren = _t);
          }
      }, inputs: { disabled: "disabled", html: "html", icon: "icon", template: "template", text: "text", title: "title", titleTemplate: "titleTemplate", visible: "visible", onClick: "onClick", stylingMode: "stylingMode", type: "type", baseSize: "baseSize", box: "box", ratio: "ratio", shrink: "shrink", elementAttr: "elementAttr", hint: "hint", beginGroup: "beginGroup", closeMenuOnClick: "closeMenuOnClick", items: "items", selectable: "selectable", selected: "selected", colSpan: "colSpan", cssClass: "cssClass", dataField: "dataField", editorOptions: "editorOptions", editorType: "editorType", helpText: "helpText", isRequired: "isRequired", itemType: "itemType", label: "label", name: "name", validationRules: "validationRules", visibleIndex: "visibleIndex", alignItemLabels: "alignItemLabels", caption: "caption", colCount: "colCount", colCountByScreen: "colCountByScreen", tabPanelOptions: "tabPanelOptions", tabs: "tabs", badge: "badge", tabTemplate: "tabTemplate", buttonOptions: "buttonOptions", horizontalAlignment: "horizontalAlignment", verticalAlignment: "verticalAlignment", locateInMenu: "locateInMenu", location: "location", menuItemTemplate: "menuItemTemplate", options: "options", showText: "showText", widget: "widget", height: "height", width: "width", imageAlt: "imageAlt", imageSrc: "imageSrc", acceptedValues: "acceptedValues", formatName: "formatName", formatValues: "formatValues", key: "key", showChevron: "showChevron", linkAttr: "linkAttr", url: "url", heightRatio: "heightRatio", widthRatio: "widthRatio", expanded: "expanded", hasItems: "hasItems", id: "id", parentId: "parentId" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost, i1.DxTemplateHost]), i0__namespace.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0$3, decls: 1, vars: 0, template: function DxiItemComponent_Template(rf, ctx) {
          if (rf & 1) {
              i0__namespace.ɵɵprojectionDef();
              i0__namespace.ɵɵprojection(0);
          }
      }, styles: ["[_nghost-%COMP%] { display: block; }"] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiItemComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-item',
                      template: '<ng-content></ng-content>',
                      styles: [':host { display: block; }'],
                      providers: [i1.NestedOptionHost, i1.DxTemplateHost],
                      inputs: [
                          'disabled',
                          'html',
                          'icon',
                          'template',
                          'text',
                          'title',
                          'titleTemplate',
                          'visible',
                          'onClick',
                          'stylingMode',
                          'type',
                          'baseSize',
                          'box',
                          'ratio',
                          'shrink',
                          'elementAttr',
                          'hint',
                          'beginGroup',
                          'closeMenuOnClick',
                          'items',
                          'selectable',
                          'selected',
                          'colSpan',
                          'cssClass',
                          'dataField',
                          'editorOptions',
                          'editorType',
                          'helpText',
                          'isRequired',
                          'itemType',
                          'label',
                          'name',
                          'validationRules',
                          'visibleIndex',
                          'alignItemLabels',
                          'caption',
                          'colCount',
                          'colCountByScreen',
                          'tabPanelOptions',
                          'tabs',
                          'badge',
                          'tabTemplate',
                          'buttonOptions',
                          'horizontalAlignment',
                          'verticalAlignment',
                          'locateInMenu',
                          'location',
                          'menuItemTemplate',
                          'options',
                          'showText',
                          'widget',
                          'height',
                          'width',
                          'imageAlt',
                          'imageSrc',
                          'acceptedValues',
                          'formatName',
                          'formatValues',
                          'key',
                          'showChevron',
                          'linkAttr',
                          'url',
                          'heightRatio',
                          'widthRatio',
                          'expanded',
                          'hasItems',
                          'id',
                          'parentId'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }, { type: i0__namespace.Renderer2 }, { type: undefined, decorators: [{
                          type: i0.Inject,
                          args: [common.DOCUMENT]
                      }] }, { type: i1__namespace.DxTemplateHost, decorators: [{
                          type: i0.Host
                      }] }, { type: i0__namespace.ElementRef }];
      }, { itemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiItemComponent; })]
              }], validationRulesChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiValidationRuleComponent; })]
              }], tabsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiTabComponent; })]
              }], locationChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiLocationComponent; })]
              }] });
  })();
  var DxiItemModule = /** @class */ (function () {
      function DxiItemModule() {
      }
      return DxiItemModule;
  }());
  /** @nocollapse */ DxiItemModule.ɵfac = function DxiItemModule_Factory(t) { return new (t || DxiItemModule)(); };
  /** @nocollapse */ DxiItemModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiItemModule });
  /** @nocollapse */ DxiItemModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiItemModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiItemComponent
                      ],
                      exports: [
                          DxiItemComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiItemModule, { declarations: [DxiItemComponent], exports: [DxiItemComponent] }); })();

  var DxoBoxComponent = /** @class */ (function (_super) {
      __extends(DxoBoxComponent, _super);
      function DxoBoxComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'itemsChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoBoxComponent.prototype, "_optionPath", {
          get: function () {
              return 'box';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBoxComponent.prototype, "itemsChildren", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this.setChildren('items', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoBoxComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoBoxComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoBoxComponent;
  }(DxoBoxOptions));
  /** @nocollapse */ DxoBoxComponent.ɵfac = function DxoBoxComponent_Factory(t) { return new (t || DxoBoxComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoBoxComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoBoxComponent, selectors: [["dxo-box"]], contentQueries: function DxoBoxComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiItemComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
          }
      }, inputs: { align: "align", crossAlign: "crossAlign", dataSource: "dataSource", direction: "direction", disabled: "disabled", elementAttr: "elementAttr", height: "height", hoverStateEnabled: "hoverStateEnabled", itemHoldTimeout: "itemHoldTimeout", items: "items", itemTemplate: "itemTemplate", onContentReady: "onContentReady", onDisposing: "onDisposing", onInitialized: "onInitialized", onItemClick: "onItemClick", onItemContextMenu: "onItemContextMenu", onItemHold: "onItemHold", onItemRendered: "onItemRendered", onOptionChanged: "onOptionChanged", rtlEnabled: "rtlEnabled", visible: "visible", width: "width" }, outputs: { itemsChange: "itemsChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoBoxComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBoxComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-box',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'align',
                          'crossAlign',
                          'dataSource',
                          'direction',
                          'disabled',
                          'elementAttr',
                          'height',
                          'hoverStateEnabled',
                          'itemHoldTimeout',
                          'items',
                          'itemTemplate',
                          'onContentReady',
                          'onDisposing',
                          'onInitialized',
                          'onItemClick',
                          'onItemContextMenu',
                          'onItemHold',
                          'onItemRendered',
                          'onOptionChanged',
                          'rtlEnabled',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { itemsChange: [{
                  type: i0.Output
              }], itemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiItemComponent; })]
              }] });
  })();
  var DxoBoxModule = /** @class */ (function () {
      function DxoBoxModule() {
      }
      return DxoBoxModule;
  }());
  /** @nocollapse */ DxoBoxModule.ɵfac = function DxoBoxModule_Factory(t) { return new (t || DxoBoxModule)(); };
  /** @nocollapse */ DxoBoxModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoBoxModule });
  /** @nocollapse */ DxoBoxModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBoxModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoBoxComponent
                      ],
                      exports: [
                          DxoBoxComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoBoxModule, { declarations: [DxoBoxComponent], exports: [DxoBoxComponent] }); })();

  var DxoBreakStyleComponent = /** @class */ (function (_super) {
      __extends(DxoBreakStyleComponent, _super);
      function DxoBreakStyleComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoBreakStyleComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBreakStyleComponent.prototype, "line", {
          get: function () {
              return this._getOption('line');
          },
          set: function (value) {
              this._setOption('line', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBreakStyleComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoBreakStyleComponent.prototype, "_optionPath", {
          get: function () {
              return 'breakStyle';
          },
          enumerable: false,
          configurable: true
      });
      DxoBreakStyleComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoBreakStyleComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoBreakStyleComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoBreakStyleComponent.ɵfac = function DxoBreakStyleComponent_Factory(t) { return new (t || DxoBreakStyleComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoBreakStyleComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoBreakStyleComponent, selectors: [["dxo-break-style"]], inputs: { color: "color", line: "line", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoBreakStyleComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBreakStyleComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-break-style',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], line: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoBreakStyleModule = /** @class */ (function () {
      function DxoBreakStyleModule() {
      }
      return DxoBreakStyleModule;
  }());
  /** @nocollapse */ DxoBreakStyleModule.ɵfac = function DxoBreakStyleModule_Factory(t) { return new (t || DxoBreakStyleModule)(); };
  /** @nocollapse */ DxoBreakStyleModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoBreakStyleModule });
  /** @nocollapse */ DxoBreakStyleModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBreakStyleModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoBreakStyleComponent
                      ],
                      exports: [
                          DxoBreakStyleComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoBreakStyleModule, { declarations: [DxoBreakStyleComponent], exports: [DxoBreakStyleComponent] }); })();

  var DxoBubbleComponent = /** @class */ (function (_super) {
      __extends(DxoBubbleComponent, _super);
      function DxoBubbleComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoBubbleComponent.prototype, "_optionPath", {
          get: function () {
              return 'bubble';
          },
          enumerable: false,
          configurable: true
      });
      DxoBubbleComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoBubbleComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoBubbleComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoBubbleComponent.ɵfac = function DxoBubbleComponent_Factory(t) { return new (t || DxoBubbleComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoBubbleComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoBubbleComponent, selectors: [["dxo-bubble"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoBubbleComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBubbleComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-bubble',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoBubbleModule = /** @class */ (function () {
      function DxoBubbleModule() {
      }
      return DxoBubbleModule;
  }());
  /** @nocollapse */ DxoBubbleModule.ɵfac = function DxoBubbleModule_Factory(t) { return new (t || DxoBubbleModule)(); };
  /** @nocollapse */ DxoBubbleModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoBubbleModule });
  /** @nocollapse */ DxoBubbleModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoBubbleModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoBubbleComponent
                      ],
                      exports: [
                          DxoBubbleComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoBubbleModule, { declarations: [DxoBubbleComponent], exports: [DxoBubbleComponent] }); })();

  var DxiTextEditorButton = /** @class */ (function (_super) {
      __extends(DxiTextEditorButton, _super);
      function DxiTextEditorButton() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiTextEditorButton.prototype, "location", {
          get: function () {
              return this._getOption('location');
          },
          set: function (value) {
              this._setOption('location', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTextEditorButton.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTextEditorButton.prototype, "options", {
          get: function () {
              return this._getOption('options');
          },
          set: function (value) {
              this._setOption('options', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTextEditorButton.prototype, "cssClass", {
          get: function () {
              return this._getOption('cssClass');
          },
          set: function (value) {
              this._setOption('cssClass', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTextEditorButton.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTextEditorButton.prototype, "hint", {
          get: function () {
              return this._getOption('hint');
          },
          set: function (value) {
              this._setOption('hint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTextEditorButton.prototype, "icon", {
          get: function () {
              return this._getOption('icon');
          },
          set: function (value) {
              this._setOption('icon', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTextEditorButton.prototype, "onClick", {
          get: function () {
              return this._getOption('onClick');
          },
          set: function (value) {
              this._setOption('onClick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTextEditorButton.prototype, "template", {
          get: function () {
              return this._getOption('template');
          },
          set: function (value) {
              this._setOption('template', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTextEditorButton.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTextEditorButton.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiTextEditorButton;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiTextEditorButton.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiTextEditorButton_BaseFactory; return function DxiTextEditorButton_Factory(t) { return (ɵDxiTextEditorButton_BaseFactory || (ɵDxiTextEditorButton_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiTextEditorButton)))(t || DxiTextEditorButton); }; }();
  /** @nocollapse */ DxiTextEditorButton.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiTextEditorButton, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiTextEditorButton_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiTextEditorButton, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiButtonComponent = /** @class */ (function (_super) {
      __extends(DxiButtonComponent, _super);
      function DxiButtonComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiButtonComponent.prototype, "_optionPath", {
          get: function () {
              return 'buttons';
          },
          enumerable: false,
          configurable: true
      });
      DxiButtonComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiButtonComponent;
  }(DxiTextEditorButton));
  /** @nocollapse */ DxiButtonComponent.ɵfac = function DxiButtonComponent_Factory(t) { return new (t || DxiButtonComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiButtonComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiButtonComponent, selectors: [["dxi-button"]], inputs: { location: "location", name: "name", options: "options", cssClass: "cssClass", disabled: "disabled", hint: "hint", icon: "icon", onClick: "onClick", template: "template", text: "text", visible: "visible" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiButtonComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiButtonComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-button',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'location',
                          'name',
                          'options',
                          'cssClass',
                          'disabled',
                          'hint',
                          'icon',
                          'onClick',
                          'template',
                          'text',
                          'visible'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxiButtonModule = /** @class */ (function () {
      function DxiButtonModule() {
      }
      return DxiButtonModule;
  }());
  /** @nocollapse */ DxiButtonModule.ɵfac = function DxiButtonModule_Factory(t) { return new (t || DxiButtonModule)(); };
  /** @nocollapse */ DxiButtonModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiButtonModule });
  /** @nocollapse */ DxiButtonModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiButtonModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiButtonComponent
                      ],
                      exports: [
                          DxiButtonComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiButtonModule, { declarations: [DxiButtonComponent], exports: [DxiButtonComponent] }); })();

  var DxoButtonOptions = /** @class */ (function (_super) {
      __extends(DxoButtonOptions, _super);
      function DxoButtonOptions() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoButtonOptions.prototype, "accessKey", {
          get: function () {
              return this._getOption('accessKey');
          },
          set: function (value) {
              this._setOption('accessKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "activeStateEnabled", {
          get: function () {
              return this._getOption('activeStateEnabled');
          },
          set: function (value) {
              this._setOption('activeStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "elementAttr", {
          get: function () {
              return this._getOption('elementAttr');
          },
          set: function (value) {
              this._setOption('elementAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "focusStateEnabled", {
          get: function () {
              return this._getOption('focusStateEnabled');
          },
          set: function (value) {
              this._setOption('focusStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "hint", {
          get: function () {
              return this._getOption('hint');
          },
          set: function (value) {
              this._setOption('hint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "hoverStateEnabled", {
          get: function () {
              return this._getOption('hoverStateEnabled');
          },
          set: function (value) {
              this._setOption('hoverStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "icon", {
          get: function () {
              return this._getOption('icon');
          },
          set: function (value) {
              this._setOption('icon', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "onClick", {
          get: function () {
              return this._getOption('onClick');
          },
          set: function (value) {
              this._setOption('onClick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "onContentReady", {
          get: function () {
              return this._getOption('onContentReady');
          },
          set: function (value) {
              this._setOption('onContentReady', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "onDisposing", {
          get: function () {
              return this._getOption('onDisposing');
          },
          set: function (value) {
              this._setOption('onDisposing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "onInitialized", {
          get: function () {
              return this._getOption('onInitialized');
          },
          set: function (value) {
              this._setOption('onInitialized', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "onOptionChanged", {
          get: function () {
              return this._getOption('onOptionChanged');
          },
          set: function (value) {
              this._setOption('onOptionChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "rtlEnabled", {
          get: function () {
              return this._getOption('rtlEnabled');
          },
          set: function (value) {
              this._setOption('rtlEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "stylingMode", {
          get: function () {
              return this._getOption('stylingMode');
          },
          set: function (value) {
              this._setOption('stylingMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "tabIndex", {
          get: function () {
              return this._getOption('tabIndex');
          },
          set: function (value) {
              this._setOption('tabIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "template", {
          get: function () {
              return this._getOption('template');
          },
          set: function (value) {
              this._setOption('template', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "useSubmitBehavior", {
          get: function () {
              return this._getOption('useSubmitBehavior');
          },
          set: function (value) {
              this._setOption('useSubmitBehavior', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "validationGroup", {
          get: function () {
              return this._getOption('validationGroup');
          },
          set: function (value) {
              this._setOption('validationGroup', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoButtonOptions.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoButtonOptions;
  }(i1.NestedOption));
  /** @nocollapse */ DxoButtonOptions.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoButtonOptions_BaseFactory; return function DxoButtonOptions_Factory(t) { return (ɵDxoButtonOptions_BaseFactory || (ɵDxoButtonOptions_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoButtonOptions)))(t || DxoButtonOptions); }; }();
  /** @nocollapse */ DxoButtonOptions.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoButtonOptions, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoButtonOptions_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoButtonOptions, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoButtonOptionsComponent = /** @class */ (function (_super) {
      __extends(DxoButtonOptionsComponent, _super);
      function DxoButtonOptionsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoButtonOptionsComponent.prototype, "_optionPath", {
          get: function () {
              return 'buttonOptions';
          },
          enumerable: false,
          configurable: true
      });
      DxoButtonOptionsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoButtonOptionsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoButtonOptionsComponent;
  }(DxoButtonOptions));
  /** @nocollapse */ DxoButtonOptionsComponent.ɵfac = function DxoButtonOptionsComponent_Factory(t) { return new (t || DxoButtonOptionsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoButtonOptionsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoButtonOptionsComponent, selectors: [["dxo-button-options"]], inputs: { accessKey: "accessKey", activeStateEnabled: "activeStateEnabled", disabled: "disabled", elementAttr: "elementAttr", focusStateEnabled: "focusStateEnabled", height: "height", hint: "hint", hoverStateEnabled: "hoverStateEnabled", icon: "icon", onClick: "onClick", onContentReady: "onContentReady", onDisposing: "onDisposing", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", rtlEnabled: "rtlEnabled", stylingMode: "stylingMode", tabIndex: "tabIndex", template: "template", text: "text", type: "type", useSubmitBehavior: "useSubmitBehavior", validationGroup: "validationGroup", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoButtonOptionsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoButtonOptionsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-button-options',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'accessKey',
                          'activeStateEnabled',
                          'disabled',
                          'elementAttr',
                          'focusStateEnabled',
                          'height',
                          'hint',
                          'hoverStateEnabled',
                          'icon',
                          'onClick',
                          'onContentReady',
                          'onDisposing',
                          'onInitialized',
                          'onOptionChanged',
                          'rtlEnabled',
                          'stylingMode',
                          'tabIndex',
                          'template',
                          'text',
                          'type',
                          'useSubmitBehavior',
                          'validationGroup',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoButtonOptionsModule = /** @class */ (function () {
      function DxoButtonOptionsModule() {
      }
      return DxoButtonOptionsModule;
  }());
  /** @nocollapse */ DxoButtonOptionsModule.ɵfac = function DxoButtonOptionsModule_Factory(t) { return new (t || DxoButtonOptionsModule)(); };
  /** @nocollapse */ DxoButtonOptionsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoButtonOptionsModule });
  /** @nocollapse */ DxoButtonOptionsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoButtonOptionsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoButtonOptionsComponent
                      ],
                      exports: [
                          DxoButtonOptionsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoButtonOptionsModule, { declarations: [DxoButtonOptionsComponent], exports: [DxoButtonOptionsComponent] }); })();

  var DxoCalendarOptions = /** @class */ (function (_super) {
      __extends(DxoCalendarOptions, _super);
      function DxoCalendarOptions() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoCalendarOptions.prototype, "accessKey", {
          get: function () {
              return this._getOption('accessKey');
          },
          set: function (value) {
              this._setOption('accessKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "activeStateEnabled", {
          get: function () {
              return this._getOption('activeStateEnabled');
          },
          set: function (value) {
              this._setOption('activeStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "cellTemplate", {
          get: function () {
              return this._getOption('cellTemplate');
          },
          set: function (value) {
              this._setOption('cellTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "dateSerializationFormat", {
          get: function () {
              return this._getOption('dateSerializationFormat');
          },
          set: function (value) {
              this._setOption('dateSerializationFormat', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "disabledDates", {
          get: function () {
              return this._getOption('disabledDates');
          },
          set: function (value) {
              this._setOption('disabledDates', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "elementAttr", {
          get: function () {
              return this._getOption('elementAttr');
          },
          set: function (value) {
              this._setOption('elementAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "firstDayOfWeek", {
          get: function () {
              return this._getOption('firstDayOfWeek');
          },
          set: function (value) {
              this._setOption('firstDayOfWeek', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "focusStateEnabled", {
          get: function () {
              return this._getOption('focusStateEnabled');
          },
          set: function (value) {
              this._setOption('focusStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "hint", {
          get: function () {
              return this._getOption('hint');
          },
          set: function (value) {
              this._setOption('hint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "hoverStateEnabled", {
          get: function () {
              return this._getOption('hoverStateEnabled');
          },
          set: function (value) {
              this._setOption('hoverStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "isDirty", {
          get: function () {
              return this._getOption('isDirty');
          },
          set: function (value) {
              this._setOption('isDirty', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "isValid", {
          get: function () {
              return this._getOption('isValid');
          },
          set: function (value) {
              this._setOption('isValid', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "max", {
          get: function () {
              return this._getOption('max');
          },
          set: function (value) {
              this._setOption('max', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "maxZoomLevel", {
          get: function () {
              return this._getOption('maxZoomLevel');
          },
          set: function (value) {
              this._setOption('maxZoomLevel', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "min", {
          get: function () {
              return this._getOption('min');
          },
          set: function (value) {
              this._setOption('min', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "minZoomLevel", {
          get: function () {
              return this._getOption('minZoomLevel');
          },
          set: function (value) {
              this._setOption('minZoomLevel', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "onDisposing", {
          get: function () {
              return this._getOption('onDisposing');
          },
          set: function (value) {
              this._setOption('onDisposing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "onInitialized", {
          get: function () {
              return this._getOption('onInitialized');
          },
          set: function (value) {
              this._setOption('onInitialized', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "onOptionChanged", {
          get: function () {
              return this._getOption('onOptionChanged');
          },
          set: function (value) {
              this._setOption('onOptionChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "onValueChanged", {
          get: function () {
              return this._getOption('onValueChanged');
          },
          set: function (value) {
              this._setOption('onValueChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "readOnly", {
          get: function () {
              return this._getOption('readOnly');
          },
          set: function (value) {
              this._setOption('readOnly', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "rtlEnabled", {
          get: function () {
              return this._getOption('rtlEnabled');
          },
          set: function (value) {
              this._setOption('rtlEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "selectionMode", {
          get: function () {
              return this._getOption('selectionMode');
          },
          set: function (value) {
              this._setOption('selectionMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "selectWeekOnClick", {
          get: function () {
              return this._getOption('selectWeekOnClick');
          },
          set: function (value) {
              this._setOption('selectWeekOnClick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "showTodayButton", {
          get: function () {
              return this._getOption('showTodayButton');
          },
          set: function (value) {
              this._setOption('showTodayButton', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "showWeekNumbers", {
          get: function () {
              return this._getOption('showWeekNumbers');
          },
          set: function (value) {
              this._setOption('showWeekNumbers', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "tabIndex", {
          get: function () {
              return this._getOption('tabIndex');
          },
          set: function (value) {
              this._setOption('tabIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "validationError", {
          get: function () {
              return this._getOption('validationError');
          },
          set: function (value) {
              this._setOption('validationError', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "validationErrors", {
          get: function () {
              return this._getOption('validationErrors');
          },
          set: function (value) {
              this._setOption('validationErrors', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "validationMessageMode", {
          get: function () {
              return this._getOption('validationMessageMode');
          },
          set: function (value) {
              this._setOption('validationMessageMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "validationMessagePosition", {
          get: function () {
              return this._getOption('validationMessagePosition');
          },
          set: function (value) {
              this._setOption('validationMessagePosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "validationStatus", {
          get: function () {
              return this._getOption('validationStatus');
          },
          set: function (value) {
              this._setOption('validationStatus', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "value", {
          get: function () {
              return this._getOption('value');
          },
          set: function (value) {
              this._setOption('value', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "weekNumberRule", {
          get: function () {
              return this._getOption('weekNumberRule');
          },
          set: function (value) {
              this._setOption('weekNumberRule', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCalendarOptions.prototype, "zoomLevel", {
          get: function () {
              return this._getOption('zoomLevel');
          },
          set: function (value) {
              this._setOption('zoomLevel', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoCalendarOptions;
  }(i1.NestedOption));
  /** @nocollapse */ DxoCalendarOptions.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoCalendarOptions_BaseFactory; return function DxoCalendarOptions_Factory(t) { return (ɵDxoCalendarOptions_BaseFactory || (ɵDxoCalendarOptions_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoCalendarOptions)))(t || DxoCalendarOptions); }; }();
  /** @nocollapse */ DxoCalendarOptions.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoCalendarOptions, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoCalendarOptions_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCalendarOptions, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoCalendarOptionsComponent = /** @class */ (function (_super) {
      __extends(DxoCalendarOptionsComponent, _super);
      function DxoCalendarOptionsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'valueChange' },
              { emit: 'zoomLevelChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoCalendarOptionsComponent.prototype, "_optionPath", {
          get: function () {
              return 'calendarOptions';
          },
          enumerable: false,
          configurable: true
      });
      DxoCalendarOptionsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoCalendarOptionsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoCalendarOptionsComponent;
  }(DxoCalendarOptions));
  /** @nocollapse */ DxoCalendarOptionsComponent.ɵfac = function DxoCalendarOptionsComponent_Factory(t) { return new (t || DxoCalendarOptionsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoCalendarOptionsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoCalendarOptionsComponent, selectors: [["dxo-calendar-options"]], inputs: { accessKey: "accessKey", activeStateEnabled: "activeStateEnabled", cellTemplate: "cellTemplate", dateSerializationFormat: "dateSerializationFormat", disabled: "disabled", disabledDates: "disabledDates", elementAttr: "elementAttr", firstDayOfWeek: "firstDayOfWeek", focusStateEnabled: "focusStateEnabled", height: "height", hint: "hint", hoverStateEnabled: "hoverStateEnabled", isDirty: "isDirty", isValid: "isValid", max: "max", maxZoomLevel: "maxZoomLevel", min: "min", minZoomLevel: "minZoomLevel", name: "name", onDisposing: "onDisposing", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", onValueChanged: "onValueChanged", readOnly: "readOnly", rtlEnabled: "rtlEnabled", selectionMode: "selectionMode", selectWeekOnClick: "selectWeekOnClick", showTodayButton: "showTodayButton", showWeekNumbers: "showWeekNumbers", tabIndex: "tabIndex", validationError: "validationError", validationErrors: "validationErrors", validationMessageMode: "validationMessageMode", validationMessagePosition: "validationMessagePosition", validationStatus: "validationStatus", value: "value", visible: "visible", weekNumberRule: "weekNumberRule", width: "width", zoomLevel: "zoomLevel" }, outputs: { valueChange: "valueChange", zoomLevelChange: "zoomLevelChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoCalendarOptionsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCalendarOptionsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-calendar-options',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'accessKey',
                          'activeStateEnabled',
                          'cellTemplate',
                          'dateSerializationFormat',
                          'disabled',
                          'disabledDates',
                          'elementAttr',
                          'firstDayOfWeek',
                          'focusStateEnabled',
                          'height',
                          'hint',
                          'hoverStateEnabled',
                          'isDirty',
                          'isValid',
                          'max',
                          'maxZoomLevel',
                          'min',
                          'minZoomLevel',
                          'name',
                          'onDisposing',
                          'onInitialized',
                          'onOptionChanged',
                          'onValueChanged',
                          'readOnly',
                          'rtlEnabled',
                          'selectionMode',
                          'selectWeekOnClick',
                          'showTodayButton',
                          'showWeekNumbers',
                          'tabIndex',
                          'validationError',
                          'validationErrors',
                          'validationMessageMode',
                          'validationMessagePosition',
                          'validationStatus',
                          'value',
                          'visible',
                          'weekNumberRule',
                          'width',
                          'zoomLevel'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { valueChange: [{
                  type: i0.Output
              }], zoomLevelChange: [{
                  type: i0.Output
              }] });
  })();
  var DxoCalendarOptionsModule = /** @class */ (function () {
      function DxoCalendarOptionsModule() {
      }
      return DxoCalendarOptionsModule;
  }());
  /** @nocollapse */ DxoCalendarOptionsModule.ɵfac = function DxoCalendarOptionsModule_Factory(t) { return new (t || DxoCalendarOptionsModule)(); };
  /** @nocollapse */ DxoCalendarOptionsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoCalendarOptionsModule });
  /** @nocollapse */ DxoCalendarOptionsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCalendarOptionsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoCalendarOptionsComponent
                      ],
                      exports: [
                          DxoCalendarOptionsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoCalendarOptionsModule, { declarations: [DxoCalendarOptionsComponent], exports: [DxoCalendarOptionsComponent] }); })();

  var DxoCandlestickComponent = /** @class */ (function (_super) {
      __extends(DxoCandlestickComponent, _super);
      function DxoCandlestickComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoCandlestickComponent.prototype, "_optionPath", {
          get: function () {
              return 'candlestick';
          },
          enumerable: false,
          configurable: true
      });
      DxoCandlestickComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoCandlestickComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoCandlestickComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoCandlestickComponent.ɵfac = function DxoCandlestickComponent_Factory(t) { return new (t || DxoCandlestickComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoCandlestickComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoCandlestickComponent, selectors: [["dxo-candlestick"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoCandlestickComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCandlestickComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-candlestick',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoCandlestickModule = /** @class */ (function () {
      function DxoCandlestickModule() {
      }
      return DxoCandlestickModule;
  }());
  /** @nocollapse */ DxoCandlestickModule.ɵfac = function DxoCandlestickModule_Factory(t) { return new (t || DxoCandlestickModule)(); };
  /** @nocollapse */ DxoCandlestickModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoCandlestickModule });
  /** @nocollapse */ DxoCandlestickModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCandlestickModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoCandlestickComponent
                      ],
                      exports: [
                          DxoCandlestickComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoCandlestickModule, { declarations: [DxoCandlestickComponent], exports: [DxoCandlestickComponent] }); })();

  var DxiCenterComponent = /** @class */ (function (_super) {
      __extends(DxiCenterComponent, _super);
      function DxiCenterComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiCenterComponent.prototype, "lat", {
          get: function () {
              return this._getOption('lat');
          },
          set: function (value) {
              this._setOption('lat', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCenterComponent.prototype, "lng", {
          get: function () {
              return this._getOption('lng');
          },
          set: function (value) {
              this._setOption('lng', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCenterComponent.prototype, "_optionPath", {
          get: function () {
              return 'center';
          },
          enumerable: false,
          configurable: true
      });
      DxiCenterComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiCenterComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiCenterComponent.ɵfac = function DxiCenterComponent_Factory(t) { return new (t || DxiCenterComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiCenterComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiCenterComponent, selectors: [["dxi-center"]], inputs: { lat: "lat", lng: "lng" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiCenterComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiCenterComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-center',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { lat: [{
                  type: i0.Input
              }], lng: [{
                  type: i0.Input
              }] });
  })();
  var DxiCenterModule = /** @class */ (function () {
      function DxiCenterModule() {
      }
      return DxiCenterModule;
  }());
  /** @nocollapse */ DxiCenterModule.ɵfac = function DxiCenterModule_Factory(t) { return new (t || DxiCenterModule)(); };
  /** @nocollapse */ DxiCenterModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiCenterModule });
  /** @nocollapse */ DxiCenterModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiCenterModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiCenterComponent
                      ],
                      exports: [
                          DxiCenterComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiCenterModule, { declarations: [DxiCenterComponent], exports: [DxiCenterComponent] }); })();

  var DxiDataChange = /** @class */ (function (_super) {
      __extends(DxiDataChange, _super);
      function DxiDataChange() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiDataChange.prototype, "data", {
          get: function () {
              return this._getOption('data');
          },
          set: function (value) {
              this._setOption('data', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataChange.prototype, "insertAfterKey", {
          get: function () {
              return this._getOption('insertAfterKey');
          },
          set: function (value) {
              this._setOption('insertAfterKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataChange.prototype, "insertBeforeKey", {
          get: function () {
              return this._getOption('insertBeforeKey');
          },
          set: function (value) {
              this._setOption('insertBeforeKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataChange.prototype, "key", {
          get: function () {
              return this._getOption('key');
          },
          set: function (value) {
              this._setOption('key', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataChange.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiDataChange;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiDataChange.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiDataChange_BaseFactory; return function DxiDataChange_Factory(t) { return (ɵDxiDataChange_BaseFactory || (ɵDxiDataChange_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiDataChange)))(t || DxiDataChange); }; }();
  /** @nocollapse */ DxiDataChange.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiDataChange, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiDataChange_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiDataChange, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiChangeComponent = /** @class */ (function (_super) {
      __extends(DxiChangeComponent, _super);
      function DxiChangeComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiChangeComponent.prototype, "_optionPath", {
          get: function () {
              return 'changes';
          },
          enumerable: false,
          configurable: true
      });
      DxiChangeComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiChangeComponent;
  }(DxiDataChange));
  /** @nocollapse */ DxiChangeComponent.ɵfac = function DxiChangeComponent_Factory(t) { return new (t || DxiChangeComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiChangeComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiChangeComponent, selectors: [["dxi-change"]], inputs: { data: "data", insertAfterKey: "insertAfterKey", insertBeforeKey: "insertBeforeKey", key: "key", type: "type" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiChangeComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiChangeComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-change',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'data',
                          'insertAfterKey',
                          'insertBeforeKey',
                          'key',
                          'type'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxiChangeModule = /** @class */ (function () {
      function DxiChangeModule() {
      }
      return DxiChangeModule;
  }());
  /** @nocollapse */ DxiChangeModule.ɵfac = function DxiChangeModule_Factory(t) { return new (t || DxiChangeModule)(); };
  /** @nocollapse */ DxiChangeModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiChangeModule });
  /** @nocollapse */ DxiChangeModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiChangeModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiChangeComponent
                      ],
                      exports: [
                          DxiChangeComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiChangeModule, { declarations: [DxiChangeComponent], exports: [DxiChangeComponent] }); })();

  var DxiChartSeries = /** @class */ (function (_super) {
      __extends(DxiChartSeries, _super);
      function DxiChartSeries() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiChartSeries.prototype, "aggregation", {
          get: function () {
              return this._getOption('aggregation');
          },
          set: function (value) {
              this._setOption('aggregation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "argumentField", {
          get: function () {
              return this._getOption('argumentField');
          },
          set: function (value) {
              this._setOption('argumentField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "axis", {
          get: function () {
              return this._getOption('axis');
          },
          set: function (value) {
              this._setOption('axis', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "barOverlapGroup", {
          get: function () {
              return this._getOption('barOverlapGroup');
          },
          set: function (value) {
              this._setOption('barOverlapGroup', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "barPadding", {
          get: function () {
              return this._getOption('barPadding');
          },
          set: function (value) {
              this._setOption('barPadding', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "barWidth", {
          get: function () {
              return this._getOption('barWidth');
          },
          set: function (value) {
              this._setOption('barWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "closeValueField", {
          get: function () {
              return this._getOption('closeValueField');
          },
          set: function (value) {
              this._setOption('closeValueField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "cornerRadius", {
          get: function () {
              return this._getOption('cornerRadius');
          },
          set: function (value) {
              this._setOption('cornerRadius', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "dashStyle", {
          get: function () {
              return this._getOption('dashStyle');
          },
          set: function (value) {
              this._setOption('dashStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "highValueField", {
          get: function () {
              return this._getOption('highValueField');
          },
          set: function (value) {
              this._setOption('highValueField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "hoverMode", {
          get: function () {
              return this._getOption('hoverMode');
          },
          set: function (value) {
              this._setOption('hoverMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "hoverStyle", {
          get: function () {
              return this._getOption('hoverStyle');
          },
          set: function (value) {
              this._setOption('hoverStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "ignoreEmptyPoints", {
          get: function () {
              return this._getOption('ignoreEmptyPoints');
          },
          set: function (value) {
              this._setOption('ignoreEmptyPoints', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "innerColor", {
          get: function () {
              return this._getOption('innerColor');
          },
          set: function (value) {
              this._setOption('innerColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "lowValueField", {
          get: function () {
              return this._getOption('lowValueField');
          },
          set: function (value) {
              this._setOption('lowValueField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "maxLabelCount", {
          get: function () {
              return this._getOption('maxLabelCount');
          },
          set: function (value) {
              this._setOption('maxLabelCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "minBarSize", {
          get: function () {
              return this._getOption('minBarSize');
          },
          set: function (value) {
              this._setOption('minBarSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "openValueField", {
          get: function () {
              return this._getOption('openValueField');
          },
          set: function (value) {
              this._setOption('openValueField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "pane", {
          get: function () {
              return this._getOption('pane');
          },
          set: function (value) {
              this._setOption('pane', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "point", {
          get: function () {
              return this._getOption('point');
          },
          set: function (value) {
              this._setOption('point', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "rangeValue1Field", {
          get: function () {
              return this._getOption('rangeValue1Field');
          },
          set: function (value) {
              this._setOption('rangeValue1Field', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "rangeValue2Field", {
          get: function () {
              return this._getOption('rangeValue2Field');
          },
          set: function (value) {
              this._setOption('rangeValue2Field', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "reduction", {
          get: function () {
              return this._getOption('reduction');
          },
          set: function (value) {
              this._setOption('reduction', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "selectionMode", {
          get: function () {
              return this._getOption('selectionMode');
          },
          set: function (value) {
              this._setOption('selectionMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "selectionStyle", {
          get: function () {
              return this._getOption('selectionStyle');
          },
          set: function (value) {
              this._setOption('selectionStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "showInLegend", {
          get: function () {
              return this._getOption('showInLegend');
          },
          set: function (value) {
              this._setOption('showInLegend', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "sizeField", {
          get: function () {
              return this._getOption('sizeField');
          },
          set: function (value) {
              this._setOption('sizeField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "stack", {
          get: function () {
              return this._getOption('stack');
          },
          set: function (value) {
              this._setOption('stack', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "tag", {
          get: function () {
              return this._getOption('tag');
          },
          set: function (value) {
              this._setOption('tag', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "tagField", {
          get: function () {
              return this._getOption('tagField');
          },
          set: function (value) {
              this._setOption('tagField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "valueErrorBar", {
          get: function () {
              return this._getOption('valueErrorBar');
          },
          set: function (value) {
              this._setOption('valueErrorBar', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "valueField", {
          get: function () {
              return this._getOption('valueField');
          },
          set: function (value) {
              this._setOption('valueField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "argumentType", {
          get: function () {
              return this._getOption('argumentType');
          },
          set: function (value) {
              this._setOption('argumentType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "minSegmentSize", {
          get: function () {
              return this._getOption('minSegmentSize');
          },
          set: function (value) {
              this._setOption('minSegmentSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "smallValuesGrouping", {
          get: function () {
              return this._getOption('smallValuesGrouping');
          },
          set: function (value) {
              this._setOption('smallValuesGrouping', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiChartSeries.prototype, "closed", {
          get: function () {
              return this._getOption('closed');
          },
          set: function (value) {
              this._setOption('closed', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiChartSeries;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiChartSeries.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiChartSeries_BaseFactory; return function DxiChartSeries_Factory(t) { return (ɵDxiChartSeries_BaseFactory || (ɵDxiChartSeries_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiChartSeries)))(t || DxiChartSeries); }; }();
  /** @nocollapse */ DxiChartSeries.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiChartSeries, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiChartSeries_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiChartSeries, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiSeriesComponent = /** @class */ (function (_super) {
      __extends(DxiSeriesComponent, _super);
      function DxiSeriesComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiSeriesComponent.prototype, "_optionPath", {
          get: function () {
              return 'series';
          },
          enumerable: false,
          configurable: true
      });
      DxiSeriesComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiSeriesComponent;
  }(DxiChartSeries));
  /** @nocollapse */ DxiSeriesComponent.ɵfac = function DxiSeriesComponent_Factory(t) { return new (t || DxiSeriesComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiSeriesComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiSeriesComponent, selectors: [["dxi-series"]], inputs: { aggregation: "aggregation", argumentField: "argumentField", axis: "axis", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", name: "name", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", stack: "stack", tag: "tag", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width", argumentType: "argumentType", minSegmentSize: "minSegmentSize", smallValuesGrouping: "smallValuesGrouping", closed: "closed" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiSeriesComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiSeriesComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-series',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'argumentField',
                          'axis',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'name',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'stack',
                          'tag',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width',
                          'argumentType',
                          'minSegmentSize',
                          'smallValuesGrouping',
                          'closed'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxiSeriesModule = /** @class */ (function () {
      function DxiSeriesModule() {
      }
      return DxiSeriesModule;
  }());
  /** @nocollapse */ DxiSeriesModule.ɵfac = function DxiSeriesModule_Factory(t) { return new (t || DxiSeriesModule)(); };
  /** @nocollapse */ DxiSeriesModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiSeriesModule });
  /** @nocollapse */ DxiSeriesModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiSeriesModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiSeriesComponent
                      ],
                      exports: [
                          DxiSeriesComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiSeriesModule, { declarations: [DxiSeriesComponent], exports: [DxiSeriesComponent] }); })();

  var DxoChartComponent = /** @class */ (function (_super) {
      __extends(DxoChartComponent, _super);
      function DxoChartComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoChartComponent.prototype, "barGroupPadding", {
          get: function () {
              return this._getOption('barGroupPadding');
          },
          set: function (value) {
              this._setOption('barGroupPadding', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "barGroupWidth", {
          get: function () {
              return this._getOption('barGroupWidth');
          },
          set: function (value) {
              this._setOption('barGroupWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "bottomIndent", {
          get: function () {
              return this._getOption('bottomIndent');
          },
          set: function (value) {
              this._setOption('bottomIndent', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "commonSeriesSettings", {
          get: function () {
              return this._getOption('commonSeriesSettings');
          },
          set: function (value) {
              this._setOption('commonSeriesSettings', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "dataPrepareSettings", {
          get: function () {
              return this._getOption('dataPrepareSettings');
          },
          set: function (value) {
              this._setOption('dataPrepareSettings', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "maxBubbleSize", {
          get: function () {
              return this._getOption('maxBubbleSize');
          },
          set: function (value) {
              this._setOption('maxBubbleSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "minBubbleSize", {
          get: function () {
              return this._getOption('minBubbleSize');
          },
          set: function (value) {
              this._setOption('minBubbleSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "negativesAsZeroes", {
          get: function () {
              return this._getOption('negativesAsZeroes');
          },
          set: function (value) {
              this._setOption('negativesAsZeroes', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "palette", {
          get: function () {
              return this._getOption('palette');
          },
          set: function (value) {
              this._setOption('palette', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "paletteExtensionMode", {
          get: function () {
              return this._getOption('paletteExtensionMode');
          },
          set: function (value) {
              this._setOption('paletteExtensionMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "series", {
          get: function () {
              return this._getOption('series');
          },
          set: function (value) {
              this._setOption('series', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "seriesTemplate", {
          get: function () {
              return this._getOption('seriesTemplate');
          },
          set: function (value) {
              this._setOption('seriesTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "topIndent", {
          get: function () {
              return this._getOption('topIndent');
          },
          set: function (value) {
              this._setOption('topIndent', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "valueAxis", {
          get: function () {
              return this._getOption('valueAxis');
          },
          set: function (value) {
              this._setOption('valueAxis', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "_optionPath", {
          get: function () {
              return 'chart';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartComponent.prototype, "seriesChildren", {
          get: function () {
              return this._getOption('series');
          },
          set: function (value) {
              this.setChildren('series', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoChartComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoChartComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoChartComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoChartComponent.ɵfac = function DxoChartComponent_Factory(t) { return new (t || DxoChartComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoChartComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoChartComponent, selectors: [["dxo-chart"]], contentQueries: function DxoChartComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiSeriesComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.seriesChildren = _t);
          }
      }, inputs: { barGroupPadding: "barGroupPadding", barGroupWidth: "barGroupWidth", bottomIndent: "bottomIndent", commonSeriesSettings: "commonSeriesSettings", dataPrepareSettings: "dataPrepareSettings", maxBubbleSize: "maxBubbleSize", minBubbleSize: "minBubbleSize", negativesAsZeroes: "negativesAsZeroes", palette: "palette", paletteExtensionMode: "paletteExtensionMode", series: "series", seriesTemplate: "seriesTemplate", topIndent: "topIndent", valueAxis: "valueAxis" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoChartComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoChartComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-chart',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { barGroupPadding: [{
                  type: i0.Input
              }], barGroupWidth: [{
                  type: i0.Input
              }], bottomIndent: [{
                  type: i0.Input
              }], commonSeriesSettings: [{
                  type: i0.Input
              }], dataPrepareSettings: [{
                  type: i0.Input
              }], maxBubbleSize: [{
                  type: i0.Input
              }], minBubbleSize: [{
                  type: i0.Input
              }], negativesAsZeroes: [{
                  type: i0.Input
              }], palette: [{
                  type: i0.Input
              }], paletteExtensionMode: [{
                  type: i0.Input
              }], series: [{
                  type: i0.Input
              }], seriesTemplate: [{
                  type: i0.Input
              }], topIndent: [{
                  type: i0.Input
              }], valueAxis: [{
                  type: i0.Input
              }], seriesChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiSeriesComponent; })]
              }] });
  })();
  var DxoChartModule = /** @class */ (function () {
      function DxoChartModule() {
      }
      return DxoChartModule;
  }());
  /** @nocollapse */ DxoChartModule.ɵfac = function DxoChartModule_Factory(t) { return new (t || DxoChartModule)(); };
  /** @nocollapse */ DxoChartModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoChartModule });
  /** @nocollapse */ DxoChartModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoChartModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoChartComponent
                      ],
                      exports: [
                          DxoChartComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoChartModule, { declarations: [DxoChartComponent], exports: [DxoChartComponent] }); })();

  var DxoColCountByScreenComponent = /** @class */ (function (_super) {
      __extends(DxoColCountByScreenComponent, _super);
      function DxoColCountByScreenComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoColCountByScreenComponent.prototype, "lg", {
          get: function () {
              return this._getOption('lg');
          },
          set: function (value) {
              this._setOption('lg', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColCountByScreenComponent.prototype, "md", {
          get: function () {
              return this._getOption('md');
          },
          set: function (value) {
              this._setOption('md', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColCountByScreenComponent.prototype, "sm", {
          get: function () {
              return this._getOption('sm');
          },
          set: function (value) {
              this._setOption('sm', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColCountByScreenComponent.prototype, "xs", {
          get: function () {
              return this._getOption('xs');
          },
          set: function (value) {
              this._setOption('xs', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColCountByScreenComponent.prototype, "_optionPath", {
          get: function () {
              return 'colCountByScreen';
          },
          enumerable: false,
          configurable: true
      });
      DxoColCountByScreenComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoColCountByScreenComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoColCountByScreenComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoColCountByScreenComponent.ɵfac = function DxoColCountByScreenComponent_Factory(t) { return new (t || DxoColCountByScreenComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoColCountByScreenComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoColCountByScreenComponent, selectors: [["dxo-col-count-by-screen"]], inputs: { lg: "lg", md: "md", sm: "sm", xs: "xs" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoColCountByScreenComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoColCountByScreenComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-col-count-by-screen',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { lg: [{
                  type: i0.Input
              }], md: [{
                  type: i0.Input
              }], sm: [{
                  type: i0.Input
              }], xs: [{
                  type: i0.Input
              }] });
  })();
  var DxoColCountByScreenModule = /** @class */ (function () {
      function DxoColCountByScreenModule() {
      }
      return DxoColCountByScreenModule;
  }());
  /** @nocollapse */ DxoColCountByScreenModule.ɵfac = function DxoColCountByScreenModule_Factory(t) { return new (t || DxoColCountByScreenModule)(); };
  /** @nocollapse */ DxoColCountByScreenModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoColCountByScreenModule });
  /** @nocollapse */ DxoColCountByScreenModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoColCountByScreenModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoColCountByScreenComponent
                      ],
                      exports: [
                          DxoColCountByScreenComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoColCountByScreenModule, { declarations: [DxoColCountByScreenComponent], exports: [DxoColCountByScreenComponent] }); })();

  var DxiColComponent = /** @class */ (function (_super) {
      __extends(DxiColComponent, _super);
      function DxiColComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiColComponent.prototype, "baseSize", {
          get: function () {
              return this._getOption('baseSize');
          },
          set: function (value) {
              this._setOption('baseSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiColComponent.prototype, "ratio", {
          get: function () {
              return this._getOption('ratio');
          },
          set: function (value) {
              this._setOption('ratio', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiColComponent.prototype, "screen", {
          get: function () {
              return this._getOption('screen');
          },
          set: function (value) {
              this._setOption('screen', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiColComponent.prototype, "shrink", {
          get: function () {
              return this._getOption('shrink');
          },
          set: function (value) {
              this._setOption('shrink', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiColComponent.prototype, "_optionPath", {
          get: function () {
              return 'cols';
          },
          enumerable: false,
          configurable: true
      });
      DxiColComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiColComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiColComponent.ɵfac = function DxiColComponent_Factory(t) { return new (t || DxiColComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiColComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiColComponent, selectors: [["dxi-col"]], inputs: { baseSize: "baseSize", ratio: "ratio", screen: "screen", shrink: "shrink" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiColComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiColComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-col',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { baseSize: [{
                  type: i0.Input
              }], ratio: [{
                  type: i0.Input
              }], screen: [{
                  type: i0.Input
              }], shrink: [{
                  type: i0.Input
              }] });
  })();
  var DxiColModule = /** @class */ (function () {
      function DxiColModule() {
      }
      return DxiColModule;
  }());
  /** @nocollapse */ DxiColModule.ɵfac = function DxiColModule_Factory(t) { return new (t || DxiColModule)(); };
  /** @nocollapse */ DxiColModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiColModule });
  /** @nocollapse */ DxiColModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiColModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiColComponent
                      ],
                      exports: [
                          DxiColComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiColModule, { declarations: [DxiColComponent], exports: [DxiColComponent] }); })();

  var DxoCollisionComponent = /** @class */ (function (_super) {
      __extends(DxoCollisionComponent, _super);
      function DxoCollisionComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoCollisionComponent.prototype, "x", {
          get: function () {
              return this._getOption('x');
          },
          set: function (value) {
              this._setOption('x', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCollisionComponent.prototype, "y", {
          get: function () {
              return this._getOption('y');
          },
          set: function (value) {
              this._setOption('y', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCollisionComponent.prototype, "_optionPath", {
          get: function () {
              return 'collision';
          },
          enumerable: false,
          configurable: true
      });
      DxoCollisionComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoCollisionComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoCollisionComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoCollisionComponent.ɵfac = function DxoCollisionComponent_Factory(t) { return new (t || DxoCollisionComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoCollisionComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoCollisionComponent, selectors: [["dxo-collision"]], inputs: { x: "x", y: "y" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoCollisionComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCollisionComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-collision',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { x: [{
                  type: i0.Input
              }], y: [{
                  type: i0.Input
              }] });
  })();
  var DxoCollisionModule = /** @class */ (function () {
      function DxoCollisionModule() {
      }
      return DxoCollisionModule;
  }());
  /** @nocollapse */ DxoCollisionModule.ɵfac = function DxoCollisionModule_Factory(t) { return new (t || DxoCollisionModule)(); };
  /** @nocollapse */ DxoCollisionModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoCollisionModule });
  /** @nocollapse */ DxoCollisionModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCollisionModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoCollisionComponent
                      ],
                      exports: [
                          DxoCollisionComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoCollisionModule, { declarations: [DxoCollisionComponent], exports: [DxoCollisionComponent] }); })();

  var DxoColorComponent = /** @class */ (function (_super) {
      __extends(DxoColorComponent, _super);
      function DxoColorComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoColorComponent.prototype, "_optionPath", {
          get: function () {
              return 'color';
          },
          enumerable: false,
          configurable: true
      });
      DxoColorComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoColorComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoColorComponent;
  }(DxoChartsColor));
  /** @nocollapse */ DxoColorComponent.ɵfac = function DxoColorComponent_Factory(t) { return new (t || DxoColorComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoColorComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoColorComponent, selectors: [["dxo-color"]], inputs: { base: "base", fillId: "fillId" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoColorComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoColorComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-color',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'base',
                          'fillId'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoColorModule = /** @class */ (function () {
      function DxoColorModule() {
      }
      return DxoColorModule;
  }());
  /** @nocollapse */ DxoColorModule.ɵfac = function DxoColorModule_Factory(t) { return new (t || DxoColorModule)(); };
  /** @nocollapse */ DxoColorModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoColorModule });
  /** @nocollapse */ DxoColorModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoColorModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoColorComponent
                      ],
                      exports: [
                          DxoColorComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoColorModule, { declarations: [DxoColorComponent], exports: [DxoColorComponent] }); })();

  var DxoColorizerComponent = /** @class */ (function (_super) {
      __extends(DxoColorizerComponent, _super);
      function DxoColorizerComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoColorizerComponent.prototype, "colorCodeField", {
          get: function () {
              return this._getOption('colorCodeField');
          },
          set: function (value) {
              this._setOption('colorCodeField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColorizerComponent.prototype, "colorizeGroups", {
          get: function () {
              return this._getOption('colorizeGroups');
          },
          set: function (value) {
              this._setOption('colorizeGroups', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColorizerComponent.prototype, "palette", {
          get: function () {
              return this._getOption('palette');
          },
          set: function (value) {
              this._setOption('palette', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColorizerComponent.prototype, "paletteExtensionMode", {
          get: function () {
              return this._getOption('paletteExtensionMode');
          },
          set: function (value) {
              this._setOption('paletteExtensionMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColorizerComponent.prototype, "range", {
          get: function () {
              return this._getOption('range');
          },
          set: function (value) {
              this._setOption('range', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColorizerComponent.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColorizerComponent.prototype, "_optionPath", {
          get: function () {
              return 'colorizer';
          },
          enumerable: false,
          configurable: true
      });
      DxoColorizerComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoColorizerComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoColorizerComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoColorizerComponent.ɵfac = function DxoColorizerComponent_Factory(t) { return new (t || DxoColorizerComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoColorizerComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoColorizerComponent, selectors: [["dxo-colorizer"]], inputs: { colorCodeField: "colorCodeField", colorizeGroups: "colorizeGroups", palette: "palette", paletteExtensionMode: "paletteExtensionMode", range: "range", type: "type" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoColorizerComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoColorizerComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-colorizer',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { colorCodeField: [{
                  type: i0.Input
              }], colorizeGroups: [{
                  type: i0.Input
              }], palette: [{
                  type: i0.Input
              }], paletteExtensionMode: [{
                  type: i0.Input
              }], range: [{
                  type: i0.Input
              }], type: [{
                  type: i0.Input
              }] });
  })();
  var DxoColorizerModule = /** @class */ (function () {
      function DxoColorizerModule() {
      }
      return DxoColorizerModule;
  }());
  /** @nocollapse */ DxoColorizerModule.ɵfac = function DxoColorizerModule_Factory(t) { return new (t || DxoColorizerModule)(); };
  /** @nocollapse */ DxoColorizerModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoColorizerModule });
  /** @nocollapse */ DxoColorizerModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoColorizerModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoColorizerComponent
                      ],
                      exports: [
                          DxoColorizerComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoColorizerModule, { declarations: [DxoColorizerComponent], exports: [DxoColorizerComponent] }); })();

  var DxoColumnChooserComponent = /** @class */ (function (_super) {
      __extends(DxoColumnChooserComponent, _super);
      function DxoColumnChooserComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoColumnChooserComponent.prototype, "allowSearch", {
          get: function () {
              return this._getOption('allowSearch');
          },
          set: function (value) {
              this._setOption('allowSearch', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserComponent.prototype, "container", {
          get: function () {
              return this._getOption('container');
          },
          set: function (value) {
              this._setOption('container', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserComponent.prototype, "emptyPanelText", {
          get: function () {
              return this._getOption('emptyPanelText');
          },
          set: function (value) {
              this._setOption('emptyPanelText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserComponent.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserComponent.prototype, "mode", {
          get: function () {
              return this._getOption('mode');
          },
          set: function (value) {
              this._setOption('mode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserComponent.prototype, "position", {
          get: function () {
              return this._getOption('position');
          },
          set: function (value) {
              this._setOption('position', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserComponent.prototype, "search", {
          get: function () {
              return this._getOption('search');
          },
          set: function (value) {
              this._setOption('search', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserComponent.prototype, "searchTimeout", {
          get: function () {
              return this._getOption('searchTimeout');
          },
          set: function (value) {
              this._setOption('searchTimeout', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserComponent.prototype, "selection", {
          get: function () {
              return this._getOption('selection');
          },
          set: function (value) {
              this._setOption('selection', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserComponent.prototype, "sortOrder", {
          get: function () {
              return this._getOption('sortOrder');
          },
          set: function (value) {
              this._setOption('sortOrder', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserComponent.prototype, "title", {
          get: function () {
              return this._getOption('title');
          },
          set: function (value) {
              this._setOption('title', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserComponent.prototype, "_optionPath", {
          get: function () {
              return 'columnChooser';
          },
          enumerable: false,
          configurable: true
      });
      DxoColumnChooserComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoColumnChooserComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoColumnChooserComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoColumnChooserComponent.ɵfac = function DxoColumnChooserComponent_Factory(t) { return new (t || DxoColumnChooserComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoColumnChooserComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoColumnChooserComponent, selectors: [["dxo-column-chooser"]], inputs: { allowSearch: "allowSearch", container: "container", emptyPanelText: "emptyPanelText", enabled: "enabled", height: "height", mode: "mode", position: "position", search: "search", searchTimeout: "searchTimeout", selection: "selection", sortOrder: "sortOrder", title: "title", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoColumnChooserComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoColumnChooserComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-column-chooser',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowSearch: [{
                  type: i0.Input
              }], container: [{
                  type: i0.Input
              }], emptyPanelText: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }], height: [{
                  type: i0.Input
              }], mode: [{
                  type: i0.Input
              }], position: [{
                  type: i0.Input
              }], search: [{
                  type: i0.Input
              }], searchTimeout: [{
                  type: i0.Input
              }], selection: [{
                  type: i0.Input
              }], sortOrder: [{
                  type: i0.Input
              }], title: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoColumnChooserModule = /** @class */ (function () {
      function DxoColumnChooserModule() {
      }
      return DxoColumnChooserModule;
  }());
  /** @nocollapse */ DxoColumnChooserModule.ɵfac = function DxoColumnChooserModule_Factory(t) { return new (t || DxoColumnChooserModule)(); };
  /** @nocollapse */ DxoColumnChooserModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoColumnChooserModule });
  /** @nocollapse */ DxoColumnChooserModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoColumnChooserModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoColumnChooserComponent
                      ],
                      exports: [
                          DxoColumnChooserComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoColumnChooserModule, { declarations: [DxoColumnChooserComponent], exports: [DxoColumnChooserComponent] }); })();

  var DxiDataGridColumn = /** @class */ (function (_super) {
      __extends(DxiDataGridColumn, _super);
      function DxiDataGridColumn() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiDataGridColumn.prototype, "alignment", {
          get: function () {
              return this._getOption('alignment');
          },
          set: function (value) {
              this._setOption('alignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "allowEditing", {
          get: function () {
              return this._getOption('allowEditing');
          },
          set: function (value) {
              this._setOption('allowEditing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "allowExporting", {
          get: function () {
              return this._getOption('allowExporting');
          },
          set: function (value) {
              this._setOption('allowExporting', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "allowFiltering", {
          get: function () {
              return this._getOption('allowFiltering');
          },
          set: function (value) {
              this._setOption('allowFiltering', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "allowFixing", {
          get: function () {
              return this._getOption('allowFixing');
          },
          set: function (value) {
              this._setOption('allowFixing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "allowGrouping", {
          get: function () {
              return this._getOption('allowGrouping');
          },
          set: function (value) {
              this._setOption('allowGrouping', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "allowHeaderFiltering", {
          get: function () {
              return this._getOption('allowHeaderFiltering');
          },
          set: function (value) {
              this._setOption('allowHeaderFiltering', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "allowHiding", {
          get: function () {
              return this._getOption('allowHiding');
          },
          set: function (value) {
              this._setOption('allowHiding', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "allowReordering", {
          get: function () {
              return this._getOption('allowReordering');
          },
          set: function (value) {
              this._setOption('allowReordering', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "allowResizing", {
          get: function () {
              return this._getOption('allowResizing');
          },
          set: function (value) {
              this._setOption('allowResizing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "allowSearch", {
          get: function () {
              return this._getOption('allowSearch');
          },
          set: function (value) {
              this._setOption('allowSearch', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "allowSorting", {
          get: function () {
              return this._getOption('allowSorting');
          },
          set: function (value) {
              this._setOption('allowSorting', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "autoExpandGroup", {
          get: function () {
              return this._getOption('autoExpandGroup');
          },
          set: function (value) {
              this._setOption('autoExpandGroup', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "buttons", {
          get: function () {
              return this._getOption('buttons');
          },
          set: function (value) {
              this._setOption('buttons', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "calculateCellValue", {
          get: function () {
              return this._getOption('calculateCellValue');
          },
          set: function (value) {
              this._setOption('calculateCellValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "calculateDisplayValue", {
          get: function () {
              return this._getOption('calculateDisplayValue');
          },
          set: function (value) {
              this._setOption('calculateDisplayValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "calculateFilterExpression", {
          get: function () {
              return this._getOption('calculateFilterExpression');
          },
          set: function (value) {
              this._setOption('calculateFilterExpression', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "calculateGroupValue", {
          get: function () {
              return this._getOption('calculateGroupValue');
          },
          set: function (value) {
              this._setOption('calculateGroupValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "calculateSortValue", {
          get: function () {
              return this._getOption('calculateSortValue');
          },
          set: function (value) {
              this._setOption('calculateSortValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "caption", {
          get: function () {
              return this._getOption('caption');
          },
          set: function (value) {
              this._setOption('caption', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "cellTemplate", {
          get: function () {
              return this._getOption('cellTemplate');
          },
          set: function (value) {
              this._setOption('cellTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "columns", {
          get: function () {
              return this._getOption('columns');
          },
          set: function (value) {
              this._setOption('columns', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "cssClass", {
          get: function () {
              return this._getOption('cssClass');
          },
          set: function (value) {
              this._setOption('cssClass', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "customizeText", {
          get: function () {
              return this._getOption('customizeText');
          },
          set: function (value) {
              this._setOption('customizeText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "dataField", {
          get: function () {
              return this._getOption('dataField');
          },
          set: function (value) {
              this._setOption('dataField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "dataType", {
          get: function () {
              return this._getOption('dataType');
          },
          set: function (value) {
              this._setOption('dataType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "editCellTemplate", {
          get: function () {
              return this._getOption('editCellTemplate');
          },
          set: function (value) {
              this._setOption('editCellTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "editorOptions", {
          get: function () {
              return this._getOption('editorOptions');
          },
          set: function (value) {
              this._setOption('editorOptions', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "encodeHtml", {
          get: function () {
              return this._getOption('encodeHtml');
          },
          set: function (value) {
              this._setOption('encodeHtml', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "falseText", {
          get: function () {
              return this._getOption('falseText');
          },
          set: function (value) {
              this._setOption('falseText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "filterOperations", {
          get: function () {
              return this._getOption('filterOperations');
          },
          set: function (value) {
              this._setOption('filterOperations', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "filterType", {
          get: function () {
              return this._getOption('filterType');
          },
          set: function (value) {
              this._setOption('filterType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "filterValue", {
          get: function () {
              return this._getOption('filterValue');
          },
          set: function (value) {
              this._setOption('filterValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "filterValues", {
          get: function () {
              return this._getOption('filterValues');
          },
          set: function (value) {
              this._setOption('filterValues', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "fixed", {
          get: function () {
              return this._getOption('fixed');
          },
          set: function (value) {
              this._setOption('fixed', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "fixedPosition", {
          get: function () {
              return this._getOption('fixedPosition');
          },
          set: function (value) {
              this._setOption('fixedPosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "format", {
          get: function () {
              return this._getOption('format');
          },
          set: function (value) {
              this._setOption('format', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "formItem", {
          get: function () {
              return this._getOption('formItem');
          },
          set: function (value) {
              this._setOption('formItem', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "groupCellTemplate", {
          get: function () {
              return this._getOption('groupCellTemplate');
          },
          set: function (value) {
              this._setOption('groupCellTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "groupIndex", {
          get: function () {
              return this._getOption('groupIndex');
          },
          set: function (value) {
              this._setOption('groupIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "headerCellTemplate", {
          get: function () {
              return this._getOption('headerCellTemplate');
          },
          set: function (value) {
              this._setOption('headerCellTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "headerFilter", {
          get: function () {
              return this._getOption('headerFilter');
          },
          set: function (value) {
              this._setOption('headerFilter', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "hidingPriority", {
          get: function () {
              return this._getOption('hidingPriority');
          },
          set: function (value) {
              this._setOption('hidingPriority', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "isBand", {
          get: function () {
              return this._getOption('isBand');
          },
          set: function (value) {
              this._setOption('isBand', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "lookup", {
          get: function () {
              return this._getOption('lookup');
          },
          set: function (value) {
              this._setOption('lookup', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "minWidth", {
          get: function () {
              return this._getOption('minWidth');
          },
          set: function (value) {
              this._setOption('minWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "ownerBand", {
          get: function () {
              return this._getOption('ownerBand');
          },
          set: function (value) {
              this._setOption('ownerBand', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "renderAsync", {
          get: function () {
              return this._getOption('renderAsync');
          },
          set: function (value) {
              this._setOption('renderAsync', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "selectedFilterOperation", {
          get: function () {
              return this._getOption('selectedFilterOperation');
          },
          set: function (value) {
              this._setOption('selectedFilterOperation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "setCellValue", {
          get: function () {
              return this._getOption('setCellValue');
          },
          set: function (value) {
              this._setOption('setCellValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "showEditorAlways", {
          get: function () {
              return this._getOption('showEditorAlways');
          },
          set: function (value) {
              this._setOption('showEditorAlways', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "showInColumnChooser", {
          get: function () {
              return this._getOption('showInColumnChooser');
          },
          set: function (value) {
              this._setOption('showInColumnChooser', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "showWhenGrouped", {
          get: function () {
              return this._getOption('showWhenGrouped');
          },
          set: function (value) {
              this._setOption('showWhenGrouped', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "sortIndex", {
          get: function () {
              return this._getOption('sortIndex');
          },
          set: function (value) {
              this._setOption('sortIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "sortingMethod", {
          get: function () {
              return this._getOption('sortingMethod');
          },
          set: function (value) {
              this._setOption('sortingMethod', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "sortOrder", {
          get: function () {
              return this._getOption('sortOrder');
          },
          set: function (value) {
              this._setOption('sortOrder', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "trueText", {
          get: function () {
              return this._getOption('trueText');
          },
          set: function (value) {
              this._setOption('trueText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "validationRules", {
          get: function () {
              return this._getOption('validationRules');
          },
          set: function (value) {
              this._setOption('validationRules', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "visibleIndex", {
          get: function () {
              return this._getOption('visibleIndex');
          },
          set: function (value) {
              this._setOption('visibleIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiDataGridColumn.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiDataGridColumn;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiDataGridColumn.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiDataGridColumn_BaseFactory; return function DxiDataGridColumn_Factory(t) { return (ɵDxiDataGridColumn_BaseFactory || (ɵDxiDataGridColumn_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiDataGridColumn)))(t || DxiDataGridColumn); }; }();
  /** @nocollapse */ DxiDataGridColumn.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiDataGridColumn, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiDataGridColumn_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiDataGridColumn, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiColumnComponent = /** @class */ (function (_super) {
      __extends(DxiColumnComponent, _super);
      function DxiColumnComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'filterValueChange' },
              { emit: 'filterValuesChange' },
              { emit: 'groupIndexChange' },
              { emit: 'selectedFilterOperationChange' },
              { emit: 'sortIndexChange' },
              { emit: 'sortOrderChange' },
              { emit: 'visibleChange' },
              { emit: 'visibleIndexChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiColumnComponent.prototype, "_optionPath", {
          get: function () {
              return 'columns';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiColumnComponent.prototype, "buttonsChildren", {
          get: function () {
              return this._getOption('buttons');
          },
          set: function (value) {
              this.setChildren('buttons', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiColumnComponent.prototype, "columnsChildren", {
          get: function () {
              return this._getOption('columns');
          },
          set: function (value) {
              this.setChildren('columns', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiColumnComponent.prototype, "validationRulesChildren", {
          get: function () {
              return this._getOption('validationRules');
          },
          set: function (value) {
              this.setChildren('validationRules', value);
          },
          enumerable: false,
          configurable: true
      });
      DxiColumnComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiColumnComponent;
  }(DxiDataGridColumn));
  /** @nocollapse */ DxiColumnComponent.ɵfac = function DxiColumnComponent_Factory(t) { return new (t || DxiColumnComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiColumnComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiColumnComponent, selectors: [["dxi-column"]], contentQueries: function DxiColumnComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiButtonComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiColumnComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiValidationRuleComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.buttonsChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.columnsChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.validationRulesChildren = _t);
          }
      }, inputs: { alignment: "alignment", allowEditing: "allowEditing", allowExporting: "allowExporting", allowFiltering: "allowFiltering", allowFixing: "allowFixing", allowGrouping: "allowGrouping", allowHeaderFiltering: "allowHeaderFiltering", allowHiding: "allowHiding", allowReordering: "allowReordering", allowResizing: "allowResizing", allowSearch: "allowSearch", allowSorting: "allowSorting", autoExpandGroup: "autoExpandGroup", buttons: "buttons", calculateCellValue: "calculateCellValue", calculateDisplayValue: "calculateDisplayValue", calculateFilterExpression: "calculateFilterExpression", calculateGroupValue: "calculateGroupValue", calculateSortValue: "calculateSortValue", caption: "caption", cellTemplate: "cellTemplate", columns: "columns", cssClass: "cssClass", customizeText: "customizeText", dataField: "dataField", dataType: "dataType", editCellTemplate: "editCellTemplate", editorOptions: "editorOptions", encodeHtml: "encodeHtml", falseText: "falseText", filterOperations: "filterOperations", filterType: "filterType", filterValue: "filterValue", filterValues: "filterValues", fixed: "fixed", fixedPosition: "fixedPosition", format: "format", formItem: "formItem", groupCellTemplate: "groupCellTemplate", groupIndex: "groupIndex", headerCellTemplate: "headerCellTemplate", headerFilter: "headerFilter", hidingPriority: "hidingPriority", isBand: "isBand", lookup: "lookup", minWidth: "minWidth", name: "name", ownerBand: "ownerBand", renderAsync: "renderAsync", selectedFilterOperation: "selectedFilterOperation", setCellValue: "setCellValue", showEditorAlways: "showEditorAlways", showInColumnChooser: "showInColumnChooser", showWhenGrouped: "showWhenGrouped", sortIndex: "sortIndex", sortingMethod: "sortingMethod", sortOrder: "sortOrder", trueText: "trueText", type: "type", validationRules: "validationRules", visible: "visible", visibleIndex: "visibleIndex", width: "width" }, outputs: { filterValueChange: "filterValueChange", filterValuesChange: "filterValuesChange", groupIndexChange: "groupIndexChange", selectedFilterOperationChange: "selectedFilterOperationChange", sortIndexChange: "sortIndexChange", sortOrderChange: "sortOrderChange", visibleChange: "visibleChange", visibleIndexChange: "visibleIndexChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiColumnComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiColumnComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-column',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'alignment',
                          'allowEditing',
                          'allowExporting',
                          'allowFiltering',
                          'allowFixing',
                          'allowGrouping',
                          'allowHeaderFiltering',
                          'allowHiding',
                          'allowReordering',
                          'allowResizing',
                          'allowSearch',
                          'allowSorting',
                          'autoExpandGroup',
                          'buttons',
                          'calculateCellValue',
                          'calculateDisplayValue',
                          'calculateFilterExpression',
                          'calculateGroupValue',
                          'calculateSortValue',
                          'caption',
                          'cellTemplate',
                          'columns',
                          'cssClass',
                          'customizeText',
                          'dataField',
                          'dataType',
                          'editCellTemplate',
                          'editorOptions',
                          'encodeHtml',
                          'falseText',
                          'filterOperations',
                          'filterType',
                          'filterValue',
                          'filterValues',
                          'fixed',
                          'fixedPosition',
                          'format',
                          'formItem',
                          'groupCellTemplate',
                          'groupIndex',
                          'headerCellTemplate',
                          'headerFilter',
                          'hidingPriority',
                          'isBand',
                          'lookup',
                          'minWidth',
                          'name',
                          'ownerBand',
                          'renderAsync',
                          'selectedFilterOperation',
                          'setCellValue',
                          'showEditorAlways',
                          'showInColumnChooser',
                          'showWhenGrouped',
                          'sortIndex',
                          'sortingMethod',
                          'sortOrder',
                          'trueText',
                          'type',
                          'validationRules',
                          'visible',
                          'visibleIndex',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { filterValueChange: [{
                  type: i0.Output
              }], filterValuesChange: [{
                  type: i0.Output
              }], groupIndexChange: [{
                  type: i0.Output
              }], selectedFilterOperationChange: [{
                  type: i0.Output
              }], sortIndexChange: [{
                  type: i0.Output
              }], sortOrderChange: [{
                  type: i0.Output
              }], visibleChange: [{
                  type: i0.Output
              }], visibleIndexChange: [{
                  type: i0.Output
              }], buttonsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiButtonComponent; })]
              }], columnsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiColumnComponent; })]
              }], validationRulesChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiValidationRuleComponent; })]
              }] });
  })();
  var DxiColumnModule = /** @class */ (function () {
      function DxiColumnModule() {
      }
      return DxiColumnModule;
  }());
  /** @nocollapse */ DxiColumnModule.ɵfac = function DxiColumnModule_Factory(t) { return new (t || DxiColumnModule)(); };
  /** @nocollapse */ DxiColumnModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiColumnModule });
  /** @nocollapse */ DxiColumnModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiColumnModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiColumnComponent
                      ],
                      exports: [
                          DxiColumnComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiColumnModule, { declarations: [DxiColumnComponent], exports: [DxiColumnComponent] }); })();

  var DxoColumnFixingComponent = /** @class */ (function (_super) {
      __extends(DxoColumnFixingComponent, _super);
      function DxoColumnFixingComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoColumnFixingComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnFixingComponent.prototype, "texts", {
          get: function () {
              return this._getOption('texts');
          },
          set: function (value) {
              this._setOption('texts', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnFixingComponent.prototype, "_optionPath", {
          get: function () {
              return 'columnFixing';
          },
          enumerable: false,
          configurable: true
      });
      DxoColumnFixingComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoColumnFixingComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoColumnFixingComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoColumnFixingComponent.ɵfac = function DxoColumnFixingComponent_Factory(t) { return new (t || DxoColumnFixingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoColumnFixingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoColumnFixingComponent, selectors: [["dxo-column-fixing"]], inputs: { enabled: "enabled", texts: "texts" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoColumnFixingComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoColumnFixingComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-column-fixing',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { enabled: [{
                  type: i0.Input
              }], texts: [{
                  type: i0.Input
              }] });
  })();
  var DxoColumnFixingModule = /** @class */ (function () {
      function DxoColumnFixingModule() {
      }
      return DxoColumnFixingModule;
  }());
  /** @nocollapse */ DxoColumnFixingModule.ɵfac = function DxoColumnFixingModule_Factory(t) { return new (t || DxoColumnFixingModule)(); };
  /** @nocollapse */ DxoColumnFixingModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoColumnFixingModule });
  /** @nocollapse */ DxoColumnFixingModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoColumnFixingModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoColumnFixingComponent
                      ],
                      exports: [
                          DxoColumnFixingComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoColumnFixingModule, { declarations: [DxoColumnFixingComponent], exports: [DxoColumnFixingComponent] }); })();

  var DxoChartCommonAnnotationConfig = /** @class */ (function (_super) {
      __extends(DxoChartCommonAnnotationConfig, _super);
      function DxoChartCommonAnnotationConfig() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "allowDragging", {
          get: function () {
              return this._getOption('allowDragging');
          },
          set: function (value) {
              this._setOption('allowDragging', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "argument", {
          get: function () {
              return this._getOption('argument');
          },
          set: function (value) {
              this._setOption('argument', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "arrowLength", {
          get: function () {
              return this._getOption('arrowLength');
          },
          set: function (value) {
              this._setOption('arrowLength', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "arrowWidth", {
          get: function () {
              return this._getOption('arrowWidth');
          },
          set: function (value) {
              this._setOption('arrowWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "axis", {
          get: function () {
              return this._getOption('axis');
          },
          set: function (value) {
              this._setOption('axis', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "customizeTooltip", {
          get: function () {
              return this._getOption('customizeTooltip');
          },
          set: function (value) {
              this._setOption('customizeTooltip', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "data", {
          get: function () {
              return this._getOption('data');
          },
          set: function (value) {
              this._setOption('data', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "description", {
          get: function () {
              return this._getOption('description');
          },
          set: function (value) {
              this._setOption('description', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "font", {
          get: function () {
              return this._getOption('font');
          },
          set: function (value) {
              this._setOption('font', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "image", {
          get: function () {
              return this._getOption('image');
          },
          set: function (value) {
              this._setOption('image', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "offsetX", {
          get: function () {
              return this._getOption('offsetX');
          },
          set: function (value) {
              this._setOption('offsetX', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "offsetY", {
          get: function () {
              return this._getOption('offsetY');
          },
          set: function (value) {
              this._setOption('offsetY', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "paddingLeftRight", {
          get: function () {
              return this._getOption('paddingLeftRight');
          },
          set: function (value) {
              this._setOption('paddingLeftRight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "paddingTopBottom", {
          get: function () {
              return this._getOption('paddingTopBottom');
          },
          set: function (value) {
              this._setOption('paddingTopBottom', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "series", {
          get: function () {
              return this._getOption('series');
          },
          set: function (value) {
              this._setOption('series', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "shadow", {
          get: function () {
              return this._getOption('shadow');
          },
          set: function (value) {
              this._setOption('shadow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "template", {
          get: function () {
              return this._getOption('template');
          },
          set: function (value) {
              this._setOption('template', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "textOverflow", {
          get: function () {
              return this._getOption('textOverflow');
          },
          set: function (value) {
              this._setOption('textOverflow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "tooltipEnabled", {
          get: function () {
              return this._getOption('tooltipEnabled');
          },
          set: function (value) {
              this._setOption('tooltipEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "tooltipTemplate", {
          get: function () {
              return this._getOption('tooltipTemplate');
          },
          set: function (value) {
              this._setOption('tooltipTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "value", {
          get: function () {
              return this._getOption('value');
          },
          set: function (value) {
              this._setOption('value', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "wordWrap", {
          get: function () {
              return this._getOption('wordWrap');
          },
          set: function (value) {
              this._setOption('wordWrap', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "x", {
          get: function () {
              return this._getOption('x');
          },
          set: function (value) {
              this._setOption('x', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "y", {
          get: function () {
              return this._getOption('y');
          },
          set: function (value) {
              this._setOption('y', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "location", {
          get: function () {
              return this._getOption('location');
          },
          set: function (value) {
              this._setOption('location', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "angle", {
          get: function () {
              return this._getOption('angle');
          },
          set: function (value) {
              this._setOption('angle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "radius", {
          get: function () {
              return this._getOption('radius');
          },
          set: function (value) {
              this._setOption('radius', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "coordinates", {
          get: function () {
              return this._getOption('coordinates');
          },
          set: function (value) {
              this._setOption('coordinates', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoChartCommonAnnotationConfig;
  }(i1.NestedOption));
  /** @nocollapse */ DxoChartCommonAnnotationConfig.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoChartCommonAnnotationConfig_BaseFactory; return function DxoChartCommonAnnotationConfig_Factory(t) { return (ɵDxoChartCommonAnnotationConfig_BaseFactory || (ɵDxoChartCommonAnnotationConfig_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoChartCommonAnnotationConfig)))(t || DxoChartCommonAnnotationConfig); }; }();
  /** @nocollapse */ DxoChartCommonAnnotationConfig.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoChartCommonAnnotationConfig, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoChartCommonAnnotationConfig_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoChartCommonAnnotationConfig, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoCommonAnnotationSettingsComponent = /** @class */ (function (_super) {
      __extends(DxoCommonAnnotationSettingsComponent, _super);
      function DxoCommonAnnotationSettingsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoCommonAnnotationSettingsComponent.prototype, "_optionPath", {
          get: function () {
              return 'commonAnnotationSettings';
          },
          enumerable: false,
          configurable: true
      });
      DxoCommonAnnotationSettingsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoCommonAnnotationSettingsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoCommonAnnotationSettingsComponent;
  }(DxoChartCommonAnnotationConfig));
  /** @nocollapse */ DxoCommonAnnotationSettingsComponent.ɵfac = function DxoCommonAnnotationSettingsComponent_Factory(t) { return new (t || DxoCommonAnnotationSettingsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoCommonAnnotationSettingsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoCommonAnnotationSettingsComponent, selectors: [["dxo-common-annotation-settings"]], inputs: { allowDragging: "allowDragging", argument: "argument", arrowLength: "arrowLength", arrowWidth: "arrowWidth", axis: "axis", border: "border", color: "color", customizeTooltip: "customizeTooltip", data: "data", description: "description", font: "font", height: "height", image: "image", offsetX: "offsetX", offsetY: "offsetY", opacity: "opacity", paddingLeftRight: "paddingLeftRight", paddingTopBottom: "paddingTopBottom", series: "series", shadow: "shadow", template: "template", text: "text", textOverflow: "textOverflow", tooltipEnabled: "tooltipEnabled", tooltipTemplate: "tooltipTemplate", type: "type", value: "value", width: "width", wordWrap: "wordWrap", x: "x", y: "y", location: "location", angle: "angle", radius: "radius", coordinates: "coordinates" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoCommonAnnotationSettingsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCommonAnnotationSettingsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-common-annotation-settings',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'allowDragging',
                          'argument',
                          'arrowLength',
                          'arrowWidth',
                          'axis',
                          'border',
                          'color',
                          'customizeTooltip',
                          'data',
                          'description',
                          'font',
                          'height',
                          'image',
                          'offsetX',
                          'offsetY',
                          'opacity',
                          'paddingLeftRight',
                          'paddingTopBottom',
                          'series',
                          'shadow',
                          'template',
                          'text',
                          'textOverflow',
                          'tooltipEnabled',
                          'tooltipTemplate',
                          'type',
                          'value',
                          'width',
                          'wordWrap',
                          'x',
                          'y',
                          'location',
                          'angle',
                          'radius',
                          'coordinates'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoCommonAnnotationSettingsModule = /** @class */ (function () {
      function DxoCommonAnnotationSettingsModule() {
      }
      return DxoCommonAnnotationSettingsModule;
  }());
  /** @nocollapse */ DxoCommonAnnotationSettingsModule.ɵfac = function DxoCommonAnnotationSettingsModule_Factory(t) { return new (t || DxoCommonAnnotationSettingsModule)(); };
  /** @nocollapse */ DxoCommonAnnotationSettingsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoCommonAnnotationSettingsModule });
  /** @nocollapse */ DxoCommonAnnotationSettingsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCommonAnnotationSettingsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoCommonAnnotationSettingsComponent
                      ],
                      exports: [
                          DxoCommonAnnotationSettingsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoCommonAnnotationSettingsModule, { declarations: [DxoCommonAnnotationSettingsComponent], exports: [DxoCommonAnnotationSettingsComponent] }); })();

  var DxoCommonAxisSettingsComponent = /** @class */ (function (_super) {
      __extends(DxoCommonAxisSettingsComponent, _super);
      function DxoCommonAxisSettingsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "aggregatedPointsPosition", {
          get: function () {
              return this._getOption('aggregatedPointsPosition');
          },
          set: function (value) {
              this._setOption('aggregatedPointsPosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "allowDecimals", {
          get: function () {
              return this._getOption('allowDecimals');
          },
          set: function (value) {
              this._setOption('allowDecimals', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "breakStyle", {
          get: function () {
              return this._getOption('breakStyle');
          },
          set: function (value) {
              this._setOption('breakStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "constantLineStyle", {
          get: function () {
              return this._getOption('constantLineStyle');
          },
          set: function (value) {
              this._setOption('constantLineStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "discreteAxisDivisionMode", {
          get: function () {
              return this._getOption('discreteAxisDivisionMode');
          },
          set: function (value) {
              this._setOption('discreteAxisDivisionMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "endOnTick", {
          get: function () {
              return this._getOption('endOnTick');
          },
          set: function (value) {
              this._setOption('endOnTick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "grid", {
          get: function () {
              return this._getOption('grid');
          },
          set: function (value) {
              this._setOption('grid', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "inverted", {
          get: function () {
              return this._getOption('inverted');
          },
          set: function (value) {
              this._setOption('inverted', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "maxValueMargin", {
          get: function () {
              return this._getOption('maxValueMargin');
          },
          set: function (value) {
              this._setOption('maxValueMargin', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "minorGrid", {
          get: function () {
              return this._getOption('minorGrid');
          },
          set: function (value) {
              this._setOption('minorGrid', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "minorTick", {
          get: function () {
              return this._getOption('minorTick');
          },
          set: function (value) {
              this._setOption('minorTick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "minValueMargin", {
          get: function () {
              return this._getOption('minValueMargin');
          },
          set: function (value) {
              this._setOption('minValueMargin', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "placeholderSize", {
          get: function () {
              return this._getOption('placeholderSize');
          },
          set: function (value) {
              this._setOption('placeholderSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "stripStyle", {
          get: function () {
              return this._getOption('stripStyle');
          },
          set: function (value) {
              this._setOption('stripStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "tick", {
          get: function () {
              return this._getOption('tick');
          },
          set: function (value) {
              this._setOption('tick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "title", {
          get: function () {
              return this._getOption('title');
          },
          set: function (value) {
              this._setOption('title', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "valueMarginsEnabled", {
          get: function () {
              return this._getOption('valueMarginsEnabled');
          },
          set: function (value) {
              this._setOption('valueMarginsEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "_optionPath", {
          get: function () {
              return 'commonAxisSettings';
          },
          enumerable: false,
          configurable: true
      });
      DxoCommonAxisSettingsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoCommonAxisSettingsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoCommonAxisSettingsComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoCommonAxisSettingsComponent.ɵfac = function DxoCommonAxisSettingsComponent_Factory(t) { return new (t || DxoCommonAxisSettingsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoCommonAxisSettingsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoCommonAxisSettingsComponent, selectors: [["dxo-common-axis-settings"]], inputs: { aggregatedPointsPosition: "aggregatedPointsPosition", allowDecimals: "allowDecimals", breakStyle: "breakStyle", color: "color", constantLineStyle: "constantLineStyle", discreteAxisDivisionMode: "discreteAxisDivisionMode", endOnTick: "endOnTick", grid: "grid", inverted: "inverted", label: "label", maxValueMargin: "maxValueMargin", minorGrid: "minorGrid", minorTick: "minorTick", minValueMargin: "minValueMargin", opacity: "opacity", placeholderSize: "placeholderSize", stripStyle: "stripStyle", tick: "tick", title: "title", valueMarginsEnabled: "valueMarginsEnabled", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoCommonAxisSettingsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCommonAxisSettingsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-common-axis-settings',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { aggregatedPointsPosition: [{
                  type: i0.Input
              }], allowDecimals: [{
                  type: i0.Input
              }], breakStyle: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], constantLineStyle: [{
                  type: i0.Input
              }], discreteAxisDivisionMode: [{
                  type: i0.Input
              }], endOnTick: [{
                  type: i0.Input
              }], grid: [{
                  type: i0.Input
              }], inverted: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], maxValueMargin: [{
                  type: i0.Input
              }], minorGrid: [{
                  type: i0.Input
              }], minorTick: [{
                  type: i0.Input
              }], minValueMargin: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], placeholderSize: [{
                  type: i0.Input
              }], stripStyle: [{
                  type: i0.Input
              }], tick: [{
                  type: i0.Input
              }], title: [{
                  type: i0.Input
              }], valueMarginsEnabled: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoCommonAxisSettingsModule = /** @class */ (function () {
      function DxoCommonAxisSettingsModule() {
      }
      return DxoCommonAxisSettingsModule;
  }());
  /** @nocollapse */ DxoCommonAxisSettingsModule.ɵfac = function DxoCommonAxisSettingsModule_Factory(t) { return new (t || DxoCommonAxisSettingsModule)(); };
  /** @nocollapse */ DxoCommonAxisSettingsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoCommonAxisSettingsModule });
  /** @nocollapse */ DxoCommonAxisSettingsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCommonAxisSettingsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoCommonAxisSettingsComponent
                      ],
                      exports: [
                          DxoCommonAxisSettingsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoCommonAxisSettingsModule, { declarations: [DxoCommonAxisSettingsComponent], exports: [DxoCommonAxisSettingsComponent] }); })();

  var DxoCommonPaneSettingsComponent = /** @class */ (function (_super) {
      __extends(DxoCommonPaneSettingsComponent, _super);
      function DxoCommonPaneSettingsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoCommonPaneSettingsComponent.prototype, "backgroundColor", {
          get: function () {
              return this._getOption('backgroundColor');
          },
          set: function (value) {
              this._setOption('backgroundColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonPaneSettingsComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCommonPaneSettingsComponent.prototype, "_optionPath", {
          get: function () {
              return 'commonPaneSettings';
          },
          enumerable: false,
          configurable: true
      });
      DxoCommonPaneSettingsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoCommonPaneSettingsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoCommonPaneSettingsComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoCommonPaneSettingsComponent.ɵfac = function DxoCommonPaneSettingsComponent_Factory(t) { return new (t || DxoCommonPaneSettingsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoCommonPaneSettingsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoCommonPaneSettingsComponent, selectors: [["dxo-common-pane-settings"]], inputs: { backgroundColor: "backgroundColor", border: "border" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoCommonPaneSettingsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCommonPaneSettingsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-common-pane-settings',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { backgroundColor: [{
                  type: i0.Input
              }], border: [{
                  type: i0.Input
              }] });
  })();
  var DxoCommonPaneSettingsModule = /** @class */ (function () {
      function DxoCommonPaneSettingsModule() {
      }
      return DxoCommonPaneSettingsModule;
  }());
  /** @nocollapse */ DxoCommonPaneSettingsModule.ɵfac = function DxoCommonPaneSettingsModule_Factory(t) { return new (t || DxoCommonPaneSettingsModule)(); };
  /** @nocollapse */ DxoCommonPaneSettingsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoCommonPaneSettingsModule });
  /** @nocollapse */ DxoCommonPaneSettingsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCommonPaneSettingsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoCommonPaneSettingsComponent
                      ],
                      exports: [
                          DxoCommonPaneSettingsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoCommonPaneSettingsModule, { declarations: [DxoCommonPaneSettingsComponent], exports: [DxoCommonPaneSettingsComponent] }); })();

  var DxoCommonSeriesSettingsComponent = /** @class */ (function (_super) {
      __extends(DxoCommonSeriesSettingsComponent, _super);
      function DxoCommonSeriesSettingsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoCommonSeriesSettingsComponent.prototype, "_optionPath", {
          get: function () {
              return 'commonSeriesSettings';
          },
          enumerable: false,
          configurable: true
      });
      DxoCommonSeriesSettingsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoCommonSeriesSettingsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoCommonSeriesSettingsComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoCommonSeriesSettingsComponent.ɵfac = function DxoCommonSeriesSettingsComponent_Factory(t) { return new (t || DxoCommonSeriesSettingsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoCommonSeriesSettingsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoCommonSeriesSettingsComponent, selectors: [["dxo-common-series-settings"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width", argumentType: "argumentType", minSegmentSize: "minSegmentSize", smallValuesGrouping: "smallValuesGrouping", closed: "closed" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoCommonSeriesSettingsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCommonSeriesSettingsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-common-series-settings',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width',
                          'argumentType',
                          'minSegmentSize',
                          'smallValuesGrouping',
                          'closed'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoCommonSeriesSettingsModule = /** @class */ (function () {
      function DxoCommonSeriesSettingsModule() {
      }
      return DxoCommonSeriesSettingsModule;
  }());
  /** @nocollapse */ DxoCommonSeriesSettingsModule.ɵfac = function DxoCommonSeriesSettingsModule_Factory(t) { return new (t || DxoCommonSeriesSettingsModule)(); };
  /** @nocollapse */ DxoCommonSeriesSettingsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoCommonSeriesSettingsModule });
  /** @nocollapse */ DxoCommonSeriesSettingsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCommonSeriesSettingsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoCommonSeriesSettingsComponent
                      ],
                      exports: [
                          DxoCommonSeriesSettingsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoCommonSeriesSettingsModule, { declarations: [DxoCommonSeriesSettingsComponent], exports: [DxoCommonSeriesSettingsComponent] }); })();

  var DxiConnectionPointComponent = /** @class */ (function (_super) {
      __extends(DxiConnectionPointComponent, _super);
      function DxiConnectionPointComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiConnectionPointComponent.prototype, "x", {
          get: function () {
              return this._getOption('x');
          },
          set: function (value) {
              this._setOption('x', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiConnectionPointComponent.prototype, "y", {
          get: function () {
              return this._getOption('y');
          },
          set: function (value) {
              this._setOption('y', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiConnectionPointComponent.prototype, "_optionPath", {
          get: function () {
              return 'connectionPoints';
          },
          enumerable: false,
          configurable: true
      });
      DxiConnectionPointComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiConnectionPointComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiConnectionPointComponent.ɵfac = function DxiConnectionPointComponent_Factory(t) { return new (t || DxiConnectionPointComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiConnectionPointComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiConnectionPointComponent, selectors: [["dxi-connection-point"]], inputs: { x: "x", y: "y" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiConnectionPointComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiConnectionPointComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-connection-point',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { x: [{
                  type: i0.Input
              }], y: [{
                  type: i0.Input
              }] });
  })();
  var DxiConnectionPointModule = /** @class */ (function () {
      function DxiConnectionPointModule() {
      }
      return DxiConnectionPointModule;
  }());
  /** @nocollapse */ DxiConnectionPointModule.ɵfac = function DxiConnectionPointModule_Factory(t) { return new (t || DxiConnectionPointModule)(); };
  /** @nocollapse */ DxiConnectionPointModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiConnectionPointModule });
  /** @nocollapse */ DxiConnectionPointModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiConnectionPointModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiConnectionPointComponent
                      ],
                      exports: [
                          DxiConnectionPointComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiConnectionPointModule, { declarations: [DxiConnectionPointComponent], exports: [DxiConnectionPointComponent] }); })();

  var DxoConnectorComponent = /** @class */ (function (_super) {
      __extends(DxoConnectorComponent, _super);
      function DxoConnectorComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoConnectorComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoConnectorComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoConnectorComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoConnectorComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoConnectorComponent.prototype, "_optionPath", {
          get: function () {
              return 'connector';
          },
          enumerable: false,
          configurable: true
      });
      DxoConnectorComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoConnectorComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoConnectorComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoConnectorComponent.ɵfac = function DxoConnectorComponent_Factory(t) { return new (t || DxoConnectorComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoConnectorComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoConnectorComponent, selectors: [["dxo-connector"]], inputs: { color: "color", visible: "visible", width: "width", opacity: "opacity" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoConnectorComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoConnectorComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-connector',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }] });
  })();
  var DxoConnectorModule = /** @class */ (function () {
      function DxoConnectorModule() {
      }
      return DxoConnectorModule;
  }());
  /** @nocollapse */ DxoConnectorModule.ɵfac = function DxoConnectorModule_Factory(t) { return new (t || DxoConnectorModule)(); };
  /** @nocollapse */ DxoConnectorModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoConnectorModule });
  /** @nocollapse */ DxoConnectorModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoConnectorModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoConnectorComponent
                      ],
                      exports: [
                          DxoConnectorComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoConnectorModule, { declarations: [DxoConnectorComponent], exports: [DxoConnectorComponent] }); })();

  var DxoConstantLineStyleComponent = /** @class */ (function (_super) {
      __extends(DxoConstantLineStyleComponent, _super);
      function DxoConstantLineStyleComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoConstantLineStyleComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoConstantLineStyleComponent.prototype, "dashStyle", {
          get: function () {
              return this._getOption('dashStyle');
          },
          set: function (value) {
              this._setOption('dashStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoConstantLineStyleComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoConstantLineStyleComponent.prototype, "paddingLeftRight", {
          get: function () {
              return this._getOption('paddingLeftRight');
          },
          set: function (value) {
              this._setOption('paddingLeftRight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoConstantLineStyleComponent.prototype, "paddingTopBottom", {
          get: function () {
              return this._getOption('paddingTopBottom');
          },
          set: function (value) {
              this._setOption('paddingTopBottom', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoConstantLineStyleComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoConstantLineStyleComponent.prototype, "_optionPath", {
          get: function () {
              return 'constantLineStyle';
          },
          enumerable: false,
          configurable: true
      });
      DxoConstantLineStyleComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoConstantLineStyleComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoConstantLineStyleComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoConstantLineStyleComponent.ɵfac = function DxoConstantLineStyleComponent_Factory(t) { return new (t || DxoConstantLineStyleComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoConstantLineStyleComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoConstantLineStyleComponent, selectors: [["dxo-constant-line-style"]], inputs: { color: "color", dashStyle: "dashStyle", label: "label", paddingLeftRight: "paddingLeftRight", paddingTopBottom: "paddingTopBottom", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoConstantLineStyleComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoConstantLineStyleComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-constant-line-style',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], dashStyle: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], paddingLeftRight: [{
                  type: i0.Input
              }], paddingTopBottom: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoConstantLineStyleModule = /** @class */ (function () {
      function DxoConstantLineStyleModule() {
      }
      return DxoConstantLineStyleModule;
  }());
  /** @nocollapse */ DxoConstantLineStyleModule.ɵfac = function DxoConstantLineStyleModule_Factory(t) { return new (t || DxoConstantLineStyleModule)(); };
  /** @nocollapse */ DxoConstantLineStyleModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoConstantLineStyleModule });
  /** @nocollapse */ DxoConstantLineStyleModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoConstantLineStyleModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoConstantLineStyleComponent
                      ],
                      exports: [
                          DxoConstantLineStyleComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoConstantLineStyleModule, { declarations: [DxoConstantLineStyleComponent], exports: [DxoConstantLineStyleComponent] }); })();

  var DxoFileManagerContextMenu = /** @class */ (function (_super) {
      __extends(DxoFileManagerContextMenu, _super);
      function DxoFileManagerContextMenu() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoFileManagerContextMenu.prototype, "commands", {
          get: function () {
              return this._getOption('commands');
          },
          set: function (value) {
              this._setOption('commands', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileManagerContextMenu.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileManagerContextMenu.prototype, "items", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this._setOption('items', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoFileManagerContextMenu;
  }(i1.NestedOption));
  /** @nocollapse */ DxoFileManagerContextMenu.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoFileManagerContextMenu_BaseFactory; return function DxoFileManagerContextMenu_Factory(t) { return (ɵDxoFileManagerContextMenu_BaseFactory || (ɵDxoFileManagerContextMenu_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoFileManagerContextMenu)))(t || DxoFileManagerContextMenu); }; }();
  /** @nocollapse */ DxoFileManagerContextMenu.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFileManagerContextMenu, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFileManagerContextMenu_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFileManagerContextMenu, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoContextMenuComponent = /** @class */ (function (_super) {
      __extends(DxoContextMenuComponent, _super);
      function DxoContextMenuComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoContextMenuComponent.prototype, "_optionPath", {
          get: function () {
              return 'contextMenu';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoContextMenuComponent.prototype, "commandsChildren", {
          get: function () {
              return this._getOption('commands');
          },
          set: function (value) {
              this.setChildren('commands', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoContextMenuComponent.prototype, "itemsChildren", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this.setChildren('items', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoContextMenuComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoContextMenuComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoContextMenuComponent;
  }(DxoFileManagerContextMenu));
  /** @nocollapse */ DxoContextMenuComponent.ɵfac = function DxoContextMenuComponent_Factory(t) { return new (t || DxoContextMenuComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoContextMenuComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoContextMenuComponent, selectors: [["dxo-context-menu"]], contentQueries: function DxoContextMenuComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiCommandComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiItemComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.commandsChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
          }
      }, inputs: { commands: "commands", enabled: "enabled", items: "items" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoContextMenuComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoContextMenuComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-context-menu',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'commands',
                          'enabled',
                          'items'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { commandsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiCommandComponent; })]
              }], itemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiItemComponent; })]
              }] });
  })();
  var DxoContextMenuModule = /** @class */ (function () {
      function DxoContextMenuModule() {
      }
      return DxoContextMenuModule;
  }());
  /** @nocollapse */ DxoContextMenuModule.ɵfac = function DxoContextMenuModule_Factory(t) { return new (t || DxoContextMenuModule)(); };
  /** @nocollapse */ DxoContextMenuModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoContextMenuModule });
  /** @nocollapse */ DxoContextMenuModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoContextMenuModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoContextMenuComponent
                      ],
                      exports: [
                          DxoContextMenuComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoContextMenuModule, { declarations: [DxoContextMenuComponent], exports: [DxoContextMenuComponent] }); })();

  var DxoContextToolboxComponent = /** @class */ (function (_super) {
      __extends(DxoContextToolboxComponent, _super);
      function DxoContextToolboxComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoContextToolboxComponent.prototype, "category", {
          get: function () {
              return this._getOption('category');
          },
          set: function (value) {
              this._setOption('category', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoContextToolboxComponent.prototype, "displayMode", {
          get: function () {
              return this._getOption('displayMode');
          },
          set: function (value) {
              this._setOption('displayMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoContextToolboxComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoContextToolboxComponent.prototype, "shapeIconsPerRow", {
          get: function () {
              return this._getOption('shapeIconsPerRow');
          },
          set: function (value) {
              this._setOption('shapeIconsPerRow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoContextToolboxComponent.prototype, "shapes", {
          get: function () {
              return this._getOption('shapes');
          },
          set: function (value) {
              this._setOption('shapes', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoContextToolboxComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoContextToolboxComponent.prototype, "_optionPath", {
          get: function () {
              return 'contextToolbox';
          },
          enumerable: false,
          configurable: true
      });
      DxoContextToolboxComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoContextToolboxComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoContextToolboxComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoContextToolboxComponent.ɵfac = function DxoContextToolboxComponent_Factory(t) { return new (t || DxoContextToolboxComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoContextToolboxComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoContextToolboxComponent, selectors: [["dxo-context-toolbox"]], inputs: { category: "category", displayMode: "displayMode", enabled: "enabled", shapeIconsPerRow: "shapeIconsPerRow", shapes: "shapes", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoContextToolboxComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoContextToolboxComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-context-toolbox',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { category: [{
                  type: i0.Input
              }], displayMode: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }], shapeIconsPerRow: [{
                  type: i0.Input
              }], shapes: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoContextToolboxModule = /** @class */ (function () {
      function DxoContextToolboxModule() {
      }
      return DxoContextToolboxModule;
  }());
  /** @nocollapse */ DxoContextToolboxModule.ɵfac = function DxoContextToolboxModule_Factory(t) { return new (t || DxoContextToolboxModule)(); };
  /** @nocollapse */ DxoContextToolboxModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoContextToolboxModule });
  /** @nocollapse */ DxoContextToolboxModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoContextToolboxModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoContextToolboxComponent
                      ],
                      exports: [
                          DxoContextToolboxComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoContextToolboxModule, { declarations: [DxoContextToolboxComponent], exports: [DxoContextToolboxComponent] }); })();

  var DxoControlBarComponent = /** @class */ (function (_super) {
      __extends(DxoControlBarComponent, _super);
      function DxoControlBarComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoControlBarComponent.prototype, "borderColor", {
          get: function () {
              return this._getOption('borderColor');
          },
          set: function (value) {
              this._setOption('borderColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoControlBarComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoControlBarComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoControlBarComponent.prototype, "horizontalAlignment", {
          get: function () {
              return this._getOption('horizontalAlignment');
          },
          set: function (value) {
              this._setOption('horizontalAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoControlBarComponent.prototype, "margin", {
          get: function () {
              return this._getOption('margin');
          },
          set: function (value) {
              this._setOption('margin', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoControlBarComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoControlBarComponent.prototype, "panVisible", {
          get: function () {
              return this._getOption('panVisible');
          },
          set: function (value) {
              this._setOption('panVisible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoControlBarComponent.prototype, "verticalAlignment", {
          get: function () {
              return this._getOption('verticalAlignment');
          },
          set: function (value) {
              this._setOption('verticalAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoControlBarComponent.prototype, "zoomVisible", {
          get: function () {
              return this._getOption('zoomVisible');
          },
          set: function (value) {
              this._setOption('zoomVisible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoControlBarComponent.prototype, "_optionPath", {
          get: function () {
              return 'controlBar';
          },
          enumerable: false,
          configurable: true
      });
      DxoControlBarComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoControlBarComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoControlBarComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoControlBarComponent.ɵfac = function DxoControlBarComponent_Factory(t) { return new (t || DxoControlBarComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoControlBarComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoControlBarComponent, selectors: [["dxo-control-bar"]], inputs: { borderColor: "borderColor", color: "color", enabled: "enabled", horizontalAlignment: "horizontalAlignment", margin: "margin", opacity: "opacity", panVisible: "panVisible", verticalAlignment: "verticalAlignment", zoomVisible: "zoomVisible" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoControlBarComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoControlBarComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-control-bar',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { borderColor: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }], horizontalAlignment: [{
                  type: i0.Input
              }], margin: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], panVisible: [{
                  type: i0.Input
              }], verticalAlignment: [{
                  type: i0.Input
              }], zoomVisible: [{
                  type: i0.Input
              }] });
  })();
  var DxoControlBarModule = /** @class */ (function () {
      function DxoControlBarModule() {
      }
      return DxoControlBarModule;
  }());
  /** @nocollapse */ DxoControlBarModule.ɵfac = function DxoControlBarModule_Factory(t) { return new (t || DxoControlBarModule)(); };
  /** @nocollapse */ DxoControlBarModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoControlBarModule });
  /** @nocollapse */ DxoControlBarModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoControlBarModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoControlBarComponent
                      ],
                      exports: [
                          DxoControlBarComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoControlBarModule, { declarations: [DxoControlBarComponent], exports: [DxoControlBarComponent] }); })();

  var DxoCrosshairComponent = /** @class */ (function (_super) {
      __extends(DxoCrosshairComponent, _super);
      function DxoCrosshairComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoCrosshairComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCrosshairComponent.prototype, "dashStyle", {
          get: function () {
              return this._getOption('dashStyle');
          },
          set: function (value) {
              this._setOption('dashStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCrosshairComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCrosshairComponent.prototype, "horizontalLine", {
          get: function () {
              return this._getOption('horizontalLine');
          },
          set: function (value) {
              this._setOption('horizontalLine', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCrosshairComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCrosshairComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCrosshairComponent.prototype, "verticalLine", {
          get: function () {
              return this._getOption('verticalLine');
          },
          set: function (value) {
              this._setOption('verticalLine', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCrosshairComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCrosshairComponent.prototype, "_optionPath", {
          get: function () {
              return 'crosshair';
          },
          enumerable: false,
          configurable: true
      });
      DxoCrosshairComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoCrosshairComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoCrosshairComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoCrosshairComponent.ɵfac = function DxoCrosshairComponent_Factory(t) { return new (t || DxoCrosshairComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoCrosshairComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoCrosshairComponent, selectors: [["dxo-crosshair"]], inputs: { color: "color", dashStyle: "dashStyle", enabled: "enabled", horizontalLine: "horizontalLine", label: "label", opacity: "opacity", verticalLine: "verticalLine", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoCrosshairComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCrosshairComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-crosshair',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], dashStyle: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }], horizontalLine: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], verticalLine: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoCrosshairModule = /** @class */ (function () {
      function DxoCrosshairModule() {
      }
      return DxoCrosshairModule;
  }());
  /** @nocollapse */ DxoCrosshairModule.ɵfac = function DxoCrosshairModule_Factory(t) { return new (t || DxoCrosshairModule)(); };
  /** @nocollapse */ DxoCrosshairModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoCrosshairModule });
  /** @nocollapse */ DxoCrosshairModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCrosshairModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoCrosshairComponent
                      ],
                      exports: [
                          DxoCrosshairComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoCrosshairModule, { declarations: [DxoCrosshairComponent], exports: [DxoCrosshairComponent] }); })();

  var DxoCursorOffsetComponent = /** @class */ (function (_super) {
      __extends(DxoCursorOffsetComponent, _super);
      function DxoCursorOffsetComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoCursorOffsetComponent.prototype, "x", {
          get: function () {
              return this._getOption('x');
          },
          set: function (value) {
              this._setOption('x', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCursorOffsetComponent.prototype, "y", {
          get: function () {
              return this._getOption('y');
          },
          set: function (value) {
              this._setOption('y', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoCursorOffsetComponent.prototype, "_optionPath", {
          get: function () {
              return 'cursorOffset';
          },
          enumerable: false,
          configurable: true
      });
      DxoCursorOffsetComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoCursorOffsetComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoCursorOffsetComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoCursorOffsetComponent.ɵfac = function DxoCursorOffsetComponent_Factory(t) { return new (t || DxoCursorOffsetComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoCursorOffsetComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoCursorOffsetComponent, selectors: [["dxo-cursor-offset"]], inputs: { x: "x", y: "y" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoCursorOffsetComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCursorOffsetComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-cursor-offset',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { x: [{
                  type: i0.Input
              }], y: [{
                  type: i0.Input
              }] });
  })();
  var DxoCursorOffsetModule = /** @class */ (function () {
      function DxoCursorOffsetModule() {
      }
      return DxoCursorOffsetModule;
  }());
  /** @nocollapse */ DxoCursorOffsetModule.ɵfac = function DxoCursorOffsetModule_Factory(t) { return new (t || DxoCursorOffsetModule)(); };
  /** @nocollapse */ DxoCursorOffsetModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoCursorOffsetModule });
  /** @nocollapse */ DxoCursorOffsetModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoCursorOffsetModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoCursorOffsetComponent
                      ],
                      exports: [
                          DxoCursorOffsetComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoCursorOffsetModule, { declarations: [DxoCursorOffsetComponent], exports: [DxoCursorOffsetComponent] }); })();

  var DxiFilterBuilderCustomOperation = /** @class */ (function (_super) {
      __extends(DxiFilterBuilderCustomOperation, _super);
      function DxiFilterBuilderCustomOperation() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "calculateFilterExpression", {
          get: function () {
              return this._getOption('calculateFilterExpression');
          },
          set: function (value) {
              this._setOption('calculateFilterExpression', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "caption", {
          get: function () {
              return this._getOption('caption');
          },
          set: function (value) {
              this._setOption('caption', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "customizeText", {
          get: function () {
              return this._getOption('customizeText');
          },
          set: function (value) {
              this._setOption('customizeText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "dataTypes", {
          get: function () {
              return this._getOption('dataTypes');
          },
          set: function (value) {
              this._setOption('dataTypes', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "editorTemplate", {
          get: function () {
              return this._getOption('editorTemplate');
          },
          set: function (value) {
              this._setOption('editorTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "hasValue", {
          get: function () {
              return this._getOption('hasValue');
          },
          set: function (value) {
              this._setOption('hasValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "icon", {
          get: function () {
              return this._getOption('icon');
          },
          set: function (value) {
              this._setOption('icon', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiFilterBuilderCustomOperation;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiFilterBuilderCustomOperation.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiFilterBuilderCustomOperation_BaseFactory; return function DxiFilterBuilderCustomOperation_Factory(t) { return (ɵDxiFilterBuilderCustomOperation_BaseFactory || (ɵDxiFilterBuilderCustomOperation_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiFilterBuilderCustomOperation)))(t || DxiFilterBuilderCustomOperation); }; }();
  /** @nocollapse */ DxiFilterBuilderCustomOperation.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiFilterBuilderCustomOperation, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiFilterBuilderCustomOperation_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiFilterBuilderCustomOperation, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiCustomOperationComponent = /** @class */ (function (_super) {
      __extends(DxiCustomOperationComponent, _super);
      function DxiCustomOperationComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiCustomOperationComponent.prototype, "_optionPath", {
          get: function () {
              return 'customOperations';
          },
          enumerable: false,
          configurable: true
      });
      DxiCustomOperationComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiCustomOperationComponent;
  }(DxiFilterBuilderCustomOperation));
  /** @nocollapse */ DxiCustomOperationComponent.ɵfac = function DxiCustomOperationComponent_Factory(t) { return new (t || DxiCustomOperationComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiCustomOperationComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiCustomOperationComponent, selectors: [["dxi-custom-operation"]], inputs: { calculateFilterExpression: "calculateFilterExpression", caption: "caption", customizeText: "customizeText", dataTypes: "dataTypes", editorTemplate: "editorTemplate", hasValue: "hasValue", icon: "icon", name: "name" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiCustomOperationComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiCustomOperationComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-custom-operation',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'calculateFilterExpression',
                          'caption',
                          'customizeText',
                          'dataTypes',
                          'editorTemplate',
                          'hasValue',
                          'icon',
                          'name'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxiCustomOperationModule = /** @class */ (function () {
      function DxiCustomOperationModule() {
      }
      return DxiCustomOperationModule;
  }());
  /** @nocollapse */ DxiCustomOperationModule.ɵfac = function DxiCustomOperationModule_Factory(t) { return new (t || DxiCustomOperationModule)(); };
  /** @nocollapse */ DxiCustomOperationModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiCustomOperationModule });
  /** @nocollapse */ DxiCustomOperationModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiCustomOperationModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiCustomOperationComponent
                      ],
                      exports: [
                          DxiCustomOperationComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiCustomOperationModule, { declarations: [DxiCustomOperationComponent], exports: [DxiCustomOperationComponent] }); })();

  var _c0$2 = ["*"];
  var DxiCustomShapeComponent = /** @class */ (function (_super) {
      __extends(DxiCustomShapeComponent, _super);
      function DxiCustomShapeComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
          var _this = _super.call(this) || this;
          _this.renderer = renderer;
          _this.document = document;
          _this.element = element;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          templateHost.setHost(_this);
          return _this;
      }
      Object.defineProperty(DxiCustomShapeComponent.prototype, "allowEditImage", {
          get: function () {
              return this._getOption('allowEditImage');
          },
          set: function (value) {
              this._setOption('allowEditImage', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "allowEditText", {
          get: function () {
              return this._getOption('allowEditText');
          },
          set: function (value) {
              this._setOption('allowEditText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "allowResize", {
          get: function () {
              return this._getOption('allowResize');
          },
          set: function (value) {
              this._setOption('allowResize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "backgroundImageHeight", {
          get: function () {
              return this._getOption('backgroundImageHeight');
          },
          set: function (value) {
              this._setOption('backgroundImageHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "backgroundImageLeft", {
          get: function () {
              return this._getOption('backgroundImageLeft');
          },
          set: function (value) {
              this._setOption('backgroundImageLeft', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "backgroundImageToolboxUrl", {
          get: function () {
              return this._getOption('backgroundImageToolboxUrl');
          },
          set: function (value) {
              this._setOption('backgroundImageToolboxUrl', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "backgroundImageTop", {
          get: function () {
              return this._getOption('backgroundImageTop');
          },
          set: function (value) {
              this._setOption('backgroundImageTop', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "backgroundImageUrl", {
          get: function () {
              return this._getOption('backgroundImageUrl');
          },
          set: function (value) {
              this._setOption('backgroundImageUrl', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "backgroundImageWidth", {
          get: function () {
              return this._getOption('backgroundImageWidth');
          },
          set: function (value) {
              this._setOption('backgroundImageWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "baseType", {
          get: function () {
              return this._getOption('baseType');
          },
          set: function (value) {
              this._setOption('baseType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "category", {
          get: function () {
              return this._getOption('category');
          },
          set: function (value) {
              this._setOption('category', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "connectionPoints", {
          get: function () {
              return this._getOption('connectionPoints');
          },
          set: function (value) {
              this._setOption('connectionPoints', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "defaultHeight", {
          get: function () {
              return this._getOption('defaultHeight');
          },
          set: function (value) {
              this._setOption('defaultHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "defaultImageUrl", {
          get: function () {
              return this._getOption('defaultImageUrl');
          },
          set: function (value) {
              this._setOption('defaultImageUrl', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "defaultText", {
          get: function () {
              return this._getOption('defaultText');
          },
          set: function (value) {
              this._setOption('defaultText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "defaultWidth", {
          get: function () {
              return this._getOption('defaultWidth');
          },
          set: function (value) {
              this._setOption('defaultWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "imageHeight", {
          get: function () {
              return this._getOption('imageHeight');
          },
          set: function (value) {
              this._setOption('imageHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "imageLeft", {
          get: function () {
              return this._getOption('imageLeft');
          },
          set: function (value) {
              this._setOption('imageLeft', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "imageTop", {
          get: function () {
              return this._getOption('imageTop');
          },
          set: function (value) {
              this._setOption('imageTop', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "imageWidth", {
          get: function () {
              return this._getOption('imageWidth');
          },
          set: function (value) {
              this._setOption('imageWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "keepRatioOnAutoSize", {
          get: function () {
              return this._getOption('keepRatioOnAutoSize');
          },
          set: function (value) {
              this._setOption('keepRatioOnAutoSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "maxHeight", {
          get: function () {
              return this._getOption('maxHeight');
          },
          set: function (value) {
              this._setOption('maxHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "maxWidth", {
          get: function () {
              return this._getOption('maxWidth');
          },
          set: function (value) {
              this._setOption('maxWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "minHeight", {
          get: function () {
              return this._getOption('minHeight');
          },
          set: function (value) {
              this._setOption('minHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "minWidth", {
          get: function () {
              return this._getOption('minWidth');
          },
          set: function (value) {
              this._setOption('minWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "template", {
          get: function () {
              return this._getOption('template');
          },
          set: function (value) {
              this._setOption('template', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "templateHeight", {
          get: function () {
              return this._getOption('templateHeight');
          },
          set: function (value) {
              this._setOption('templateHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "templateLeft", {
          get: function () {
              return this._getOption('templateLeft');
          },
          set: function (value) {
              this._setOption('templateLeft', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "templateTop", {
          get: function () {
              return this._getOption('templateTop');
          },
          set: function (value) {
              this._setOption('templateTop', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "templateWidth", {
          get: function () {
              return this._getOption('templateWidth');
          },
          set: function (value) {
              this._setOption('templateWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "textHeight", {
          get: function () {
              return this._getOption('textHeight');
          },
          set: function (value) {
              this._setOption('textHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "textLeft", {
          get: function () {
              return this._getOption('textLeft');
          },
          set: function (value) {
              this._setOption('textLeft', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "textTop", {
          get: function () {
              return this._getOption('textTop');
          },
          set: function (value) {
              this._setOption('textTop', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "textWidth", {
          get: function () {
              return this._getOption('textWidth');
          },
          set: function (value) {
              this._setOption('textWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "title", {
          get: function () {
              return this._getOption('title');
          },
          set: function (value) {
              this._setOption('title', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "toolboxTemplate", {
          get: function () {
              return this._getOption('toolboxTemplate');
          },
          set: function (value) {
              this._setOption('toolboxTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "toolboxWidthToHeightRatio", {
          get: function () {
              return this._getOption('toolboxWidthToHeightRatio');
          },
          set: function (value) {
              this._setOption('toolboxWidthToHeightRatio', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "_optionPath", {
          get: function () {
              return 'customShapes';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiCustomShapeComponent.prototype, "connectionPointsChildren", {
          get: function () {
              return this._getOption('connectionPoints');
          },
          set: function (value) {
              this.setChildren('connectionPoints', value);
          },
          enumerable: false,
          configurable: true
      });
      DxiCustomShapeComponent.prototype.setTemplate = function (template) {
          this.template = template;
      };
      DxiCustomShapeComponent.prototype.ngAfterViewInit = function () {
          i1.extractTemplate(this, this.element, this.renderer, this.document);
      };
      DxiCustomShapeComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiCustomShapeComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiCustomShapeComponent.ɵfac = function DxiCustomShapeComponent_Factory(t) { return new (t || DxiCustomShapeComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(common.DOCUMENT), i0__namespace.ɵɵdirectiveInject(i1__namespace.DxTemplateHost, 1), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
  /** @nocollapse */ DxiCustomShapeComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiCustomShapeComponent, selectors: [["dxi-custom-shape"]], contentQueries: function DxiCustomShapeComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiConnectionPointComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.connectionPointsChildren = _t);
          }
      }, inputs: { allowEditImage: "allowEditImage", allowEditText: "allowEditText", allowResize: "allowResize", backgroundImageHeight: "backgroundImageHeight", backgroundImageLeft: "backgroundImageLeft", backgroundImageToolboxUrl: "backgroundImageToolboxUrl", backgroundImageTop: "backgroundImageTop", backgroundImageUrl: "backgroundImageUrl", backgroundImageWidth: "backgroundImageWidth", baseType: "baseType", category: "category", connectionPoints: "connectionPoints", defaultHeight: "defaultHeight", defaultImageUrl: "defaultImageUrl", defaultText: "defaultText", defaultWidth: "defaultWidth", imageHeight: "imageHeight", imageLeft: "imageLeft", imageTop: "imageTop", imageWidth: "imageWidth", keepRatioOnAutoSize: "keepRatioOnAutoSize", maxHeight: "maxHeight", maxWidth: "maxWidth", minHeight: "minHeight", minWidth: "minWidth", template: "template", templateHeight: "templateHeight", templateLeft: "templateLeft", templateTop: "templateTop", templateWidth: "templateWidth", textHeight: "textHeight", textLeft: "textLeft", textTop: "textTop", textWidth: "textWidth", title: "title", toolboxTemplate: "toolboxTemplate", toolboxWidthToHeightRatio: "toolboxWidthToHeightRatio", type: "type" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost, i1.DxTemplateHost]), i0__namespace.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0$2, decls: 1, vars: 0, template: function DxiCustomShapeComponent_Template(rf, ctx) {
          if (rf & 1) {
              i0__namespace.ɵɵprojectionDef();
              i0__namespace.ɵɵprojection(0);
          }
      }, styles: ["[_nghost-%COMP%] { display: block; }"] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiCustomShapeComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-custom-shape',
                      template: '<ng-content></ng-content>',
                      styles: [':host { display: block; }'],
                      providers: [i1.NestedOptionHost, i1.DxTemplateHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }, { type: i0__namespace.Renderer2 }, { type: undefined, decorators: [{
                          type: i0.Inject,
                          args: [common.DOCUMENT]
                      }] }, { type: i1__namespace.DxTemplateHost, decorators: [{
                          type: i0.Host
                      }] }, { type: i0__namespace.ElementRef }];
      }, { allowEditImage: [{
                  type: i0.Input
              }], allowEditText: [{
                  type: i0.Input
              }], allowResize: [{
                  type: i0.Input
              }], backgroundImageHeight: [{
                  type: i0.Input
              }], backgroundImageLeft: [{
                  type: i0.Input
              }], backgroundImageToolboxUrl: [{
                  type: i0.Input
              }], backgroundImageTop: [{
                  type: i0.Input
              }], backgroundImageUrl: [{
                  type: i0.Input
              }], backgroundImageWidth: [{
                  type: i0.Input
              }], baseType: [{
                  type: i0.Input
              }], category: [{
                  type: i0.Input
              }], connectionPoints: [{
                  type: i0.Input
              }], defaultHeight: [{
                  type: i0.Input
              }], defaultImageUrl: [{
                  type: i0.Input
              }], defaultText: [{
                  type: i0.Input
              }], defaultWidth: [{
                  type: i0.Input
              }], imageHeight: [{
                  type: i0.Input
              }], imageLeft: [{
                  type: i0.Input
              }], imageTop: [{
                  type: i0.Input
              }], imageWidth: [{
                  type: i0.Input
              }], keepRatioOnAutoSize: [{
                  type: i0.Input
              }], maxHeight: [{
                  type: i0.Input
              }], maxWidth: [{
                  type: i0.Input
              }], minHeight: [{
                  type: i0.Input
              }], minWidth: [{
                  type: i0.Input
              }], template: [{
                  type: i0.Input
              }], templateHeight: [{
                  type: i0.Input
              }], templateLeft: [{
                  type: i0.Input
              }], templateTop: [{
                  type: i0.Input
              }], templateWidth: [{
                  type: i0.Input
              }], textHeight: [{
                  type: i0.Input
              }], textLeft: [{
                  type: i0.Input
              }], textTop: [{
                  type: i0.Input
              }], textWidth: [{
                  type: i0.Input
              }], title: [{
                  type: i0.Input
              }], toolboxTemplate: [{
                  type: i0.Input
              }], toolboxWidthToHeightRatio: [{
                  type: i0.Input
              }], type: [{
                  type: i0.Input
              }], connectionPointsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiConnectionPointComponent; })]
              }] });
  })();
  var DxiCustomShapeModule = /** @class */ (function () {
      function DxiCustomShapeModule() {
      }
      return DxiCustomShapeModule;
  }());
  /** @nocollapse */ DxiCustomShapeModule.ɵfac = function DxiCustomShapeModule_Factory(t) { return new (t || DxiCustomShapeModule)(); };
  /** @nocollapse */ DxiCustomShapeModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiCustomShapeModule });
  /** @nocollapse */ DxiCustomShapeModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiCustomShapeModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiCustomShapeComponent
                      ],
                      exports: [
                          DxiCustomShapeComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiCustomShapeModule, { declarations: [DxiCustomShapeComponent], exports: [DxiCustomShapeComponent] }); })();

  var DxoDataPrepareSettingsComponent = /** @class */ (function (_super) {
      __extends(DxoDataPrepareSettingsComponent, _super);
      function DxoDataPrepareSettingsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoDataPrepareSettingsComponent.prototype, "checkTypeForAllData", {
          get: function () {
              return this._getOption('checkTypeForAllData');
          },
          set: function (value) {
              this._setOption('checkTypeForAllData', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDataPrepareSettingsComponent.prototype, "convertToAxisDataType", {
          get: function () {
              return this._getOption('convertToAxisDataType');
          },
          set: function (value) {
              this._setOption('convertToAxisDataType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDataPrepareSettingsComponent.prototype, "sortingMethod", {
          get: function () {
              return this._getOption('sortingMethod');
          },
          set: function (value) {
              this._setOption('sortingMethod', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDataPrepareSettingsComponent.prototype, "_optionPath", {
          get: function () {
              return 'dataPrepareSettings';
          },
          enumerable: false,
          configurable: true
      });
      DxoDataPrepareSettingsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoDataPrepareSettingsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoDataPrepareSettingsComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoDataPrepareSettingsComponent.ɵfac = function DxoDataPrepareSettingsComponent_Factory(t) { return new (t || DxoDataPrepareSettingsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoDataPrepareSettingsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoDataPrepareSettingsComponent, selectors: [["dxo-data-prepare-settings"]], inputs: { checkTypeForAllData: "checkTypeForAllData", convertToAxisDataType: "convertToAxisDataType", sortingMethod: "sortingMethod" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoDataPrepareSettingsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDataPrepareSettingsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-data-prepare-settings',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { checkTypeForAllData: [{
                  type: i0.Input
              }], convertToAxisDataType: [{
                  type: i0.Input
              }], sortingMethod: [{
                  type: i0.Input
              }] });
  })();
  var DxoDataPrepareSettingsModule = /** @class */ (function () {
      function DxoDataPrepareSettingsModule() {
      }
      return DxoDataPrepareSettingsModule;
  }());
  /** @nocollapse */ DxoDataPrepareSettingsModule.ɵfac = function DxoDataPrepareSettingsModule_Factory(t) { return new (t || DxoDataPrepareSettingsModule)(); };
  /** @nocollapse */ DxoDataPrepareSettingsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoDataPrepareSettingsModule });
  /** @nocollapse */ DxoDataPrepareSettingsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDataPrepareSettingsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoDataPrepareSettingsComponent
                      ],
                      exports: [
                          DxoDataPrepareSettingsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoDataPrepareSettingsModule, { declarations: [DxoDataPrepareSettingsComponent], exports: [DxoDataPrepareSettingsComponent] }); })();

  var DxoPivotGridDataSource = /** @class */ (function (_super) {
      __extends(DxoPivotGridDataSource, _super);
      function DxoPivotGridDataSource() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoPivotGridDataSource.prototype, "fields", {
          get: function () {
              return this._getOption('fields');
          },
          set: function (value) {
              this._setOption('fields', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPivotGridDataSource.prototype, "filter", {
          get: function () {
              return this._getOption('filter');
          },
          set: function (value) {
              this._setOption('filter', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPivotGridDataSource.prototype, "onChanged", {
          get: function () {
              return this._getOption('onChanged');
          },
          set: function (value) {
              this._setOption('onChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPivotGridDataSource.prototype, "onFieldsPrepared", {
          get: function () {
              return this._getOption('onFieldsPrepared');
          },
          set: function (value) {
              this._setOption('onFieldsPrepared', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPivotGridDataSource.prototype, "onLoadError", {
          get: function () {
              return this._getOption('onLoadError');
          },
          set: function (value) {
              this._setOption('onLoadError', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPivotGridDataSource.prototype, "onLoadingChanged", {
          get: function () {
              return this._getOption('onLoadingChanged');
          },
          set: function (value) {
              this._setOption('onLoadingChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPivotGridDataSource.prototype, "remoteOperations", {
          get: function () {
              return this._getOption('remoteOperations');
          },
          set: function (value) {
              this._setOption('remoteOperations', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPivotGridDataSource.prototype, "retrieveFields", {
          get: function () {
              return this._getOption('retrieveFields');
          },
          set: function (value) {
              this._setOption('retrieveFields', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPivotGridDataSource.prototype, "store", {
          get: function () {
              return this._getOption('store');
          },
          set: function (value) {
              this._setOption('store', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoPivotGridDataSource;
  }(i1.NestedOption));
  /** @nocollapse */ DxoPivotGridDataSource.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoPivotGridDataSource_BaseFactory; return function DxoPivotGridDataSource_Factory(t) { return (ɵDxoPivotGridDataSource_BaseFactory || (ɵDxoPivotGridDataSource_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoPivotGridDataSource)))(t || DxoPivotGridDataSource); }; }();
  /** @nocollapse */ DxoPivotGridDataSource.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoPivotGridDataSource, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoPivotGridDataSource_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPivotGridDataSource, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiFilterBuilderField = /** @class */ (function (_super) {
      __extends(DxiFilterBuilderField, _super);
      function DxiFilterBuilderField() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiFilterBuilderField.prototype, "calculateFilterExpression", {
          get: function () {
              return this._getOption('calculateFilterExpression');
          },
          set: function (value) {
              this._setOption('calculateFilterExpression', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "caption", {
          get: function () {
              return this._getOption('caption');
          },
          set: function (value) {
              this._setOption('caption', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "customizeText", {
          get: function () {
              return this._getOption('customizeText');
          },
          set: function (value) {
              this._setOption('customizeText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "dataField", {
          get: function () {
              return this._getOption('dataField');
          },
          set: function (value) {
              this._setOption('dataField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "dataType", {
          get: function () {
              return this._getOption('dataType');
          },
          set: function (value) {
              this._setOption('dataType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "editorOptions", {
          get: function () {
              return this._getOption('editorOptions');
          },
          set: function (value) {
              this._setOption('editorOptions', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "editorTemplate", {
          get: function () {
              return this._getOption('editorTemplate');
          },
          set: function (value) {
              this._setOption('editorTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "falseText", {
          get: function () {
              return this._getOption('falseText');
          },
          set: function (value) {
              this._setOption('falseText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "filterOperations", {
          get: function () {
              return this._getOption('filterOperations');
          },
          set: function (value) {
              this._setOption('filterOperations', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "format", {
          get: function () {
              return this._getOption('format');
          },
          set: function (value) {
              this._setOption('format', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "lookup", {
          get: function () {
              return this._getOption('lookup');
          },
          set: function (value) {
              this._setOption('lookup', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "trueText", {
          get: function () {
              return this._getOption('trueText');
          },
          set: function (value) {
              this._setOption('trueText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "allowCrossGroupCalculation", {
          get: function () {
              return this._getOption('allowCrossGroupCalculation');
          },
          set: function (value) {
              this._setOption('allowCrossGroupCalculation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "allowExpandAll", {
          get: function () {
              return this._getOption('allowExpandAll');
          },
          set: function (value) {
              this._setOption('allowExpandAll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "allowFiltering", {
          get: function () {
              return this._getOption('allowFiltering');
          },
          set: function (value) {
              this._setOption('allowFiltering', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "allowSorting", {
          get: function () {
              return this._getOption('allowSorting');
          },
          set: function (value) {
              this._setOption('allowSorting', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "allowSortingBySummary", {
          get: function () {
              return this._getOption('allowSortingBySummary');
          },
          set: function (value) {
              this._setOption('allowSortingBySummary', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "area", {
          get: function () {
              return this._getOption('area');
          },
          set: function (value) {
              this._setOption('area', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "areaIndex", {
          get: function () {
              return this._getOption('areaIndex');
          },
          set: function (value) {
              this._setOption('areaIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "calculateCustomSummary", {
          get: function () {
              return this._getOption('calculateCustomSummary');
          },
          set: function (value) {
              this._setOption('calculateCustomSummary', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "calculateSummaryValue", {
          get: function () {
              return this._getOption('calculateSummaryValue');
          },
          set: function (value) {
              this._setOption('calculateSummaryValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "displayFolder", {
          get: function () {
              return this._getOption('displayFolder');
          },
          set: function (value) {
              this._setOption('displayFolder', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "expanded", {
          get: function () {
              return this._getOption('expanded');
          },
          set: function (value) {
              this._setOption('expanded', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "filterType", {
          get: function () {
              return this._getOption('filterType');
          },
          set: function (value) {
              this._setOption('filterType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "filterValues", {
          get: function () {
              return this._getOption('filterValues');
          },
          set: function (value) {
              this._setOption('filterValues', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "groupIndex", {
          get: function () {
              return this._getOption('groupIndex');
          },
          set: function (value) {
              this._setOption('groupIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "groupInterval", {
          get: function () {
              return this._getOption('groupInterval');
          },
          set: function (value) {
              this._setOption('groupInterval', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "groupName", {
          get: function () {
              return this._getOption('groupName');
          },
          set: function (value) {
              this._setOption('groupName', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "headerFilter", {
          get: function () {
              return this._getOption('headerFilter');
          },
          set: function (value) {
              this._setOption('headerFilter', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "isMeasure", {
          get: function () {
              return this._getOption('isMeasure');
          },
          set: function (value) {
              this._setOption('isMeasure', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "precision", {
          get: function () {
              return this._getOption('precision');
          },
          set: function (value) {
              this._setOption('precision', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "runningTotal", {
          get: function () {
              return this._getOption('runningTotal');
          },
          set: function (value) {
              this._setOption('runningTotal', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "selector", {
          get: function () {
              return this._getOption('selector');
          },
          set: function (value) {
              this._setOption('selector', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "showGrandTotals", {
          get: function () {
              return this._getOption('showGrandTotals');
          },
          set: function (value) {
              this._setOption('showGrandTotals', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "showTotals", {
          get: function () {
              return this._getOption('showTotals');
          },
          set: function (value) {
              this._setOption('showTotals', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "showValues", {
          get: function () {
              return this._getOption('showValues');
          },
          set: function (value) {
              this._setOption('showValues', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "sortBy", {
          get: function () {
              return this._getOption('sortBy');
          },
          set: function (value) {
              this._setOption('sortBy', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "sortBySummaryField", {
          get: function () {
              return this._getOption('sortBySummaryField');
          },
          set: function (value) {
              this._setOption('sortBySummaryField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "sortBySummaryPath", {
          get: function () {
              return this._getOption('sortBySummaryPath');
          },
          set: function (value) {
              this._setOption('sortBySummaryPath', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "sortingMethod", {
          get: function () {
              return this._getOption('sortingMethod');
          },
          set: function (value) {
              this._setOption('sortingMethod', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "sortOrder", {
          get: function () {
              return this._getOption('sortOrder');
          },
          set: function (value) {
              this._setOption('sortOrder', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "summaryDisplayMode", {
          get: function () {
              return this._getOption('summaryDisplayMode');
          },
          set: function (value) {
              this._setOption('summaryDisplayMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "summaryType", {
          get: function () {
              return this._getOption('summaryType');
          },
          set: function (value) {
              this._setOption('summaryType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFilterBuilderField.prototype, "wordWrapEnabled", {
          get: function () {
              return this._getOption('wordWrapEnabled');
          },
          set: function (value) {
              this._setOption('wordWrapEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiFilterBuilderField;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiFilterBuilderField.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiFilterBuilderField_BaseFactory; return function DxiFilterBuilderField_Factory(t) { return (ɵDxiFilterBuilderField_BaseFactory || (ɵDxiFilterBuilderField_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiFilterBuilderField)))(t || DxiFilterBuilderField); }; }();
  /** @nocollapse */ DxiFilterBuilderField.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiFilterBuilderField, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiFilterBuilderField_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiFilterBuilderField, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiFieldComponent = /** @class */ (function (_super) {
      __extends(DxiFieldComponent, _super);
      function DxiFieldComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiFieldComponent.prototype, "_optionPath", {
          get: function () {
              return 'fields';
          },
          enumerable: false,
          configurable: true
      });
      DxiFieldComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiFieldComponent;
  }(DxiFilterBuilderField));
  /** @nocollapse */ DxiFieldComponent.ɵfac = function DxiFieldComponent_Factory(t) { return new (t || DxiFieldComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiFieldComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiFieldComponent, selectors: [["dxi-field"]], inputs: { calculateFilterExpression: "calculateFilterExpression", caption: "caption", customizeText: "customizeText", dataField: "dataField", dataType: "dataType", editorOptions: "editorOptions", editorTemplate: "editorTemplate", falseText: "falseText", filterOperations: "filterOperations", format: "format", lookup: "lookup", name: "name", trueText: "trueText", allowCrossGroupCalculation: "allowCrossGroupCalculation", allowExpandAll: "allowExpandAll", allowFiltering: "allowFiltering", allowSorting: "allowSorting", allowSortingBySummary: "allowSortingBySummary", area: "area", areaIndex: "areaIndex", calculateCustomSummary: "calculateCustomSummary", calculateSummaryValue: "calculateSummaryValue", displayFolder: "displayFolder", expanded: "expanded", filterType: "filterType", filterValues: "filterValues", groupIndex: "groupIndex", groupInterval: "groupInterval", groupName: "groupName", headerFilter: "headerFilter", isMeasure: "isMeasure", precision: "precision", runningTotal: "runningTotal", selector: "selector", showGrandTotals: "showGrandTotals", showTotals: "showTotals", showValues: "showValues", sortBy: "sortBy", sortBySummaryField: "sortBySummaryField", sortBySummaryPath: "sortBySummaryPath", sortingMethod: "sortingMethod", sortOrder: "sortOrder", summaryDisplayMode: "summaryDisplayMode", summaryType: "summaryType", visible: "visible", width: "width", wordWrapEnabled: "wordWrapEnabled" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiFieldComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiFieldComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-field',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'calculateFilterExpression',
                          'caption',
                          'customizeText',
                          'dataField',
                          'dataType',
                          'editorOptions',
                          'editorTemplate',
                          'falseText',
                          'filterOperations',
                          'format',
                          'lookup',
                          'name',
                          'trueText',
                          'allowCrossGroupCalculation',
                          'allowExpandAll',
                          'allowFiltering',
                          'allowSorting',
                          'allowSortingBySummary',
                          'area',
                          'areaIndex',
                          'calculateCustomSummary',
                          'calculateSummaryValue',
                          'displayFolder',
                          'expanded',
                          'filterType',
                          'filterValues',
                          'groupIndex',
                          'groupInterval',
                          'groupName',
                          'headerFilter',
                          'isMeasure',
                          'precision',
                          'runningTotal',
                          'selector',
                          'showGrandTotals',
                          'showTotals',
                          'showValues',
                          'sortBy',
                          'sortBySummaryField',
                          'sortBySummaryPath',
                          'sortingMethod',
                          'sortOrder',
                          'summaryDisplayMode',
                          'summaryType',
                          'visible',
                          'width',
                          'wordWrapEnabled'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxiFieldModule = /** @class */ (function () {
      function DxiFieldModule() {
      }
      return DxiFieldModule;
  }());
  /** @nocollapse */ DxiFieldModule.ɵfac = function DxiFieldModule_Factory(t) { return new (t || DxiFieldModule)(); };
  /** @nocollapse */ DxiFieldModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiFieldModule });
  /** @nocollapse */ DxiFieldModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiFieldModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiFieldComponent
                      ],
                      exports: [
                          DxiFieldComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiFieldModule, { declarations: [DxiFieldComponent], exports: [DxiFieldComponent] }); })();

  var DxoDataSourceComponent = /** @class */ (function (_super) {
      __extends(DxoDataSourceComponent, _super);
      function DxoDataSourceComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          if ((console) && (console.warn)) {
              console.warn('The nested \'dxo-data-source\' component is deprecated in 17.2. ' +
                  'Use the \'dataSource\' option instead. ' +
                  'See:\nhttps://github.com/DevExpress/devextreme-angular/blob/master/CHANGELOG.md#17.2.3');
          }
          return _this;
      }
      Object.defineProperty(DxoDataSourceComponent.prototype, "_optionPath", {
          get: function () {
              return 'dataSource';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDataSourceComponent.prototype, "fieldsChildren", {
          get: function () {
              return this._getOption('fields');
          },
          set: function (value) {
              this.setChildren('fields', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoDataSourceComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoDataSourceComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoDataSourceComponent;
  }(DxoPivotGridDataSource));
  /** @nocollapse */ DxoDataSourceComponent.ɵfac = function DxoDataSourceComponent_Factory(t) { return new (t || DxoDataSourceComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoDataSourceComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoDataSourceComponent, selectors: [["dxo-data-source"]], contentQueries: function DxoDataSourceComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiFieldComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.fieldsChildren = _t);
          }
      }, inputs: { fields: "fields", filter: "filter", onChanged: "onChanged", onFieldsPrepared: "onFieldsPrepared", onLoadError: "onLoadError", onLoadingChanged: "onLoadingChanged", remoteOperations: "remoteOperations", retrieveFields: "retrieveFields", store: "store" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoDataSourceComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDataSourceComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-data-source',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'fields',
                          'filter',
                          'onChanged',
                          'onFieldsPrepared',
                          'onLoadError',
                          'onLoadingChanged',
                          'remoteOperations',
                          'retrieveFields',
                          'store'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { fieldsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiFieldComponent; })]
              }] });
  })();
  var DxoDataSourceModule = /** @class */ (function () {
      function DxoDataSourceModule() {
      }
      return DxoDataSourceModule;
  }());
  /** @nocollapse */ DxoDataSourceModule.ɵfac = function DxoDataSourceModule_Factory(t) { return new (t || DxoDataSourceModule)(); };
  /** @nocollapse */ DxoDataSourceModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoDataSourceModule });
  /** @nocollapse */ DxoDataSourceModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDataSourceModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoDataSourceComponent
                      ],
                      exports: [
                          DxoDataSourceComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoDataSourceModule, { declarations: [DxoDataSourceComponent], exports: [DxoDataSourceComponent] }); })();

  var DxoDefaultItemPropertiesComponent = /** @class */ (function (_super) {
      __extends(DxoDefaultItemPropertiesComponent, _super);
      function DxoDefaultItemPropertiesComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "connectorLineEnd", {
          get: function () {
              return this._getOption('connectorLineEnd');
          },
          set: function (value) {
              this._setOption('connectorLineEnd', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "connectorLineStart", {
          get: function () {
              return this._getOption('connectorLineStart');
          },
          set: function (value) {
              this._setOption('connectorLineStart', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "connectorLineType", {
          get: function () {
              return this._getOption('connectorLineType');
          },
          set: function (value) {
              this._setOption('connectorLineType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "shapeMaxHeight", {
          get: function () {
              return this._getOption('shapeMaxHeight');
          },
          set: function (value) {
              this._setOption('shapeMaxHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "shapeMaxWidth", {
          get: function () {
              return this._getOption('shapeMaxWidth');
          },
          set: function (value) {
              this._setOption('shapeMaxWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "shapeMinHeight", {
          get: function () {
              return this._getOption('shapeMinHeight');
          },
          set: function (value) {
              this._setOption('shapeMinHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "shapeMinWidth", {
          get: function () {
              return this._getOption('shapeMinWidth');
          },
          set: function (value) {
              this._setOption('shapeMinWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "style", {
          get: function () {
              return this._getOption('style');
          },
          set: function (value) {
              this._setOption('style', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "textStyle", {
          get: function () {
              return this._getOption('textStyle');
          },
          set: function (value) {
              this._setOption('textStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDefaultItemPropertiesComponent.prototype, "_optionPath", {
          get: function () {
              return 'defaultItemProperties';
          },
          enumerable: false,
          configurable: true
      });
      DxoDefaultItemPropertiesComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoDefaultItemPropertiesComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoDefaultItemPropertiesComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoDefaultItemPropertiesComponent.ɵfac = function DxoDefaultItemPropertiesComponent_Factory(t) { return new (t || DxoDefaultItemPropertiesComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoDefaultItemPropertiesComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoDefaultItemPropertiesComponent, selectors: [["dxo-default-item-properties"]], inputs: { connectorLineEnd: "connectorLineEnd", connectorLineStart: "connectorLineStart", connectorLineType: "connectorLineType", shapeMaxHeight: "shapeMaxHeight", shapeMaxWidth: "shapeMaxWidth", shapeMinHeight: "shapeMinHeight", shapeMinWidth: "shapeMinWidth", style: "style", textStyle: "textStyle" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoDefaultItemPropertiesComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDefaultItemPropertiesComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-default-item-properties',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { connectorLineEnd: [{
                  type: i0.Input
              }], connectorLineStart: [{
                  type: i0.Input
              }], connectorLineType: [{
                  type: i0.Input
              }], shapeMaxHeight: [{
                  type: i0.Input
              }], shapeMaxWidth: [{
                  type: i0.Input
              }], shapeMinHeight: [{
                  type: i0.Input
              }], shapeMinWidth: [{
                  type: i0.Input
              }], style: [{
                  type: i0.Input
              }], textStyle: [{
                  type: i0.Input
              }] });
  })();
  var DxoDefaultItemPropertiesModule = /** @class */ (function () {
      function DxoDefaultItemPropertiesModule() {
      }
      return DxoDefaultItemPropertiesModule;
  }());
  /** @nocollapse */ DxoDefaultItemPropertiesModule.ɵfac = function DxoDefaultItemPropertiesModule_Factory(t) { return new (t || DxoDefaultItemPropertiesModule)(); };
  /** @nocollapse */ DxoDefaultItemPropertiesModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoDefaultItemPropertiesModule });
  /** @nocollapse */ DxoDefaultItemPropertiesModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDefaultItemPropertiesModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoDefaultItemPropertiesComponent
                      ],
                      exports: [
                          DxoDefaultItemPropertiesComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoDefaultItemPropertiesModule, { declarations: [DxoDefaultItemPropertiesComponent], exports: [DxoDefaultItemPropertiesComponent] }); })();

  var DxoDelayComponent = /** @class */ (function (_super) {
      __extends(DxoDelayComponent, _super);
      function DxoDelayComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoDelayComponent.prototype, "hide", {
          get: function () {
              return this._getOption('hide');
          },
          set: function (value) {
              this._setOption('hide', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDelayComponent.prototype, "show", {
          get: function () {
              return this._getOption('show');
          },
          set: function (value) {
              this._setOption('show', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDelayComponent.prototype, "_optionPath", {
          get: function () {
              return 'delay';
          },
          enumerable: false,
          configurable: true
      });
      DxoDelayComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoDelayComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoDelayComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoDelayComponent.ɵfac = function DxoDelayComponent_Factory(t) { return new (t || DxoDelayComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoDelayComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoDelayComponent, selectors: [["dxo-delay"]], inputs: { hide: "hide", show: "show" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoDelayComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDelayComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-delay',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { hide: [{
                  type: i0.Input
              }], show: [{
                  type: i0.Input
              }] });
  })();
  var DxoDelayModule = /** @class */ (function () {
      function DxoDelayModule() {
      }
      return DxoDelayModule;
  }());
  /** @nocollapse */ DxoDelayModule.ɵfac = function DxoDelayModule_Factory(t) { return new (t || DxoDelayModule)(); };
  /** @nocollapse */ DxoDelayModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoDelayModule });
  /** @nocollapse */ DxoDelayModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDelayModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoDelayComponent
                      ],
                      exports: [
                          DxoDelayComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoDelayModule, { declarations: [DxoDelayComponent], exports: [DxoDelayComponent] }); })();

  var DxoDependenciesComponent = /** @class */ (function (_super) {
      __extends(DxoDependenciesComponent, _super);
      function DxoDependenciesComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoDependenciesComponent.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDependenciesComponent.prototype, "keyExpr", {
          get: function () {
              return this._getOption('keyExpr');
          },
          set: function (value) {
              this._setOption('keyExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDependenciesComponent.prototype, "predecessorIdExpr", {
          get: function () {
              return this._getOption('predecessorIdExpr');
          },
          set: function (value) {
              this._setOption('predecessorIdExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDependenciesComponent.prototype, "successorIdExpr", {
          get: function () {
              return this._getOption('successorIdExpr');
          },
          set: function (value) {
              this._setOption('successorIdExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDependenciesComponent.prototype, "typeExpr", {
          get: function () {
              return this._getOption('typeExpr');
          },
          set: function (value) {
              this._setOption('typeExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDependenciesComponent.prototype, "_optionPath", {
          get: function () {
              return 'dependencies';
          },
          enumerable: false,
          configurable: true
      });
      DxoDependenciesComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoDependenciesComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoDependenciesComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoDependenciesComponent.ɵfac = function DxoDependenciesComponent_Factory(t) { return new (t || DxoDependenciesComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoDependenciesComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoDependenciesComponent, selectors: [["dxo-dependencies"]], inputs: { dataSource: "dataSource", keyExpr: "keyExpr", predecessorIdExpr: "predecessorIdExpr", successorIdExpr: "successorIdExpr", typeExpr: "typeExpr" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoDependenciesComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDependenciesComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-dependencies',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { dataSource: [{
                  type: i0.Input
              }], keyExpr: [{
                  type: i0.Input
              }], predecessorIdExpr: [{
                  type: i0.Input
              }], successorIdExpr: [{
                  type: i0.Input
              }], typeExpr: [{
                  type: i0.Input
              }] });
  })();
  var DxoDependenciesModule = /** @class */ (function () {
      function DxoDependenciesModule() {
      }
      return DxoDependenciesModule;
  }());
  /** @nocollapse */ DxoDependenciesModule.ɵfac = function DxoDependenciesModule_Factory(t) { return new (t || DxoDependenciesModule)(); };
  /** @nocollapse */ DxoDependenciesModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoDependenciesModule });
  /** @nocollapse */ DxoDependenciesModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDependenciesModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoDependenciesComponent
                      ],
                      exports: [
                          DxoDependenciesComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoDependenciesModule, { declarations: [DxoDependenciesComponent], exports: [DxoDependenciesComponent] }); })();

  var DxoDetailsComponent = /** @class */ (function (_super) {
      __extends(DxoDetailsComponent, _super);
      function DxoDetailsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoDetailsComponent.prototype, "columns", {
          get: function () {
              return this._getOption('columns');
          },
          set: function (value) {
              this._setOption('columns', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDetailsComponent.prototype, "_optionPath", {
          get: function () {
              return 'details';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDetailsComponent.prototype, "columnsChildren", {
          get: function () {
              return this._getOption('columns');
          },
          set: function (value) {
              this.setChildren('columns', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoDetailsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoDetailsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoDetailsComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoDetailsComponent.ɵfac = function DxoDetailsComponent_Factory(t) { return new (t || DxoDetailsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoDetailsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoDetailsComponent, selectors: [["dxo-details"]], contentQueries: function DxoDetailsComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiColumnComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.columnsChildren = _t);
          }
      }, inputs: { columns: "columns" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoDetailsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDetailsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-details',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { columns: [{
                  type: i0.Input
              }], columnsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiColumnComponent; })]
              }] });
  })();
  var DxoDetailsModule = /** @class */ (function () {
      function DxoDetailsModule() {
      }
      return DxoDetailsModule;
  }());
  /** @nocollapse */ DxoDetailsModule.ɵfac = function DxoDetailsModule_Factory(t) { return new (t || DxoDetailsModule)(); };
  /** @nocollapse */ DxoDetailsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoDetailsModule });
  /** @nocollapse */ DxoDetailsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDetailsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoDetailsComponent
                      ],
                      exports: [
                          DxoDetailsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoDetailsModule, { declarations: [DxoDetailsComponent], exports: [DxoDetailsComponent] }); })();

  var DxoDisplayFormatComponent = /** @class */ (function (_super) {
      __extends(DxoDisplayFormatComponent, _super);
      function DxoDisplayFormatComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoDisplayFormatComponent.prototype, "_optionPath", {
          get: function () {
              return 'displayFormat';
          },
          enumerable: false,
          configurable: true
      });
      DxoDisplayFormatComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoDisplayFormatComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoDisplayFormatComponent;
  }(DxoFormat));
  /** @nocollapse */ DxoDisplayFormatComponent.ɵfac = function DxoDisplayFormatComponent_Factory(t) { return new (t || DxoDisplayFormatComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoDisplayFormatComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoDisplayFormatComponent, selectors: [["dxo-display-format"]], inputs: { currency: "currency", formatter: "formatter", parser: "parser", precision: "precision", type: "type", useCurrencyAccountingStyle: "useCurrencyAccountingStyle" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoDisplayFormatComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDisplayFormatComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-display-format',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'currency',
                          'formatter',
                          'parser',
                          'precision',
                          'type',
                          'useCurrencyAccountingStyle'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoDisplayFormatModule = /** @class */ (function () {
      function DxoDisplayFormatModule() {
      }
      return DxoDisplayFormatModule;
  }());
  /** @nocollapse */ DxoDisplayFormatModule.ɵfac = function DxoDisplayFormatModule_Factory(t) { return new (t || DxoDisplayFormatModule)(); };
  /** @nocollapse */ DxoDisplayFormatModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoDisplayFormatModule });
  /** @nocollapse */ DxoDisplayFormatModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDisplayFormatModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoDisplayFormatComponent
                      ],
                      exports: [
                          DxoDisplayFormatComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoDisplayFormatModule, { declarations: [DxoDisplayFormatComponent], exports: [DxoDisplayFormatComponent] }); })();

  var DxoDragBoxStyleComponent = /** @class */ (function (_super) {
      __extends(DxoDragBoxStyleComponent, _super);
      function DxoDragBoxStyleComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoDragBoxStyleComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDragBoxStyleComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDragBoxStyleComponent.prototype, "_optionPath", {
          get: function () {
              return 'dragBoxStyle';
          },
          enumerable: false,
          configurable: true
      });
      DxoDragBoxStyleComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoDragBoxStyleComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoDragBoxStyleComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoDragBoxStyleComponent.ɵfac = function DxoDragBoxStyleComponent_Factory(t) { return new (t || DxoDragBoxStyleComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoDragBoxStyleComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoDragBoxStyleComponent, selectors: [["dxo-drag-box-style"]], inputs: { color: "color", opacity: "opacity" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoDragBoxStyleComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDragBoxStyleComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-drag-box-style',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }] });
  })();
  var DxoDragBoxStyleModule = /** @class */ (function () {
      function DxoDragBoxStyleModule() {
      }
      return DxoDragBoxStyleModule;
  }());
  /** @nocollapse */ DxoDragBoxStyleModule.ɵfac = function DxoDragBoxStyleModule_Factory(t) { return new (t || DxoDragBoxStyleModule)(); };
  /** @nocollapse */ DxoDragBoxStyleModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoDragBoxStyleModule });
  /** @nocollapse */ DxoDragBoxStyleModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDragBoxStyleModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoDragBoxStyleComponent
                      ],
                      exports: [
                          DxoDragBoxStyleComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoDragBoxStyleModule, { declarations: [DxoDragBoxStyleComponent], exports: [DxoDragBoxStyleComponent] }); })();

  var DxoPopupOptions = /** @class */ (function (_super) {
      __extends(DxoPopupOptions, _super);
      function DxoPopupOptions() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoPopupOptions.prototype, "accessKey", {
          get: function () {
              return this._getOption('accessKey');
          },
          set: function (value) {
              this._setOption('accessKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "animation", {
          get: function () {
              return this._getOption('animation');
          },
          set: function (value) {
              this._setOption('animation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "closeOnOutsideClick", {
          get: function () {
              return this._getOption('closeOnOutsideClick');
          },
          set: function (value) {
              this._setOption('closeOnOutsideClick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "container", {
          get: function () {
              return this._getOption('container');
          },
          set: function (value) {
              this._setOption('container', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "contentTemplate", {
          get: function () {
              return this._getOption('contentTemplate');
          },
          set: function (value) {
              this._setOption('contentTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "copyRootClassesToWrapper", {
          get: function () {
              return this._getOption('copyRootClassesToWrapper');
          },
          set: function (value) {
              this._setOption('copyRootClassesToWrapper', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "deferRendering", {
          get: function () {
              return this._getOption('deferRendering');
          },
          set: function (value) {
              this._setOption('deferRendering', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "dragAndResizeArea", {
          get: function () {
              return this._getOption('dragAndResizeArea');
          },
          set: function (value) {
              this._setOption('dragAndResizeArea', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "dragEnabled", {
          get: function () {
              return this._getOption('dragEnabled');
          },
          set: function (value) {
              this._setOption('dragEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "dragOutsideBoundary", {
          get: function () {
              return this._getOption('dragOutsideBoundary');
          },
          set: function (value) {
              this._setOption('dragOutsideBoundary', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "elementAttr", {
          get: function () {
              return this._getOption('elementAttr');
          },
          set: function (value) {
              this._setOption('elementAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "enableBodyScroll", {
          get: function () {
              return this._getOption('enableBodyScroll');
          },
          set: function (value) {
              this._setOption('enableBodyScroll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "focusStateEnabled", {
          get: function () {
              return this._getOption('focusStateEnabled');
          },
          set: function (value) {
              this._setOption('focusStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "fullScreen", {
          get: function () {
              return this._getOption('fullScreen');
          },
          set: function (value) {
              this._setOption('fullScreen', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "hideOnOutsideClick", {
          get: function () {
              return this._getOption('hideOnOutsideClick');
          },
          set: function (value) {
              this._setOption('hideOnOutsideClick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "hideOnParentScroll", {
          get: function () {
              return this._getOption('hideOnParentScroll');
          },
          set: function (value) {
              this._setOption('hideOnParentScroll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "hint", {
          get: function () {
              return this._getOption('hint');
          },
          set: function (value) {
              this._setOption('hint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "hoverStateEnabled", {
          get: function () {
              return this._getOption('hoverStateEnabled');
          },
          set: function (value) {
              this._setOption('hoverStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "maxHeight", {
          get: function () {
              return this._getOption('maxHeight');
          },
          set: function (value) {
              this._setOption('maxHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "maxWidth", {
          get: function () {
              return this._getOption('maxWidth');
          },
          set: function (value) {
              this._setOption('maxWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "minHeight", {
          get: function () {
              return this._getOption('minHeight');
          },
          set: function (value) {
              this._setOption('minHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "minWidth", {
          get: function () {
              return this._getOption('minWidth');
          },
          set: function (value) {
              this._setOption('minWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "onContentReady", {
          get: function () {
              return this._getOption('onContentReady');
          },
          set: function (value) {
              this._setOption('onContentReady', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "onDisposing", {
          get: function () {
              return this._getOption('onDisposing');
          },
          set: function (value) {
              this._setOption('onDisposing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "onHidden", {
          get: function () {
              return this._getOption('onHidden');
          },
          set: function (value) {
              this._setOption('onHidden', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "onHiding", {
          get: function () {
              return this._getOption('onHiding');
          },
          set: function (value) {
              this._setOption('onHiding', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "onInitialized", {
          get: function () {
              return this._getOption('onInitialized');
          },
          set: function (value) {
              this._setOption('onInitialized', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "onOptionChanged", {
          get: function () {
              return this._getOption('onOptionChanged');
          },
          set: function (value) {
              this._setOption('onOptionChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "onResize", {
          get: function () {
              return this._getOption('onResize');
          },
          set: function (value) {
              this._setOption('onResize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "onResizeEnd", {
          get: function () {
              return this._getOption('onResizeEnd');
          },
          set: function (value) {
              this._setOption('onResizeEnd', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "onResizeStart", {
          get: function () {
              return this._getOption('onResizeStart');
          },
          set: function (value) {
              this._setOption('onResizeStart', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "onShowing", {
          get: function () {
              return this._getOption('onShowing');
          },
          set: function (value) {
              this._setOption('onShowing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "onShown", {
          get: function () {
              return this._getOption('onShown');
          },
          set: function (value) {
              this._setOption('onShown', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "onTitleRendered", {
          get: function () {
              return this._getOption('onTitleRendered');
          },
          set: function (value) {
              this._setOption('onTitleRendered', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "position", {
          get: function () {
              return this._getOption('position');
          },
          set: function (value) {
              this._setOption('position', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "resizeEnabled", {
          get: function () {
              return this._getOption('resizeEnabled');
          },
          set: function (value) {
              this._setOption('resizeEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "restorePosition", {
          get: function () {
              return this._getOption('restorePosition');
          },
          set: function (value) {
              this._setOption('restorePosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "rtlEnabled", {
          get: function () {
              return this._getOption('rtlEnabled');
          },
          set: function (value) {
              this._setOption('rtlEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "shading", {
          get: function () {
              return this._getOption('shading');
          },
          set: function (value) {
              this._setOption('shading', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "shadingColor", {
          get: function () {
              return this._getOption('shadingColor');
          },
          set: function (value) {
              this._setOption('shadingColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "showCloseButton", {
          get: function () {
              return this._getOption('showCloseButton');
          },
          set: function (value) {
              this._setOption('showCloseButton', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "showTitle", {
          get: function () {
              return this._getOption('showTitle');
          },
          set: function (value) {
              this._setOption('showTitle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "tabIndex", {
          get: function () {
              return this._getOption('tabIndex');
          },
          set: function (value) {
              this._setOption('tabIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "title", {
          get: function () {
              return this._getOption('title');
          },
          set: function (value) {
              this._setOption('title', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "titleTemplate", {
          get: function () {
              return this._getOption('titleTemplate');
          },
          set: function (value) {
              this._setOption('titleTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "toolbarItems", {
          get: function () {
              return this._getOption('toolbarItems');
          },
          set: function (value) {
              this._setOption('toolbarItems', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "wrapperAttr", {
          get: function () {
              return this._getOption('wrapperAttr');
          },
          set: function (value) {
              this._setOption('wrapperAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "hideEvent", {
          get: function () {
              return this._getOption('hideEvent');
          },
          set: function (value) {
              this._setOption('hideEvent', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "showEvent", {
          get: function () {
              return this._getOption('showEvent');
          },
          set: function (value) {
              this._setOption('showEvent', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupOptions.prototype, "target", {
          get: function () {
              return this._getOption('target');
          },
          set: function (value) {
              this._setOption('target', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoPopupOptions;
  }(i1.NestedOption));
  /** @nocollapse */ DxoPopupOptions.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoPopupOptions_BaseFactory; return function DxoPopupOptions_Factory(t) { return (ɵDxoPopupOptions_BaseFactory || (ɵDxoPopupOptions_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoPopupOptions)))(t || DxoPopupOptions); }; }();
  /** @nocollapse */ DxoPopupOptions.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoPopupOptions, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoPopupOptions_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPopupOptions, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var _c0$1 = ["*"];
  var DxiToolbarItemComponent = /** @class */ (function (_super) {
      __extends(DxiToolbarItemComponent, _super);
      function DxiToolbarItemComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
          var _this = _super.call(this) || this;
          _this.renderer = renderer;
          _this.document = document;
          _this.element = element;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          templateHost.setHost(_this);
          return _this;
      }
      Object.defineProperty(DxiToolbarItemComponent.prototype, "cssClass", {
          get: function () {
              return this._getOption('cssClass');
          },
          set: function (value) {
              this._setOption('cssClass', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiToolbarItemComponent.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiToolbarItemComponent.prototype, "html", {
          get: function () {
              return this._getOption('html');
          },
          set: function (value) {
              this._setOption('html', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiToolbarItemComponent.prototype, "locateInMenu", {
          get: function () {
              return this._getOption('locateInMenu');
          },
          set: function (value) {
              this._setOption('locateInMenu', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiToolbarItemComponent.prototype, "location", {
          get: function () {
              return this._getOption('location');
          },
          set: function (value) {
              this._setOption('location', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiToolbarItemComponent.prototype, "menuItemTemplate", {
          get: function () {
              return this._getOption('menuItemTemplate');
          },
          set: function (value) {
              this._setOption('menuItemTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiToolbarItemComponent.prototype, "options", {
          get: function () {
              return this._getOption('options');
          },
          set: function (value) {
              this._setOption('options', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiToolbarItemComponent.prototype, "showText", {
          get: function () {
              return this._getOption('showText');
          },
          set: function (value) {
              this._setOption('showText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiToolbarItemComponent.prototype, "template", {
          get: function () {
              return this._getOption('template');
          },
          set: function (value) {
              this._setOption('template', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiToolbarItemComponent.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiToolbarItemComponent.prototype, "toolbar", {
          get: function () {
              return this._getOption('toolbar');
          },
          set: function (value) {
              this._setOption('toolbar', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiToolbarItemComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiToolbarItemComponent.prototype, "widget", {
          get: function () {
              return this._getOption('widget');
          },
          set: function (value) {
              this._setOption('widget', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiToolbarItemComponent.prototype, "_optionPath", {
          get: function () {
              return 'toolbarItems';
          },
          enumerable: false,
          configurable: true
      });
      DxiToolbarItemComponent.prototype.setTemplate = function (template) {
          this.template = template;
      };
      DxiToolbarItemComponent.prototype.ngAfterViewInit = function () {
          i1.extractTemplate(this, this.element, this.renderer, this.document);
      };
      DxiToolbarItemComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiToolbarItemComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiToolbarItemComponent.ɵfac = function DxiToolbarItemComponent_Factory(t) { return new (t || DxiToolbarItemComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(common.DOCUMENT), i0__namespace.ɵɵdirectiveInject(i1__namespace.DxTemplateHost, 1), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
  /** @nocollapse */ DxiToolbarItemComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiToolbarItemComponent, selectors: [["dxi-toolbar-item"]], inputs: { cssClass: "cssClass", disabled: "disabled", html: "html", locateInMenu: "locateInMenu", location: "location", menuItemTemplate: "menuItemTemplate", options: "options", showText: "showText", template: "template", text: "text", toolbar: "toolbar", visible: "visible", widget: "widget" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost, i1.DxTemplateHost]), i0__namespace.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0$1, decls: 1, vars: 0, template: function DxiToolbarItemComponent_Template(rf, ctx) {
          if (rf & 1) {
              i0__namespace.ɵɵprojectionDef();
              i0__namespace.ɵɵprojection(0);
          }
      }, styles: ["[_nghost-%COMP%] { display: block; }"] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiToolbarItemComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-toolbar-item',
                      template: '<ng-content></ng-content>',
                      styles: [':host { display: block; }'],
                      providers: [i1.NestedOptionHost, i1.DxTemplateHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }, { type: i0__namespace.Renderer2 }, { type: undefined, decorators: [{
                          type: i0.Inject,
                          args: [common.DOCUMENT]
                      }] }, { type: i1__namespace.DxTemplateHost, decorators: [{
                          type: i0.Host
                      }] }, { type: i0__namespace.ElementRef }];
      }, { cssClass: [{
                  type: i0.Input
              }], disabled: [{
                  type: i0.Input
              }], html: [{
                  type: i0.Input
              }], locateInMenu: [{
                  type: i0.Input
              }], location: [{
                  type: i0.Input
              }], menuItemTemplate: [{
                  type: i0.Input
              }], options: [{
                  type: i0.Input
              }], showText: [{
                  type: i0.Input
              }], template: [{
                  type: i0.Input
              }], text: [{
                  type: i0.Input
              }], toolbar: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], widget: [{
                  type: i0.Input
              }] });
  })();
  var DxiToolbarItemModule = /** @class */ (function () {
      function DxiToolbarItemModule() {
      }
      return DxiToolbarItemModule;
  }());
  /** @nocollapse */ DxiToolbarItemModule.ɵfac = function DxiToolbarItemModule_Factory(t) { return new (t || DxiToolbarItemModule)(); };
  /** @nocollapse */ DxiToolbarItemModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiToolbarItemModule });
  /** @nocollapse */ DxiToolbarItemModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiToolbarItemModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiToolbarItemComponent
                      ],
                      exports: [
                          DxiToolbarItemComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiToolbarItemModule, { declarations: [DxiToolbarItemComponent], exports: [DxiToolbarItemComponent] }); })();

  var DxoDropDownOptionsComponent = /** @class */ (function (_super) {
      __extends(DxoDropDownOptionsComponent, _super);
      function DxoDropDownOptionsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'heightChange' },
              { emit: 'positionChange' },
              { emit: 'visibleChange' },
              { emit: 'widthChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoDropDownOptionsComponent.prototype, "_optionPath", {
          get: function () {
              return 'dropDownOptions';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDropDownOptionsComponent.prototype, "toolbarItemsChildren", {
          get: function () {
              return this._getOption('toolbarItems');
          },
          set: function (value) {
              this.setChildren('toolbarItems', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoDropDownOptionsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoDropDownOptionsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoDropDownOptionsComponent;
  }(DxoPopupOptions));
  /** @nocollapse */ DxoDropDownOptionsComponent.ɵfac = function DxoDropDownOptionsComponent_Factory(t) { return new (t || DxoDropDownOptionsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoDropDownOptionsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoDropDownOptionsComponent, selectors: [["dxo-drop-down-options"]], contentQueries: function DxoDropDownOptionsComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiToolbarItemComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.toolbarItemsChildren = _t);
          }
      }, inputs: { accessKey: "accessKey", animation: "animation", closeOnOutsideClick: "closeOnOutsideClick", container: "container", contentTemplate: "contentTemplate", copyRootClassesToWrapper: "copyRootClassesToWrapper", deferRendering: "deferRendering", disabled: "disabled", dragAndResizeArea: "dragAndResizeArea", dragEnabled: "dragEnabled", dragOutsideBoundary: "dragOutsideBoundary", elementAttr: "elementAttr", enableBodyScroll: "enableBodyScroll", focusStateEnabled: "focusStateEnabled", fullScreen: "fullScreen", height: "height", hideOnOutsideClick: "hideOnOutsideClick", hideOnParentScroll: "hideOnParentScroll", hint: "hint", hoverStateEnabled: "hoverStateEnabled", maxHeight: "maxHeight", maxWidth: "maxWidth", minHeight: "minHeight", minWidth: "minWidth", onContentReady: "onContentReady", onDisposing: "onDisposing", onHidden: "onHidden", onHiding: "onHiding", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", onResize: "onResize", onResizeEnd: "onResizeEnd", onResizeStart: "onResizeStart", onShowing: "onShowing", onShown: "onShown", onTitleRendered: "onTitleRendered", position: "position", resizeEnabled: "resizeEnabled", restorePosition: "restorePosition", rtlEnabled: "rtlEnabled", shading: "shading", shadingColor: "shadingColor", showCloseButton: "showCloseButton", showTitle: "showTitle", tabIndex: "tabIndex", title: "title", titleTemplate: "titleTemplate", toolbarItems: "toolbarItems", visible: "visible", width: "width", wrapperAttr: "wrapperAttr", hideEvent: "hideEvent", showEvent: "showEvent", target: "target" }, outputs: { heightChange: "heightChange", positionChange: "positionChange", visibleChange: "visibleChange", widthChange: "widthChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoDropDownOptionsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDropDownOptionsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-drop-down-options',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'accessKey',
                          'animation',
                          'closeOnOutsideClick',
                          'container',
                          'contentTemplate',
                          'copyRootClassesToWrapper',
                          'deferRendering',
                          'disabled',
                          'dragAndResizeArea',
                          'dragEnabled',
                          'dragOutsideBoundary',
                          'elementAttr',
                          'enableBodyScroll',
                          'focusStateEnabled',
                          'fullScreen',
                          'height',
                          'hideOnOutsideClick',
                          'hideOnParentScroll',
                          'hint',
                          'hoverStateEnabled',
                          'maxHeight',
                          'maxWidth',
                          'minHeight',
                          'minWidth',
                          'onContentReady',
                          'onDisposing',
                          'onHidden',
                          'onHiding',
                          'onInitialized',
                          'onOptionChanged',
                          'onResize',
                          'onResizeEnd',
                          'onResizeStart',
                          'onShowing',
                          'onShown',
                          'onTitleRendered',
                          'position',
                          'resizeEnabled',
                          'restorePosition',
                          'rtlEnabled',
                          'shading',
                          'shadingColor',
                          'showCloseButton',
                          'showTitle',
                          'tabIndex',
                          'title',
                          'titleTemplate',
                          'toolbarItems',
                          'visible',
                          'width',
                          'wrapperAttr',
                          'hideEvent',
                          'showEvent',
                          'target'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { heightChange: [{
                  type: i0.Output
              }], positionChange: [{
                  type: i0.Output
              }], visibleChange: [{
                  type: i0.Output
              }], widthChange: [{
                  type: i0.Output
              }], toolbarItemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiToolbarItemComponent; })]
              }] });
  })();
  var DxoDropDownOptionsModule = /** @class */ (function () {
      function DxoDropDownOptionsModule() {
      }
      return DxoDropDownOptionsModule;
  }());
  /** @nocollapse */ DxoDropDownOptionsModule.ɵfac = function DxoDropDownOptionsModule_Factory(t) { return new (t || DxoDropDownOptionsModule)(); };
  /** @nocollapse */ DxoDropDownOptionsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoDropDownOptionsModule });
  /** @nocollapse */ DxoDropDownOptionsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDropDownOptionsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoDropDownOptionsComponent
                      ],
                      exports: [
                          DxoDropDownOptionsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoDropDownOptionsModule, { declarations: [DxoDropDownOptionsComponent], exports: [DxoDropDownOptionsComponent] }); })();

  var DxoEdgesComponent = /** @class */ (function (_super) {
      __extends(DxoEdgesComponent, _super);
      function DxoEdgesComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoEdgesComponent.prototype, "customDataExpr", {
          get: function () {
              return this._getOption('customDataExpr');
          },
          set: function (value) {
              this._setOption('customDataExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "fromExpr", {
          get: function () {
              return this._getOption('fromExpr');
          },
          set: function (value) {
              this._setOption('fromExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "fromLineEndExpr", {
          get: function () {
              return this._getOption('fromLineEndExpr');
          },
          set: function (value) {
              this._setOption('fromLineEndExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "fromPointIndexExpr", {
          get: function () {
              return this._getOption('fromPointIndexExpr');
          },
          set: function (value) {
              this._setOption('fromPointIndexExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "keyExpr", {
          get: function () {
              return this._getOption('keyExpr');
          },
          set: function (value) {
              this._setOption('keyExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "lineTypeExpr", {
          get: function () {
              return this._getOption('lineTypeExpr');
          },
          set: function (value) {
              this._setOption('lineTypeExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "lockedExpr", {
          get: function () {
              return this._getOption('lockedExpr');
          },
          set: function (value) {
              this._setOption('lockedExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "pointsExpr", {
          get: function () {
              return this._getOption('pointsExpr');
          },
          set: function (value) {
              this._setOption('pointsExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "styleExpr", {
          get: function () {
              return this._getOption('styleExpr');
          },
          set: function (value) {
              this._setOption('styleExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "textExpr", {
          get: function () {
              return this._getOption('textExpr');
          },
          set: function (value) {
              this._setOption('textExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "textStyleExpr", {
          get: function () {
              return this._getOption('textStyleExpr');
          },
          set: function (value) {
              this._setOption('textStyleExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "toExpr", {
          get: function () {
              return this._getOption('toExpr');
          },
          set: function (value) {
              this._setOption('toExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "toLineEndExpr", {
          get: function () {
              return this._getOption('toLineEndExpr');
          },
          set: function (value) {
              this._setOption('toLineEndExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "toPointIndexExpr", {
          get: function () {
              return this._getOption('toPointIndexExpr');
          },
          set: function (value) {
              this._setOption('toPointIndexExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "zIndexExpr", {
          get: function () {
              return this._getOption('zIndexExpr');
          },
          set: function (value) {
              this._setOption('zIndexExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEdgesComponent.prototype, "_optionPath", {
          get: function () {
              return 'edges';
          },
          enumerable: false,
          configurable: true
      });
      DxoEdgesComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoEdgesComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoEdgesComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoEdgesComponent.ɵfac = function DxoEdgesComponent_Factory(t) { return new (t || DxoEdgesComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoEdgesComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoEdgesComponent, selectors: [["dxo-edges"]], inputs: { customDataExpr: "customDataExpr", dataSource: "dataSource", fromExpr: "fromExpr", fromLineEndExpr: "fromLineEndExpr", fromPointIndexExpr: "fromPointIndexExpr", keyExpr: "keyExpr", lineTypeExpr: "lineTypeExpr", lockedExpr: "lockedExpr", pointsExpr: "pointsExpr", styleExpr: "styleExpr", textExpr: "textExpr", textStyleExpr: "textStyleExpr", toExpr: "toExpr", toLineEndExpr: "toLineEndExpr", toPointIndexExpr: "toPointIndexExpr", zIndexExpr: "zIndexExpr" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoEdgesComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoEdgesComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-edges',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { customDataExpr: [{
                  type: i0.Input
              }], dataSource: [{
                  type: i0.Input
              }], fromExpr: [{
                  type: i0.Input
              }], fromLineEndExpr: [{
                  type: i0.Input
              }], fromPointIndexExpr: [{
                  type: i0.Input
              }], keyExpr: [{
                  type: i0.Input
              }], lineTypeExpr: [{
                  type: i0.Input
              }], lockedExpr: [{
                  type: i0.Input
              }], pointsExpr: [{
                  type: i0.Input
              }], styleExpr: [{
                  type: i0.Input
              }], textExpr: [{
                  type: i0.Input
              }], textStyleExpr: [{
                  type: i0.Input
              }], toExpr: [{
                  type: i0.Input
              }], toLineEndExpr: [{
                  type: i0.Input
              }], toPointIndexExpr: [{
                  type: i0.Input
              }], zIndexExpr: [{
                  type: i0.Input
              }] });
  })();
  var DxoEdgesModule = /** @class */ (function () {
      function DxoEdgesModule() {
      }
      return DxoEdgesModule;
  }());
  /** @nocollapse */ DxoEdgesModule.ɵfac = function DxoEdgesModule_Factory(t) { return new (t || DxoEdgesModule)(); };
  /** @nocollapse */ DxoEdgesModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoEdgesModule });
  /** @nocollapse */ DxoEdgesModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoEdgesModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoEdgesComponent
                      ],
                      exports: [
                          DxoEdgesComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoEdgesModule, { declarations: [DxoEdgesComponent], exports: [DxoEdgesComponent] }); })();

  var DxoEditingComponent = /** @class */ (function (_super) {
      __extends(DxoEditingComponent, _super);
      function DxoEditingComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'changesChange' },
              { emit: 'editColumnNameChange' },
              { emit: 'editRowKeyChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoEditingComponent.prototype, "allowAdding", {
          get: function () {
              return this._getOption('allowAdding');
          },
          set: function (value) {
              this._setOption('allowAdding', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowDeleting", {
          get: function () {
              return this._getOption('allowDeleting');
          },
          set: function (value) {
              this._setOption('allowDeleting', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowUpdating", {
          get: function () {
              return this._getOption('allowUpdating');
          },
          set: function (value) {
              this._setOption('allowUpdating', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "changes", {
          get: function () {
              return this._getOption('changes');
          },
          set: function (value) {
              this._setOption('changes', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "confirmDelete", {
          get: function () {
              return this._getOption('confirmDelete');
          },
          set: function (value) {
              this._setOption('confirmDelete', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "editColumnName", {
          get: function () {
              return this._getOption('editColumnName');
          },
          set: function (value) {
              this._setOption('editColumnName', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "editRowKey", {
          get: function () {
              return this._getOption('editRowKey');
          },
          set: function (value) {
              this._setOption('editRowKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "form", {
          get: function () {
              return this._getOption('form');
          },
          set: function (value) {
              this._setOption('form', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "mode", {
          get: function () {
              return this._getOption('mode');
          },
          set: function (value) {
              this._setOption('mode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "newRowPosition", {
          get: function () {
              return this._getOption('newRowPosition');
          },
          set: function (value) {
              this._setOption('newRowPosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "popup", {
          get: function () {
              return this._getOption('popup');
          },
          set: function (value) {
              this._setOption('popup', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "refreshMode", {
          get: function () {
              return this._getOption('refreshMode');
          },
          set: function (value) {
              this._setOption('refreshMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "selectTextOnEditStart", {
          get: function () {
              return this._getOption('selectTextOnEditStart');
          },
          set: function (value) {
              this._setOption('selectTextOnEditStart', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "startEditAction", {
          get: function () {
              return this._getOption('startEditAction');
          },
          set: function (value) {
              this._setOption('startEditAction', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "texts", {
          get: function () {
              return this._getOption('texts');
          },
          set: function (value) {
              this._setOption('texts', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "useIcons", {
          get: function () {
              return this._getOption('useIcons');
          },
          set: function (value) {
              this._setOption('useIcons', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowAddShape", {
          get: function () {
              return this._getOption('allowAddShape');
          },
          set: function (value) {
              this._setOption('allowAddShape', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowChangeConnection", {
          get: function () {
              return this._getOption('allowChangeConnection');
          },
          set: function (value) {
              this._setOption('allowChangeConnection', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowChangeConnectorPoints", {
          get: function () {
              return this._getOption('allowChangeConnectorPoints');
          },
          set: function (value) {
              this._setOption('allowChangeConnectorPoints', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowChangeConnectorText", {
          get: function () {
              return this._getOption('allowChangeConnectorText');
          },
          set: function (value) {
              this._setOption('allowChangeConnectorText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowChangeShapeText", {
          get: function () {
              return this._getOption('allowChangeShapeText');
          },
          set: function (value) {
              this._setOption('allowChangeShapeText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowDeleteConnector", {
          get: function () {
              return this._getOption('allowDeleteConnector');
          },
          set: function (value) {
              this._setOption('allowDeleteConnector', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowDeleteShape", {
          get: function () {
              return this._getOption('allowDeleteShape');
          },
          set: function (value) {
              this._setOption('allowDeleteShape', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowMoveShape", {
          get: function () {
              return this._getOption('allowMoveShape');
          },
          set: function (value) {
              this._setOption('allowMoveShape', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowResizeShape", {
          get: function () {
              return this._getOption('allowResizeShape');
          },
          set: function (value) {
              this._setOption('allowResizeShape', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowDependencyAdding", {
          get: function () {
              return this._getOption('allowDependencyAdding');
          },
          set: function (value) {
              this._setOption('allowDependencyAdding', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowDependencyDeleting", {
          get: function () {
              return this._getOption('allowDependencyDeleting');
          },
          set: function (value) {
              this._setOption('allowDependencyDeleting', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowResourceAdding", {
          get: function () {
              return this._getOption('allowResourceAdding');
          },
          set: function (value) {
              this._setOption('allowResourceAdding', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowResourceDeleting", {
          get: function () {
              return this._getOption('allowResourceDeleting');
          },
          set: function (value) {
              this._setOption('allowResourceDeleting', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowResourceUpdating", {
          get: function () {
              return this._getOption('allowResourceUpdating');
          },
          set: function (value) {
              this._setOption('allowResourceUpdating', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowTaskAdding", {
          get: function () {
              return this._getOption('allowTaskAdding');
          },
          set: function (value) {
              this._setOption('allowTaskAdding', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowTaskDeleting", {
          get: function () {
              return this._getOption('allowTaskDeleting');
          },
          set: function (value) {
              this._setOption('allowTaskDeleting', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowTaskResourceUpdating", {
          get: function () {
              return this._getOption('allowTaskResourceUpdating');
          },
          set: function (value) {
              this._setOption('allowTaskResourceUpdating', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowTaskUpdating", {
          get: function () {
              return this._getOption('allowTaskUpdating');
          },
          set: function (value) {
              this._setOption('allowTaskUpdating', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowDragging", {
          get: function () {
              return this._getOption('allowDragging');
          },
          set: function (value) {
              this._setOption('allowDragging', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowResizing", {
          get: function () {
              return this._getOption('allowResizing');
          },
          set: function (value) {
              this._setOption('allowResizing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "allowTimeZoneEditing", {
          get: function () {
              return this._getOption('allowTimeZoneEditing');
          },
          set: function (value) {
              this._setOption('allowTimeZoneEditing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "_optionPath", {
          get: function () {
              return 'editing';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoEditingComponent.prototype, "changesChildren", {
          get: function () {
              return this._getOption('changes');
          },
          set: function (value) {
              this.setChildren('changes', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoEditingComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoEditingComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoEditingComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoEditingComponent.ɵfac = function DxoEditingComponent_Factory(t) { return new (t || DxoEditingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoEditingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoEditingComponent, selectors: [["dxo-editing"]], contentQueries: function DxoEditingComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiChangeComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.changesChildren = _t);
          }
      }, inputs: { allowAdding: "allowAdding", allowDeleting: "allowDeleting", allowUpdating: "allowUpdating", changes: "changes", confirmDelete: "confirmDelete", editColumnName: "editColumnName", editRowKey: "editRowKey", form: "form", mode: "mode", newRowPosition: "newRowPosition", popup: "popup", refreshMode: "refreshMode", selectTextOnEditStart: "selectTextOnEditStart", startEditAction: "startEditAction", texts: "texts", useIcons: "useIcons", allowAddShape: "allowAddShape", allowChangeConnection: "allowChangeConnection", allowChangeConnectorPoints: "allowChangeConnectorPoints", allowChangeConnectorText: "allowChangeConnectorText", allowChangeShapeText: "allowChangeShapeText", allowDeleteConnector: "allowDeleteConnector", allowDeleteShape: "allowDeleteShape", allowMoveShape: "allowMoveShape", allowResizeShape: "allowResizeShape", allowDependencyAdding: "allowDependencyAdding", allowDependencyDeleting: "allowDependencyDeleting", allowResourceAdding: "allowResourceAdding", allowResourceDeleting: "allowResourceDeleting", allowResourceUpdating: "allowResourceUpdating", allowTaskAdding: "allowTaskAdding", allowTaskDeleting: "allowTaskDeleting", allowTaskResourceUpdating: "allowTaskResourceUpdating", allowTaskUpdating: "allowTaskUpdating", enabled: "enabled", allowDragging: "allowDragging", allowResizing: "allowResizing", allowTimeZoneEditing: "allowTimeZoneEditing" }, outputs: { changesChange: "changesChange", editColumnNameChange: "editColumnNameChange", editRowKeyChange: "editRowKeyChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoEditingComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoEditingComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-editing',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowAdding: [{
                  type: i0.Input
              }], allowDeleting: [{
                  type: i0.Input
              }], allowUpdating: [{
                  type: i0.Input
              }], changes: [{
                  type: i0.Input
              }], confirmDelete: [{
                  type: i0.Input
              }], editColumnName: [{
                  type: i0.Input
              }], editRowKey: [{
                  type: i0.Input
              }], form: [{
                  type: i0.Input
              }], mode: [{
                  type: i0.Input
              }], newRowPosition: [{
                  type: i0.Input
              }], popup: [{
                  type: i0.Input
              }], refreshMode: [{
                  type: i0.Input
              }], selectTextOnEditStart: [{
                  type: i0.Input
              }], startEditAction: [{
                  type: i0.Input
              }], texts: [{
                  type: i0.Input
              }], useIcons: [{
                  type: i0.Input
              }], allowAddShape: [{
                  type: i0.Input
              }], allowChangeConnection: [{
                  type: i0.Input
              }], allowChangeConnectorPoints: [{
                  type: i0.Input
              }], allowChangeConnectorText: [{
                  type: i0.Input
              }], allowChangeShapeText: [{
                  type: i0.Input
              }], allowDeleteConnector: [{
                  type: i0.Input
              }], allowDeleteShape: [{
                  type: i0.Input
              }], allowMoveShape: [{
                  type: i0.Input
              }], allowResizeShape: [{
                  type: i0.Input
              }], allowDependencyAdding: [{
                  type: i0.Input
              }], allowDependencyDeleting: [{
                  type: i0.Input
              }], allowResourceAdding: [{
                  type: i0.Input
              }], allowResourceDeleting: [{
                  type: i0.Input
              }], allowResourceUpdating: [{
                  type: i0.Input
              }], allowTaskAdding: [{
                  type: i0.Input
              }], allowTaskDeleting: [{
                  type: i0.Input
              }], allowTaskResourceUpdating: [{
                  type: i0.Input
              }], allowTaskUpdating: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }], allowDragging: [{
                  type: i0.Input
              }], allowResizing: [{
                  type: i0.Input
              }], allowTimeZoneEditing: [{
                  type: i0.Input
              }], changesChange: [{
                  type: i0.Output
              }], editColumnNameChange: [{
                  type: i0.Output
              }], editRowKeyChange: [{
                  type: i0.Output
              }], changesChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiChangeComponent; })]
              }] });
  })();
  var DxoEditingModule = /** @class */ (function () {
      function DxoEditingModule() {
      }
      return DxoEditingModule;
  }());
  /** @nocollapse */ DxoEditingModule.ɵfac = function DxoEditingModule_Factory(t) { return new (t || DxoEditingModule)(); };
  /** @nocollapse */ DxoEditingModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoEditingModule });
  /** @nocollapse */ DxoEditingModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoEditingModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoEditingComponent
                      ],
                      exports: [
                          DxoEditingComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoEditingModule, { declarations: [DxoEditingComponent], exports: [DxoEditingComponent] }); })();

  var DxoExportComponent = /** @class */ (function (_super) {
      __extends(DxoExportComponent, _super);
      function DxoExportComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoExportComponent.prototype, "backgroundColor", {
          get: function () {
              return this._getOption('backgroundColor');
          },
          set: function (value) {
              this._setOption('backgroundColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoExportComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoExportComponent.prototype, "fileName", {
          get: function () {
              return this._getOption('fileName');
          },
          set: function (value) {
              this._setOption('fileName', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoExportComponent.prototype, "formats", {
          get: function () {
              return this._getOption('formats');
          },
          set: function (value) {
              this._setOption('formats', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoExportComponent.prototype, "margin", {
          get: function () {
              return this._getOption('margin');
          },
          set: function (value) {
              this._setOption('margin', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoExportComponent.prototype, "printingEnabled", {
          get: function () {
              return this._getOption('printingEnabled');
          },
          set: function (value) {
              this._setOption('printingEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoExportComponent.prototype, "svgToCanvas", {
          get: function () {
              return this._getOption('svgToCanvas');
          },
          set: function (value) {
              this._setOption('svgToCanvas', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoExportComponent.prototype, "allowExportSelectedData", {
          get: function () {
              return this._getOption('allowExportSelectedData');
          },
          set: function (value) {
              this._setOption('allowExportSelectedData', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoExportComponent.prototype, "texts", {
          get: function () {
              return this._getOption('texts');
          },
          set: function (value) {
              this._setOption('texts', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoExportComponent.prototype, "_optionPath", {
          get: function () {
              return 'export';
          },
          enumerable: false,
          configurable: true
      });
      DxoExportComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoExportComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoExportComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoExportComponent.ɵfac = function DxoExportComponent_Factory(t) { return new (t || DxoExportComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoExportComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoExportComponent, selectors: [["dxo-export"]], inputs: { backgroundColor: "backgroundColor", enabled: "enabled", fileName: "fileName", formats: "formats", margin: "margin", printingEnabled: "printingEnabled", svgToCanvas: "svgToCanvas", allowExportSelectedData: "allowExportSelectedData", texts: "texts" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoExportComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoExportComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-export',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { backgroundColor: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }], fileName: [{
                  type: i0.Input
              }], formats: [{
                  type: i0.Input
              }], margin: [{
                  type: i0.Input
              }], printingEnabled: [{
                  type: i0.Input
              }], svgToCanvas: [{
                  type: i0.Input
              }], allowExportSelectedData: [{
                  type: i0.Input
              }], texts: [{
                  type: i0.Input
              }] });
  })();
  var DxoExportModule = /** @class */ (function () {
      function DxoExportModule() {
      }
      return DxoExportModule;
  }());
  /** @nocollapse */ DxoExportModule.ɵfac = function DxoExportModule_Factory(t) { return new (t || DxoExportModule)(); };
  /** @nocollapse */ DxoExportModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoExportModule });
  /** @nocollapse */ DxoExportModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoExportModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoExportComponent
                      ],
                      exports: [
                          DxoExportComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoExportModule, { declarations: [DxoExportComponent], exports: [DxoExportComponent] }); })();

  var DxoFieldChooserComponent = /** @class */ (function (_super) {
      __extends(DxoFieldChooserComponent, _super);
      function DxoFieldChooserComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFieldChooserComponent.prototype, "allowSearch", {
          get: function () {
              return this._getOption('allowSearch');
          },
          set: function (value) {
              this._setOption('allowSearch', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldChooserComponent.prototype, "applyChangesMode", {
          get: function () {
              return this._getOption('applyChangesMode');
          },
          set: function (value) {
              this._setOption('applyChangesMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldChooserComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldChooserComponent.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldChooserComponent.prototype, "layout", {
          get: function () {
              return this._getOption('layout');
          },
          set: function (value) {
              this._setOption('layout', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldChooserComponent.prototype, "searchTimeout", {
          get: function () {
              return this._getOption('searchTimeout');
          },
          set: function (value) {
              this._setOption('searchTimeout', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldChooserComponent.prototype, "texts", {
          get: function () {
              return this._getOption('texts');
          },
          set: function (value) {
              this._setOption('texts', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldChooserComponent.prototype, "title", {
          get: function () {
              return this._getOption('title');
          },
          set: function (value) {
              this._setOption('title', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldChooserComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldChooserComponent.prototype, "_optionPath", {
          get: function () {
              return 'fieldChooser';
          },
          enumerable: false,
          configurable: true
      });
      DxoFieldChooserComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFieldChooserComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFieldChooserComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoFieldChooserComponent.ɵfac = function DxoFieldChooserComponent_Factory(t) { return new (t || DxoFieldChooserComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFieldChooserComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFieldChooserComponent, selectors: [["dxo-field-chooser"]], inputs: { allowSearch: "allowSearch", applyChangesMode: "applyChangesMode", enabled: "enabled", height: "height", layout: "layout", searchTimeout: "searchTimeout", texts: "texts", title: "title", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFieldChooserComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFieldChooserComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-field-chooser',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowSearch: [{
                  type: i0.Input
              }], applyChangesMode: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }], height: [{
                  type: i0.Input
              }], layout: [{
                  type: i0.Input
              }], searchTimeout: [{
                  type: i0.Input
              }], texts: [{
                  type: i0.Input
              }], title: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoFieldChooserModule = /** @class */ (function () {
      function DxoFieldChooserModule() {
      }
      return DxoFieldChooserModule;
  }());
  /** @nocollapse */ DxoFieldChooserModule.ɵfac = function DxoFieldChooserModule_Factory(t) { return new (t || DxoFieldChooserModule)(); };
  /** @nocollapse */ DxoFieldChooserModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFieldChooserModule });
  /** @nocollapse */ DxoFieldChooserModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFieldChooserModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFieldChooserComponent
                      ],
                      exports: [
                          DxoFieldChooserComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFieldChooserModule, { declarations: [DxoFieldChooserComponent], exports: [DxoFieldChooserComponent] }); })();

  var DxoFieldPanelComponent = /** @class */ (function (_super) {
      __extends(DxoFieldPanelComponent, _super);
      function DxoFieldPanelComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFieldPanelComponent.prototype, "allowFieldDragging", {
          get: function () {
              return this._getOption('allowFieldDragging');
          },
          set: function (value) {
              this._setOption('allowFieldDragging', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldPanelComponent.prototype, "showColumnFields", {
          get: function () {
              return this._getOption('showColumnFields');
          },
          set: function (value) {
              this._setOption('showColumnFields', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldPanelComponent.prototype, "showDataFields", {
          get: function () {
              return this._getOption('showDataFields');
          },
          set: function (value) {
              this._setOption('showDataFields', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldPanelComponent.prototype, "showFilterFields", {
          get: function () {
              return this._getOption('showFilterFields');
          },
          set: function (value) {
              this._setOption('showFilterFields', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldPanelComponent.prototype, "showRowFields", {
          get: function () {
              return this._getOption('showRowFields');
          },
          set: function (value) {
              this._setOption('showRowFields', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldPanelComponent.prototype, "texts", {
          get: function () {
              return this._getOption('texts');
          },
          set: function (value) {
              this._setOption('texts', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldPanelComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFieldPanelComponent.prototype, "_optionPath", {
          get: function () {
              return 'fieldPanel';
          },
          enumerable: false,
          configurable: true
      });
      DxoFieldPanelComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFieldPanelComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFieldPanelComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoFieldPanelComponent.ɵfac = function DxoFieldPanelComponent_Factory(t) { return new (t || DxoFieldPanelComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFieldPanelComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFieldPanelComponent, selectors: [["dxo-field-panel"]], inputs: { allowFieldDragging: "allowFieldDragging", showColumnFields: "showColumnFields", showDataFields: "showDataFields", showFilterFields: "showFilterFields", showRowFields: "showRowFields", texts: "texts", visible: "visible" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFieldPanelComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFieldPanelComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-field-panel',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowFieldDragging: [{
                  type: i0.Input
              }], showColumnFields: [{
                  type: i0.Input
              }], showDataFields: [{
                  type: i0.Input
              }], showFilterFields: [{
                  type: i0.Input
              }], showRowFields: [{
                  type: i0.Input
              }], texts: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }] });
  })();
  var DxoFieldPanelModule = /** @class */ (function () {
      function DxoFieldPanelModule() {
      }
      return DxoFieldPanelModule;
  }());
  /** @nocollapse */ DxoFieldPanelModule.ɵfac = function DxoFieldPanelModule_Factory(t) { return new (t || DxoFieldPanelModule)(); };
  /** @nocollapse */ DxoFieldPanelModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFieldPanelModule });
  /** @nocollapse */ DxoFieldPanelModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFieldPanelModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFieldPanelComponent
                      ],
                      exports: [
                          DxoFieldPanelComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFieldPanelModule, { declarations: [DxoFieldPanelComponent], exports: [DxoFieldPanelComponent] }); })();

  var DxiFileManagerToolbarItem = /** @class */ (function (_super) {
      __extends(DxiFileManagerToolbarItem, _super);
      function DxiFileManagerToolbarItem() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiFileManagerToolbarItem.prototype, "cssClass", {
          get: function () {
              return this._getOption('cssClass');
          },
          set: function (value) {
              this._setOption('cssClass', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFileManagerToolbarItem.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFileManagerToolbarItem.prototype, "icon", {
          get: function () {
              return this._getOption('icon');
          },
          set: function (value) {
              this._setOption('icon', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFileManagerToolbarItem.prototype, "locateInMenu", {
          get: function () {
              return this._getOption('locateInMenu');
          },
          set: function (value) {
              this._setOption('locateInMenu', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFileManagerToolbarItem.prototype, "location", {
          get: function () {
              return this._getOption('location');
          },
          set: function (value) {
              this._setOption('location', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFileManagerToolbarItem.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFileManagerToolbarItem.prototype, "options", {
          get: function () {
              return this._getOption('options');
          },
          set: function (value) {
              this._setOption('options', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFileManagerToolbarItem.prototype, "showText", {
          get: function () {
              return this._getOption('showText');
          },
          set: function (value) {
              this._setOption('showText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFileManagerToolbarItem.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFileManagerToolbarItem.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiFileManagerToolbarItem.prototype, "widget", {
          get: function () {
              return this._getOption('widget');
          },
          set: function (value) {
              this._setOption('widget', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiFileManagerToolbarItem;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiFileManagerToolbarItem.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiFileManagerToolbarItem_BaseFactory; return function DxiFileManagerToolbarItem_Factory(t) { return (ɵDxiFileManagerToolbarItem_BaseFactory || (ɵDxiFileManagerToolbarItem_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiFileManagerToolbarItem)))(t || DxiFileManagerToolbarItem); }; }();
  /** @nocollapse */ DxiFileManagerToolbarItem.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiFileManagerToolbarItem, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiFileManagerToolbarItem_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiFileManagerToolbarItem, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiFileSelectionItemComponent = /** @class */ (function (_super) {
      __extends(DxiFileSelectionItemComponent, _super);
      function DxiFileSelectionItemComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiFileSelectionItemComponent.prototype, "_optionPath", {
          get: function () {
              return 'fileSelectionItems';
          },
          enumerable: false,
          configurable: true
      });
      DxiFileSelectionItemComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiFileSelectionItemComponent;
  }(DxiFileManagerToolbarItem));
  /** @nocollapse */ DxiFileSelectionItemComponent.ɵfac = function DxiFileSelectionItemComponent_Factory(t) { return new (t || DxiFileSelectionItemComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiFileSelectionItemComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiFileSelectionItemComponent, selectors: [["dxi-file-selection-item"]], inputs: { cssClass: "cssClass", disabled: "disabled", icon: "icon", locateInMenu: "locateInMenu", location: "location", name: "name", options: "options", showText: "showText", text: "text", visible: "visible", widget: "widget" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiFileSelectionItemComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiFileSelectionItemComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-file-selection-item',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'cssClass',
                          'disabled',
                          'icon',
                          'locateInMenu',
                          'location',
                          'name',
                          'options',
                          'showText',
                          'text',
                          'visible',
                          'widget'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxiFileSelectionItemModule = /** @class */ (function () {
      function DxiFileSelectionItemModule() {
      }
      return DxiFileSelectionItemModule;
  }());
  /** @nocollapse */ DxiFileSelectionItemModule.ɵfac = function DxiFileSelectionItemModule_Factory(t) { return new (t || DxiFileSelectionItemModule)(); };
  /** @nocollapse */ DxiFileSelectionItemModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiFileSelectionItemModule });
  /** @nocollapse */ DxiFileSelectionItemModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiFileSelectionItemModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiFileSelectionItemComponent
                      ],
                      exports: [
                          DxiFileSelectionItemComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiFileSelectionItemModule, { declarations: [DxiFileSelectionItemComponent], exports: [DxiFileSelectionItemComponent] }); })();

  var DxoFileUploaderOptions = /** @class */ (function (_super) {
      __extends(DxoFileUploaderOptions, _super);
      function DxoFileUploaderOptions() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoFileUploaderOptions.prototype, "abortUpload", {
          get: function () {
              return this._getOption('abortUpload');
          },
          set: function (value) {
              this._setOption('abortUpload', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "accept", {
          get: function () {
              return this._getOption('accept');
          },
          set: function (value) {
              this._setOption('accept', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "accessKey", {
          get: function () {
              return this._getOption('accessKey');
          },
          set: function (value) {
              this._setOption('accessKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "activeStateEnabled", {
          get: function () {
              return this._getOption('activeStateEnabled');
          },
          set: function (value) {
              this._setOption('activeStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "allowCanceling", {
          get: function () {
              return this._getOption('allowCanceling');
          },
          set: function (value) {
              this._setOption('allowCanceling', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "allowedFileExtensions", {
          get: function () {
              return this._getOption('allowedFileExtensions');
          },
          set: function (value) {
              this._setOption('allowedFileExtensions', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "chunkSize", {
          get: function () {
              return this._getOption('chunkSize');
          },
          set: function (value) {
              this._setOption('chunkSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "dialogTrigger", {
          get: function () {
              return this._getOption('dialogTrigger');
          },
          set: function (value) {
              this._setOption('dialogTrigger', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "dropZone", {
          get: function () {
              return this._getOption('dropZone');
          },
          set: function (value) {
              this._setOption('dropZone', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "elementAttr", {
          get: function () {
              return this._getOption('elementAttr');
          },
          set: function (value) {
              this._setOption('elementAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "focusStateEnabled", {
          get: function () {
              return this._getOption('focusStateEnabled');
          },
          set: function (value) {
              this._setOption('focusStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "hint", {
          get: function () {
              return this._getOption('hint');
          },
          set: function (value) {
              this._setOption('hint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "hoverStateEnabled", {
          get: function () {
              return this._getOption('hoverStateEnabled');
          },
          set: function (value) {
              this._setOption('hoverStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "inputAttr", {
          get: function () {
              return this._getOption('inputAttr');
          },
          set: function (value) {
              this._setOption('inputAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "invalidFileExtensionMessage", {
          get: function () {
              return this._getOption('invalidFileExtensionMessage');
          },
          set: function (value) {
              this._setOption('invalidFileExtensionMessage', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "invalidMaxFileSizeMessage", {
          get: function () {
              return this._getOption('invalidMaxFileSizeMessage');
          },
          set: function (value) {
              this._setOption('invalidMaxFileSizeMessage', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "invalidMinFileSizeMessage", {
          get: function () {
              return this._getOption('invalidMinFileSizeMessage');
          },
          set: function (value) {
              this._setOption('invalidMinFileSizeMessage', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "isDirty", {
          get: function () {
              return this._getOption('isDirty');
          },
          set: function (value) {
              this._setOption('isDirty', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "isValid", {
          get: function () {
              return this._getOption('isValid');
          },
          set: function (value) {
              this._setOption('isValid', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "labelText", {
          get: function () {
              return this._getOption('labelText');
          },
          set: function (value) {
              this._setOption('labelText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "maxFileSize", {
          get: function () {
              return this._getOption('maxFileSize');
          },
          set: function (value) {
              this._setOption('maxFileSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "minFileSize", {
          get: function () {
              return this._getOption('minFileSize');
          },
          set: function (value) {
              this._setOption('minFileSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "multiple", {
          get: function () {
              return this._getOption('multiple');
          },
          set: function (value) {
              this._setOption('multiple', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onBeforeSend", {
          get: function () {
              return this._getOption('onBeforeSend');
          },
          set: function (value) {
              this._setOption('onBeforeSend', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onContentReady", {
          get: function () {
              return this._getOption('onContentReady');
          },
          set: function (value) {
              this._setOption('onContentReady', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onDisposing", {
          get: function () {
              return this._getOption('onDisposing');
          },
          set: function (value) {
              this._setOption('onDisposing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onDropZoneEnter", {
          get: function () {
              return this._getOption('onDropZoneEnter');
          },
          set: function (value) {
              this._setOption('onDropZoneEnter', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onDropZoneLeave", {
          get: function () {
              return this._getOption('onDropZoneLeave');
          },
          set: function (value) {
              this._setOption('onDropZoneLeave', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onFilesUploaded", {
          get: function () {
              return this._getOption('onFilesUploaded');
          },
          set: function (value) {
              this._setOption('onFilesUploaded', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onInitialized", {
          get: function () {
              return this._getOption('onInitialized');
          },
          set: function (value) {
              this._setOption('onInitialized', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onOptionChanged", {
          get: function () {
              return this._getOption('onOptionChanged');
          },
          set: function (value) {
              this._setOption('onOptionChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onProgress", {
          get: function () {
              return this._getOption('onProgress');
          },
          set: function (value) {
              this._setOption('onProgress', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onUploadAborted", {
          get: function () {
              return this._getOption('onUploadAborted');
          },
          set: function (value) {
              this._setOption('onUploadAborted', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onUploaded", {
          get: function () {
              return this._getOption('onUploaded');
          },
          set: function (value) {
              this._setOption('onUploaded', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onUploadError", {
          get: function () {
              return this._getOption('onUploadError');
          },
          set: function (value) {
              this._setOption('onUploadError', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onUploadStarted", {
          get: function () {
              return this._getOption('onUploadStarted');
          },
          set: function (value) {
              this._setOption('onUploadStarted', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "onValueChanged", {
          get: function () {
              return this._getOption('onValueChanged');
          },
          set: function (value) {
              this._setOption('onValueChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "progress", {
          get: function () {
              return this._getOption('progress');
          },
          set: function (value) {
              this._setOption('progress', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "readOnly", {
          get: function () {
              return this._getOption('readOnly');
          },
          set: function (value) {
              this._setOption('readOnly', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "readyToUploadMessage", {
          get: function () {
              return this._getOption('readyToUploadMessage');
          },
          set: function (value) {
              this._setOption('readyToUploadMessage', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "rtlEnabled", {
          get: function () {
              return this._getOption('rtlEnabled');
          },
          set: function (value) {
              this._setOption('rtlEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "selectButtonText", {
          get: function () {
              return this._getOption('selectButtonText');
          },
          set: function (value) {
              this._setOption('selectButtonText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "showFileList", {
          get: function () {
              return this._getOption('showFileList');
          },
          set: function (value) {
              this._setOption('showFileList', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "tabIndex", {
          get: function () {
              return this._getOption('tabIndex');
          },
          set: function (value) {
              this._setOption('tabIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "uploadAbortedMessage", {
          get: function () {
              return this._getOption('uploadAbortedMessage');
          },
          set: function (value) {
              this._setOption('uploadAbortedMessage', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "uploadButtonText", {
          get: function () {
              return this._getOption('uploadButtonText');
          },
          set: function (value) {
              this._setOption('uploadButtonText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "uploadChunk", {
          get: function () {
              return this._getOption('uploadChunk');
          },
          set: function (value) {
              this._setOption('uploadChunk', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "uploadCustomData", {
          get: function () {
              return this._getOption('uploadCustomData');
          },
          set: function (value) {
              this._setOption('uploadCustomData', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "uploadedMessage", {
          get: function () {
              return this._getOption('uploadedMessage');
          },
          set: function (value) {
              this._setOption('uploadedMessage', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "uploadFailedMessage", {
          get: function () {
              return this._getOption('uploadFailedMessage');
          },
          set: function (value) {
              this._setOption('uploadFailedMessage', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "uploadFile", {
          get: function () {
              return this._getOption('uploadFile');
          },
          set: function (value) {
              this._setOption('uploadFile', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "uploadHeaders", {
          get: function () {
              return this._getOption('uploadHeaders');
          },
          set: function (value) {
              this._setOption('uploadHeaders', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "uploadMethod", {
          get: function () {
              return this._getOption('uploadMethod');
          },
          set: function (value) {
              this._setOption('uploadMethod', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "uploadMode", {
          get: function () {
              return this._getOption('uploadMode');
          },
          set: function (value) {
              this._setOption('uploadMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "uploadUrl", {
          get: function () {
              return this._getOption('uploadUrl');
          },
          set: function (value) {
              this._setOption('uploadUrl', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "validationError", {
          get: function () {
              return this._getOption('validationError');
          },
          set: function (value) {
              this._setOption('validationError', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "validationErrors", {
          get: function () {
              return this._getOption('validationErrors');
          },
          set: function (value) {
              this._setOption('validationErrors', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "validationStatus", {
          get: function () {
              return this._getOption('validationStatus');
          },
          set: function (value) {
              this._setOption('validationStatus', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "value", {
          get: function () {
              return this._getOption('value');
          },
          set: function (value) {
              this._setOption('value', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFileUploaderOptions.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoFileUploaderOptions;
  }(i1.NestedOption));
  /** @nocollapse */ DxoFileUploaderOptions.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoFileUploaderOptions_BaseFactory; return function DxoFileUploaderOptions_Factory(t) { return (ɵDxoFileUploaderOptions_BaseFactory || (ɵDxoFileUploaderOptions_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoFileUploaderOptions)))(t || DxoFileUploaderOptions); }; }();
  /** @nocollapse */ DxoFileUploaderOptions.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFileUploaderOptions, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFileUploaderOptions_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFileUploaderOptions, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoFileUploaderOptionsComponent = /** @class */ (function (_super) {
      __extends(DxoFileUploaderOptionsComponent, _super);
      function DxoFileUploaderOptionsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'valueChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFileUploaderOptionsComponent.prototype, "_optionPath", {
          get: function () {
              return 'fileUploaderOptions';
          },
          enumerable: false,
          configurable: true
      });
      DxoFileUploaderOptionsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFileUploaderOptionsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFileUploaderOptionsComponent;
  }(DxoFileUploaderOptions));
  /** @nocollapse */ DxoFileUploaderOptionsComponent.ɵfac = function DxoFileUploaderOptionsComponent_Factory(t) { return new (t || DxoFileUploaderOptionsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFileUploaderOptionsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFileUploaderOptionsComponent, selectors: [["dxo-file-uploader-options"]], inputs: { abortUpload: "abortUpload", accept: "accept", accessKey: "accessKey", activeStateEnabled: "activeStateEnabled", allowCanceling: "allowCanceling", allowedFileExtensions: "allowedFileExtensions", chunkSize: "chunkSize", dialogTrigger: "dialogTrigger", disabled: "disabled", dropZone: "dropZone", elementAttr: "elementAttr", focusStateEnabled: "focusStateEnabled", height: "height", hint: "hint", hoverStateEnabled: "hoverStateEnabled", inputAttr: "inputAttr", invalidFileExtensionMessage: "invalidFileExtensionMessage", invalidMaxFileSizeMessage: "invalidMaxFileSizeMessage", invalidMinFileSizeMessage: "invalidMinFileSizeMessage", isDirty: "isDirty", isValid: "isValid", labelText: "labelText", maxFileSize: "maxFileSize", minFileSize: "minFileSize", multiple: "multiple", name: "name", onBeforeSend: "onBeforeSend", onContentReady: "onContentReady", onDisposing: "onDisposing", onDropZoneEnter: "onDropZoneEnter", onDropZoneLeave: "onDropZoneLeave", onFilesUploaded: "onFilesUploaded", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", onProgress: "onProgress", onUploadAborted: "onUploadAborted", onUploaded: "onUploaded", onUploadError: "onUploadError", onUploadStarted: "onUploadStarted", onValueChanged: "onValueChanged", progress: "progress", readOnly: "readOnly", readyToUploadMessage: "readyToUploadMessage", rtlEnabled: "rtlEnabled", selectButtonText: "selectButtonText", showFileList: "showFileList", tabIndex: "tabIndex", uploadAbortedMessage: "uploadAbortedMessage", uploadButtonText: "uploadButtonText", uploadChunk: "uploadChunk", uploadCustomData: "uploadCustomData", uploadedMessage: "uploadedMessage", uploadFailedMessage: "uploadFailedMessage", uploadFile: "uploadFile", uploadHeaders: "uploadHeaders", uploadMethod: "uploadMethod", uploadMode: "uploadMode", uploadUrl: "uploadUrl", validationError: "validationError", validationErrors: "validationErrors", validationStatus: "validationStatus", value: "value", visible: "visible", width: "width" }, outputs: { valueChange: "valueChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFileUploaderOptionsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFileUploaderOptionsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-file-uploader-options',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'abortUpload',
                          'accept',
                          'accessKey',
                          'activeStateEnabled',
                          'allowCanceling',
                          'allowedFileExtensions',
                          'chunkSize',
                          'dialogTrigger',
                          'disabled',
                          'dropZone',
                          'elementAttr',
                          'focusStateEnabled',
                          'height',
                          'hint',
                          'hoverStateEnabled',
                          'inputAttr',
                          'invalidFileExtensionMessage',
                          'invalidMaxFileSizeMessage',
                          'invalidMinFileSizeMessage',
                          'isDirty',
                          'isValid',
                          'labelText',
                          'maxFileSize',
                          'minFileSize',
                          'multiple',
                          'name',
                          'onBeforeSend',
                          'onContentReady',
                          'onDisposing',
                          'onDropZoneEnter',
                          'onDropZoneLeave',
                          'onFilesUploaded',
                          'onInitialized',
                          'onOptionChanged',
                          'onProgress',
                          'onUploadAborted',
                          'onUploaded',
                          'onUploadError',
                          'onUploadStarted',
                          'onValueChanged',
                          'progress',
                          'readOnly',
                          'readyToUploadMessage',
                          'rtlEnabled',
                          'selectButtonText',
                          'showFileList',
                          'tabIndex',
                          'uploadAbortedMessage',
                          'uploadButtonText',
                          'uploadChunk',
                          'uploadCustomData',
                          'uploadedMessage',
                          'uploadFailedMessage',
                          'uploadFile',
                          'uploadHeaders',
                          'uploadMethod',
                          'uploadMode',
                          'uploadUrl',
                          'validationError',
                          'validationErrors',
                          'validationStatus',
                          'value',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { valueChange: [{
                  type: i0.Output
              }] });
  })();
  var DxoFileUploaderOptionsModule = /** @class */ (function () {
      function DxoFileUploaderOptionsModule() {
      }
      return DxoFileUploaderOptionsModule;
  }());
  /** @nocollapse */ DxoFileUploaderOptionsModule.ɵfac = function DxoFileUploaderOptionsModule_Factory(t) { return new (t || DxoFileUploaderOptionsModule)(); };
  /** @nocollapse */ DxoFileUploaderOptionsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFileUploaderOptionsModule });
  /** @nocollapse */ DxoFileUploaderOptionsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFileUploaderOptionsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFileUploaderOptionsComponent
                      ],
                      exports: [
                          DxoFileUploaderOptionsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFileUploaderOptionsModule, { declarations: [DxoFileUploaderOptionsComponent], exports: [DxoFileUploaderOptionsComponent] }); })();

  var DxoFilterBuilderPopupComponent = /** @class */ (function (_super) {
      __extends(DxoFilterBuilderPopupComponent, _super);
      function DxoFilterBuilderPopupComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'heightChange' },
              { emit: 'positionChange' },
              { emit: 'visibleChange' },
              { emit: 'widthChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFilterBuilderPopupComponent.prototype, "_optionPath", {
          get: function () {
              return 'filterBuilderPopup';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderPopupComponent.prototype, "toolbarItemsChildren", {
          get: function () {
              return this._getOption('toolbarItems');
          },
          set: function (value) {
              this.setChildren('toolbarItems', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoFilterBuilderPopupComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFilterBuilderPopupComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFilterBuilderPopupComponent;
  }(DxoPopupOptions));
  /** @nocollapse */ DxoFilterBuilderPopupComponent.ɵfac = function DxoFilterBuilderPopupComponent_Factory(t) { return new (t || DxoFilterBuilderPopupComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFilterBuilderPopupComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFilterBuilderPopupComponent, selectors: [["dxo-filter-builder-popup"]], contentQueries: function DxoFilterBuilderPopupComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiToolbarItemComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.toolbarItemsChildren = _t);
          }
      }, inputs: { accessKey: "accessKey", animation: "animation", closeOnOutsideClick: "closeOnOutsideClick", container: "container", contentTemplate: "contentTemplate", copyRootClassesToWrapper: "copyRootClassesToWrapper", deferRendering: "deferRendering", disabled: "disabled", dragAndResizeArea: "dragAndResizeArea", dragEnabled: "dragEnabled", dragOutsideBoundary: "dragOutsideBoundary", elementAttr: "elementAttr", enableBodyScroll: "enableBodyScroll", focusStateEnabled: "focusStateEnabled", fullScreen: "fullScreen", height: "height", hideOnOutsideClick: "hideOnOutsideClick", hideOnParentScroll: "hideOnParentScroll", hint: "hint", hoverStateEnabled: "hoverStateEnabled", maxHeight: "maxHeight", maxWidth: "maxWidth", minHeight: "minHeight", minWidth: "minWidth", onContentReady: "onContentReady", onDisposing: "onDisposing", onHidden: "onHidden", onHiding: "onHiding", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", onResize: "onResize", onResizeEnd: "onResizeEnd", onResizeStart: "onResizeStart", onShowing: "onShowing", onShown: "onShown", onTitleRendered: "onTitleRendered", position: "position", resizeEnabled: "resizeEnabled", restorePosition: "restorePosition", rtlEnabled: "rtlEnabled", shading: "shading", shadingColor: "shadingColor", showCloseButton: "showCloseButton", showTitle: "showTitle", tabIndex: "tabIndex", title: "title", titleTemplate: "titleTemplate", toolbarItems: "toolbarItems", visible: "visible", width: "width", wrapperAttr: "wrapperAttr" }, outputs: { heightChange: "heightChange", positionChange: "positionChange", visibleChange: "visibleChange", widthChange: "widthChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFilterBuilderPopupComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFilterBuilderPopupComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-filter-builder-popup',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'accessKey',
                          'animation',
                          'closeOnOutsideClick',
                          'container',
                          'contentTemplate',
                          'copyRootClassesToWrapper',
                          'deferRendering',
                          'disabled',
                          'dragAndResizeArea',
                          'dragEnabled',
                          'dragOutsideBoundary',
                          'elementAttr',
                          'enableBodyScroll',
                          'focusStateEnabled',
                          'fullScreen',
                          'height',
                          'hideOnOutsideClick',
                          'hideOnParentScroll',
                          'hint',
                          'hoverStateEnabled',
                          'maxHeight',
                          'maxWidth',
                          'minHeight',
                          'minWidth',
                          'onContentReady',
                          'onDisposing',
                          'onHidden',
                          'onHiding',
                          'onInitialized',
                          'onOptionChanged',
                          'onResize',
                          'onResizeEnd',
                          'onResizeStart',
                          'onShowing',
                          'onShown',
                          'onTitleRendered',
                          'position',
                          'resizeEnabled',
                          'restorePosition',
                          'rtlEnabled',
                          'shading',
                          'shadingColor',
                          'showCloseButton',
                          'showTitle',
                          'tabIndex',
                          'title',
                          'titleTemplate',
                          'toolbarItems',
                          'visible',
                          'width',
                          'wrapperAttr'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { heightChange: [{
                  type: i0.Output
              }], positionChange: [{
                  type: i0.Output
              }], visibleChange: [{
                  type: i0.Output
              }], widthChange: [{
                  type: i0.Output
              }], toolbarItemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiToolbarItemComponent; })]
              }] });
  })();
  var DxoFilterBuilderPopupModule = /** @class */ (function () {
      function DxoFilterBuilderPopupModule() {
      }
      return DxoFilterBuilderPopupModule;
  }());
  /** @nocollapse */ DxoFilterBuilderPopupModule.ɵfac = function DxoFilterBuilderPopupModule_Factory(t) { return new (t || DxoFilterBuilderPopupModule)(); };
  /** @nocollapse */ DxoFilterBuilderPopupModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFilterBuilderPopupModule });
  /** @nocollapse */ DxoFilterBuilderPopupModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFilterBuilderPopupModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFilterBuilderPopupComponent
                      ],
                      exports: [
                          DxoFilterBuilderPopupComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFilterBuilderPopupModule, { declarations: [DxoFilterBuilderPopupComponent], exports: [DxoFilterBuilderPopupComponent] }); })();

  var DxoFilterBuilderOptions = /** @class */ (function (_super) {
      __extends(DxoFilterBuilderOptions, _super);
      function DxoFilterBuilderOptions() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "accessKey", {
          get: function () {
              return this._getOption('accessKey');
          },
          set: function (value) {
              this._setOption('accessKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "activeStateEnabled", {
          get: function () {
              return this._getOption('activeStateEnabled');
          },
          set: function (value) {
              this._setOption('activeStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "allowHierarchicalFields", {
          get: function () {
              return this._getOption('allowHierarchicalFields');
          },
          set: function (value) {
              this._setOption('allowHierarchicalFields', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "customOperations", {
          get: function () {
              return this._getOption('customOperations');
          },
          set: function (value) {
              this._setOption('customOperations', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "elementAttr", {
          get: function () {
              return this._getOption('elementAttr');
          },
          set: function (value) {
              this._setOption('elementAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "fields", {
          get: function () {
              return this._getOption('fields');
          },
          set: function (value) {
              this._setOption('fields', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "filterOperationDescriptions", {
          get: function () {
              return this._getOption('filterOperationDescriptions');
          },
          set: function (value) {
              this._setOption('filterOperationDescriptions', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "focusStateEnabled", {
          get: function () {
              return this._getOption('focusStateEnabled');
          },
          set: function (value) {
              this._setOption('focusStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "groupOperationDescriptions", {
          get: function () {
              return this._getOption('groupOperationDescriptions');
          },
          set: function (value) {
              this._setOption('groupOperationDescriptions', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "groupOperations", {
          get: function () {
              return this._getOption('groupOperations');
          },
          set: function (value) {
              this._setOption('groupOperations', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "hint", {
          get: function () {
              return this._getOption('hint');
          },
          set: function (value) {
              this._setOption('hint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "hoverStateEnabled", {
          get: function () {
              return this._getOption('hoverStateEnabled');
          },
          set: function (value) {
              this._setOption('hoverStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "maxGroupLevel", {
          get: function () {
              return this._getOption('maxGroupLevel');
          },
          set: function (value) {
              this._setOption('maxGroupLevel', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "onContentReady", {
          get: function () {
              return this._getOption('onContentReady');
          },
          set: function (value) {
              this._setOption('onContentReady', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "onDisposing", {
          get: function () {
              return this._getOption('onDisposing');
          },
          set: function (value) {
              this._setOption('onDisposing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "onEditorPrepared", {
          get: function () {
              return this._getOption('onEditorPrepared');
          },
          set: function (value) {
              this._setOption('onEditorPrepared', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "onEditorPreparing", {
          get: function () {
              return this._getOption('onEditorPreparing');
          },
          set: function (value) {
              this._setOption('onEditorPreparing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "onInitialized", {
          get: function () {
              return this._getOption('onInitialized');
          },
          set: function (value) {
              this._setOption('onInitialized', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "onOptionChanged", {
          get: function () {
              return this._getOption('onOptionChanged');
          },
          set: function (value) {
              this._setOption('onOptionChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "onValueChanged", {
          get: function () {
              return this._getOption('onValueChanged');
          },
          set: function (value) {
              this._setOption('onValueChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "rtlEnabled", {
          get: function () {
              return this._getOption('rtlEnabled');
          },
          set: function (value) {
              this._setOption('rtlEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "tabIndex", {
          get: function () {
              return this._getOption('tabIndex');
          },
          set: function (value) {
              this._setOption('tabIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "value", {
          get: function () {
              return this._getOption('value');
          },
          set: function (value) {
              this._setOption('value', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderOptions.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoFilterBuilderOptions;
  }(i1.NestedOption));
  /** @nocollapse */ DxoFilterBuilderOptions.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoFilterBuilderOptions_BaseFactory; return function DxoFilterBuilderOptions_Factory(t) { return (ɵDxoFilterBuilderOptions_BaseFactory || (ɵDxoFilterBuilderOptions_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoFilterBuilderOptions)))(t || DxoFilterBuilderOptions); }; }();
  /** @nocollapse */ DxoFilterBuilderOptions.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFilterBuilderOptions, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFilterBuilderOptions_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFilterBuilderOptions, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoFilterBuilderComponent = /** @class */ (function (_super) {
      __extends(DxoFilterBuilderComponent, _super);
      function DxoFilterBuilderComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'valueChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFilterBuilderComponent.prototype, "_optionPath", {
          get: function () {
              return 'filterBuilder';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderComponent.prototype, "customOperationsChildren", {
          get: function () {
              return this._getOption('customOperations');
          },
          set: function (value) {
              this.setChildren('customOperations', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterBuilderComponent.prototype, "fieldsChildren", {
          get: function () {
              return this._getOption('fields');
          },
          set: function (value) {
              this.setChildren('fields', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoFilterBuilderComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFilterBuilderComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFilterBuilderComponent;
  }(DxoFilterBuilderOptions));
  /** @nocollapse */ DxoFilterBuilderComponent.ɵfac = function DxoFilterBuilderComponent_Factory(t) { return new (t || DxoFilterBuilderComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFilterBuilderComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFilterBuilderComponent, selectors: [["dxo-filter-builder"]], contentQueries: function DxoFilterBuilderComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiCustomOperationComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiFieldComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.customOperationsChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.fieldsChildren = _t);
          }
      }, inputs: { accessKey: "accessKey", activeStateEnabled: "activeStateEnabled", allowHierarchicalFields: "allowHierarchicalFields", customOperations: "customOperations", disabled: "disabled", elementAttr: "elementAttr", fields: "fields", filterOperationDescriptions: "filterOperationDescriptions", focusStateEnabled: "focusStateEnabled", groupOperationDescriptions: "groupOperationDescriptions", groupOperations: "groupOperations", height: "height", hint: "hint", hoverStateEnabled: "hoverStateEnabled", maxGroupLevel: "maxGroupLevel", onContentReady: "onContentReady", onDisposing: "onDisposing", onEditorPrepared: "onEditorPrepared", onEditorPreparing: "onEditorPreparing", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", onValueChanged: "onValueChanged", rtlEnabled: "rtlEnabled", tabIndex: "tabIndex", value: "value", visible: "visible", width: "width" }, outputs: { valueChange: "valueChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFilterBuilderComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFilterBuilderComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-filter-builder',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'accessKey',
                          'activeStateEnabled',
                          'allowHierarchicalFields',
                          'customOperations',
                          'disabled',
                          'elementAttr',
                          'fields',
                          'filterOperationDescriptions',
                          'focusStateEnabled',
                          'groupOperationDescriptions',
                          'groupOperations',
                          'height',
                          'hint',
                          'hoverStateEnabled',
                          'maxGroupLevel',
                          'onContentReady',
                          'onDisposing',
                          'onEditorPrepared',
                          'onEditorPreparing',
                          'onInitialized',
                          'onOptionChanged',
                          'onValueChanged',
                          'rtlEnabled',
                          'tabIndex',
                          'value',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { valueChange: [{
                  type: i0.Output
              }], customOperationsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiCustomOperationComponent; })]
              }], fieldsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiFieldComponent; })]
              }] });
  })();
  var DxoFilterBuilderModule = /** @class */ (function () {
      function DxoFilterBuilderModule() {
      }
      return DxoFilterBuilderModule;
  }());
  /** @nocollapse */ DxoFilterBuilderModule.ɵfac = function DxoFilterBuilderModule_Factory(t) { return new (t || DxoFilterBuilderModule)(); };
  /** @nocollapse */ DxoFilterBuilderModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFilterBuilderModule });
  /** @nocollapse */ DxoFilterBuilderModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFilterBuilderModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFilterBuilderComponent
                      ],
                      exports: [
                          DxoFilterBuilderComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFilterBuilderModule, { declarations: [DxoFilterBuilderComponent], exports: [DxoFilterBuilderComponent] }); })();

  var DxoFilterOperationDescriptionsComponent = /** @class */ (function (_super) {
      __extends(DxoFilterOperationDescriptionsComponent, _super);
      function DxoFilterOperationDescriptionsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "between", {
          get: function () {
              return this._getOption('between');
          },
          set: function (value) {
              this._setOption('between', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "contains", {
          get: function () {
              return this._getOption('contains');
          },
          set: function (value) {
              this._setOption('contains', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "endsWith", {
          get: function () {
              return this._getOption('endsWith');
          },
          set: function (value) {
              this._setOption('endsWith', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "equal", {
          get: function () {
              return this._getOption('equal');
          },
          set: function (value) {
              this._setOption('equal', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "greaterThan", {
          get: function () {
              return this._getOption('greaterThan');
          },
          set: function (value) {
              this._setOption('greaterThan', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "greaterThanOrEqual", {
          get: function () {
              return this._getOption('greaterThanOrEqual');
          },
          set: function (value) {
              this._setOption('greaterThanOrEqual', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "isBlank", {
          get: function () {
              return this._getOption('isBlank');
          },
          set: function (value) {
              this._setOption('isBlank', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "isNotBlank", {
          get: function () {
              return this._getOption('isNotBlank');
          },
          set: function (value) {
              this._setOption('isNotBlank', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "lessThan", {
          get: function () {
              return this._getOption('lessThan');
          },
          set: function (value) {
              this._setOption('lessThan', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "lessThanOrEqual", {
          get: function () {
              return this._getOption('lessThanOrEqual');
          },
          set: function (value) {
              this._setOption('lessThanOrEqual', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "notContains", {
          get: function () {
              return this._getOption('notContains');
          },
          set: function (value) {
              this._setOption('notContains', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "notEqual", {
          get: function () {
              return this._getOption('notEqual');
          },
          set: function (value) {
              this._setOption('notEqual', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "startsWith", {
          get: function () {
              return this._getOption('startsWith');
          },
          set: function (value) {
              this._setOption('startsWith', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "_optionPath", {
          get: function () {
              return 'filterOperationDescriptions';
          },
          enumerable: false,
          configurable: true
      });
      DxoFilterOperationDescriptionsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFilterOperationDescriptionsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFilterOperationDescriptionsComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoFilterOperationDescriptionsComponent.ɵfac = function DxoFilterOperationDescriptionsComponent_Factory(t) { return new (t || DxoFilterOperationDescriptionsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFilterOperationDescriptionsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFilterOperationDescriptionsComponent, selectors: [["dxo-filter-operation-descriptions"]], inputs: { between: "between", contains: "contains", endsWith: "endsWith", equal: "equal", greaterThan: "greaterThan", greaterThanOrEqual: "greaterThanOrEqual", isBlank: "isBlank", isNotBlank: "isNotBlank", lessThan: "lessThan", lessThanOrEqual: "lessThanOrEqual", notContains: "notContains", notEqual: "notEqual", startsWith: "startsWith" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFilterOperationDescriptionsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFilterOperationDescriptionsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-filter-operation-descriptions',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { between: [{
                  type: i0.Input
              }], contains: [{
                  type: i0.Input
              }], endsWith: [{
                  type: i0.Input
              }], equal: [{
                  type: i0.Input
              }], greaterThan: [{
                  type: i0.Input
              }], greaterThanOrEqual: [{
                  type: i0.Input
              }], isBlank: [{
                  type: i0.Input
              }], isNotBlank: [{
                  type: i0.Input
              }], lessThan: [{
                  type: i0.Input
              }], lessThanOrEqual: [{
                  type: i0.Input
              }], notContains: [{
                  type: i0.Input
              }], notEqual: [{
                  type: i0.Input
              }], startsWith: [{
                  type: i0.Input
              }] });
  })();
  var DxoFilterOperationDescriptionsModule = /** @class */ (function () {
      function DxoFilterOperationDescriptionsModule() {
      }
      return DxoFilterOperationDescriptionsModule;
  }());
  /** @nocollapse */ DxoFilterOperationDescriptionsModule.ɵfac = function DxoFilterOperationDescriptionsModule_Factory(t) { return new (t || DxoFilterOperationDescriptionsModule)(); };
  /** @nocollapse */ DxoFilterOperationDescriptionsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFilterOperationDescriptionsModule });
  /** @nocollapse */ DxoFilterOperationDescriptionsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFilterOperationDescriptionsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFilterOperationDescriptionsComponent
                      ],
                      exports: [
                          DxoFilterOperationDescriptionsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFilterOperationDescriptionsModule, { declarations: [DxoFilterOperationDescriptionsComponent], exports: [DxoFilterOperationDescriptionsComponent] }); })();

  var DxoFilterPanelComponent = /** @class */ (function (_super) {
      __extends(DxoFilterPanelComponent, _super);
      function DxoFilterPanelComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'filterEnabledChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFilterPanelComponent.prototype, "customizeText", {
          get: function () {
              return this._getOption('customizeText');
          },
          set: function (value) {
              this._setOption('customizeText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterPanelComponent.prototype, "filterEnabled", {
          get: function () {
              return this._getOption('filterEnabled');
          },
          set: function (value) {
              this._setOption('filterEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterPanelComponent.prototype, "texts", {
          get: function () {
              return this._getOption('texts');
          },
          set: function (value) {
              this._setOption('texts', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterPanelComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFilterPanelComponent.prototype, "_optionPath", {
          get: function () {
              return 'filterPanel';
          },
          enumerable: false,
          configurable: true
      });
      DxoFilterPanelComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFilterPanelComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFilterPanelComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoFilterPanelComponent.ɵfac = function DxoFilterPanelComponent_Factory(t) { return new (t || DxoFilterPanelComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFilterPanelComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFilterPanelComponent, selectors: [["dxo-filter-panel"]], inputs: { customizeText: "customizeText", filterEnabled: "filterEnabled", texts: "texts", visible: "visible" }, outputs: { filterEnabledChange: "filterEnabledChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFilterPanelComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFilterPanelComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-filter-panel',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { customizeText: [{
                  type: i0.Input
              }], filterEnabled: [{
                  type: i0.Input
              }], texts: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], filterEnabledChange: [{
                  type: i0.Output
              }] });
  })();
  var DxoFilterPanelModule = /** @class */ (function () {
      function DxoFilterPanelModule() {
      }
      return DxoFilterPanelModule;
  }());
  /** @nocollapse */ DxoFilterPanelModule.ɵfac = function DxoFilterPanelModule_Factory(t) { return new (t || DxoFilterPanelModule)(); };
  /** @nocollapse */ DxoFilterPanelModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFilterPanelModule });
  /** @nocollapse */ DxoFilterPanelModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFilterPanelModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFilterPanelComponent
                      ],
                      exports: [
                          DxoFilterPanelComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFilterPanelModule, { declarations: [DxoFilterPanelComponent], exports: [DxoFilterPanelComponent] }); })();

  var DxoGanttFilterRow = /** @class */ (function (_super) {
      __extends(DxoGanttFilterRow, _super);
      function DxoGanttFilterRow() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoGanttFilterRow.prototype, "applyFilter", {
          get: function () {
              return this._getOption('applyFilter');
          },
          set: function (value) {
              this._setOption('applyFilter', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRow.prototype, "applyFilterText", {
          get: function () {
              return this._getOption('applyFilterText');
          },
          set: function (value) {
              this._setOption('applyFilterText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRow.prototype, "betweenEndText", {
          get: function () {
              return this._getOption('betweenEndText');
          },
          set: function (value) {
              this._setOption('betweenEndText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRow.prototype, "betweenStartText", {
          get: function () {
              return this._getOption('betweenStartText');
          },
          set: function (value) {
              this._setOption('betweenStartText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRow.prototype, "operationDescriptions", {
          get: function () {
              return this._getOption('operationDescriptions');
          },
          set: function (value) {
              this._setOption('operationDescriptions', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRow.prototype, "resetOperationText", {
          get: function () {
              return this._getOption('resetOperationText');
          },
          set: function (value) {
              this._setOption('resetOperationText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRow.prototype, "showAllText", {
          get: function () {
              return this._getOption('showAllText');
          },
          set: function (value) {
              this._setOption('showAllText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRow.prototype, "showOperationChooser", {
          get: function () {
              return this._getOption('showOperationChooser');
          },
          set: function (value) {
              this._setOption('showOperationChooser', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRow.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoGanttFilterRow;
  }(i1.NestedOption));
  /** @nocollapse */ DxoGanttFilterRow.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoGanttFilterRow_BaseFactory; return function DxoGanttFilterRow_Factory(t) { return (ɵDxoGanttFilterRow_BaseFactory || (ɵDxoGanttFilterRow_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoGanttFilterRow)))(t || DxoGanttFilterRow); }; }();
  /** @nocollapse */ DxoGanttFilterRow.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoGanttFilterRow, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoGanttFilterRow_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGanttFilterRow, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoFilterRowComponent = /** @class */ (function (_super) {
      __extends(DxoFilterRowComponent, _super);
      function DxoFilterRowComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFilterRowComponent.prototype, "_optionPath", {
          get: function () {
              return 'filterRow';
          },
          enumerable: false,
          configurable: true
      });
      DxoFilterRowComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFilterRowComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFilterRowComponent;
  }(DxoGanttFilterRow));
  /** @nocollapse */ DxoFilterRowComponent.ɵfac = function DxoFilterRowComponent_Factory(t) { return new (t || DxoFilterRowComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFilterRowComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFilterRowComponent, selectors: [["dxo-filter-row"]], inputs: { applyFilter: "applyFilter", applyFilterText: "applyFilterText", betweenEndText: "betweenEndText", betweenStartText: "betweenStartText", operationDescriptions: "operationDescriptions", resetOperationText: "resetOperationText", showAllText: "showAllText", showOperationChooser: "showOperationChooser", visible: "visible" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFilterRowComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFilterRowComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-filter-row',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'applyFilter',
                          'applyFilterText',
                          'betweenEndText',
                          'betweenStartText',
                          'operationDescriptions',
                          'resetOperationText',
                          'showAllText',
                          'showOperationChooser',
                          'visible'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoFilterRowModule = /** @class */ (function () {
      function DxoFilterRowModule() {
      }
      return DxoFilterRowModule;
  }());
  /** @nocollapse */ DxoFilterRowModule.ɵfac = function DxoFilterRowModule_Factory(t) { return new (t || DxoFilterRowModule)(); };
  /** @nocollapse */ DxoFilterRowModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFilterRowModule });
  /** @nocollapse */ DxoFilterRowModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFilterRowModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFilterRowComponent
                      ],
                      exports: [
                          DxoFilterRowComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFilterRowModule, { declarations: [DxoFilterRowComponent], exports: [DxoFilterRowComponent] }); })();

  var DxoVizFont = /** @class */ (function (_super) {
      __extends(DxoVizFont, _super);
      function DxoVizFont() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoVizFont.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoVizFont.prototype, "family", {
          get: function () {
              return this._getOption('family');
          },
          set: function (value) {
              this._setOption('family', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoVizFont.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoVizFont.prototype, "size", {
          get: function () {
              return this._getOption('size');
          },
          set: function (value) {
              this._setOption('size', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoVizFont.prototype, "weight", {
          get: function () {
              return this._getOption('weight');
          },
          set: function (value) {
              this._setOption('weight', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoVizFont;
  }(i1.NestedOption));
  /** @nocollapse */ DxoVizFont.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoVizFont_BaseFactory; return function DxoVizFont_Factory(t) { return (ɵDxoVizFont_BaseFactory || (ɵDxoVizFont_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoVizFont)))(t || DxoVizFont); }; }();
  /** @nocollapse */ DxoVizFont.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoVizFont, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoVizFont_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoVizFont, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoFontComponent = /** @class */ (function (_super) {
      __extends(DxoFontComponent, _super);
      function DxoFontComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFontComponent.prototype, "_optionPath", {
          get: function () {
              return 'font';
          },
          enumerable: false,
          configurable: true
      });
      DxoFontComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFontComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFontComponent;
  }(DxoVizFont));
  /** @nocollapse */ DxoFontComponent.ɵfac = function DxoFontComponent_Factory(t) { return new (t || DxoFontComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFontComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFontComponent, selectors: [["dxo-font"]], inputs: { color: "color", family: "family", opacity: "opacity", size: "size", weight: "weight" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFontComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFontComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-font',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'color',
                          'family',
                          'opacity',
                          'size',
                          'weight'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoFontModule = /** @class */ (function () {
      function DxoFontModule() {
      }
      return DxoFontModule;
  }());
  /** @nocollapse */ DxoFontModule.ɵfac = function DxoFontModule_Factory(t) { return new (t || DxoFontModule)(); };
  /** @nocollapse */ DxoFontModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFontModule });
  /** @nocollapse */ DxoFontModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFontModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFontComponent
                      ],
                      exports: [
                          DxoFontComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFontModule, { declarations: [DxoFontComponent], exports: [DxoFontComponent] }); })();

  var DxoFormSimpleItem = /** @class */ (function (_super) {
      __extends(DxoFormSimpleItem, _super);
      function DxoFormSimpleItem() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoFormSimpleItem.prototype, "colSpan", {
          get: function () {
              return this._getOption('colSpan');
          },
          set: function (value) {
              this._setOption('colSpan', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormSimpleItem.prototype, "cssClass", {
          get: function () {
              return this._getOption('cssClass');
          },
          set: function (value) {
              this._setOption('cssClass', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormSimpleItem.prototype, "dataField", {
          get: function () {
              return this._getOption('dataField');
          },
          set: function (value) {
              this._setOption('dataField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormSimpleItem.prototype, "editorOptions", {
          get: function () {
              return this._getOption('editorOptions');
          },
          set: function (value) {
              this._setOption('editorOptions', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormSimpleItem.prototype, "editorType", {
          get: function () {
              return this._getOption('editorType');
          },
          set: function (value) {
              this._setOption('editorType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormSimpleItem.prototype, "helpText", {
          get: function () {
              return this._getOption('helpText');
          },
          set: function (value) {
              this._setOption('helpText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormSimpleItem.prototype, "isRequired", {
          get: function () {
              return this._getOption('isRequired');
          },
          set: function (value) {
              this._setOption('isRequired', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormSimpleItem.prototype, "itemType", {
          get: function () {
              return this._getOption('itemType');
          },
          set: function (value) {
              this._setOption('itemType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormSimpleItem.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormSimpleItem.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormSimpleItem.prototype, "template", {
          get: function () {
              return this._getOption('template');
          },
          set: function (value) {
              this._setOption('template', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormSimpleItem.prototype, "validationRules", {
          get: function () {
              return this._getOption('validationRules');
          },
          set: function (value) {
              this._setOption('validationRules', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormSimpleItem.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormSimpleItem.prototype, "visibleIndex", {
          get: function () {
              return this._getOption('visibleIndex');
          },
          set: function (value) {
              this._setOption('visibleIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoFormSimpleItem;
  }(i1.NestedOption));
  /** @nocollapse */ DxoFormSimpleItem.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoFormSimpleItem_BaseFactory; return function DxoFormSimpleItem_Factory(t) { return (ɵDxoFormSimpleItem_BaseFactory || (ɵDxoFormSimpleItem_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoFormSimpleItem)))(t || DxoFormSimpleItem); }; }();
  /** @nocollapse */ DxoFormSimpleItem.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFormSimpleItem, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFormSimpleItem_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFormSimpleItem, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoFormItemComponent = /** @class */ (function (_super) {
      __extends(DxoFormItemComponent, _super);
      function DxoFormItemComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFormItemComponent.prototype, "_optionPath", {
          get: function () {
              return 'formItem';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormItemComponent.prototype, "validationRulesChildren", {
          get: function () {
              return this._getOption('validationRules');
          },
          set: function (value) {
              this.setChildren('validationRules', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoFormItemComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFormItemComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFormItemComponent;
  }(DxoFormSimpleItem));
  /** @nocollapse */ DxoFormItemComponent.ɵfac = function DxoFormItemComponent_Factory(t) { return new (t || DxoFormItemComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFormItemComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFormItemComponent, selectors: [["dxo-form-item"]], contentQueries: function DxoFormItemComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiValidationRuleComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.validationRulesChildren = _t);
          }
      }, inputs: { colSpan: "colSpan", cssClass: "cssClass", dataField: "dataField", editorOptions: "editorOptions", editorType: "editorType", helpText: "helpText", isRequired: "isRequired", itemType: "itemType", label: "label", name: "name", template: "template", validationRules: "validationRules", visible: "visible", visibleIndex: "visibleIndex" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFormItemComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFormItemComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-form-item',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'colSpan',
                          'cssClass',
                          'dataField',
                          'editorOptions',
                          'editorType',
                          'helpText',
                          'isRequired',
                          'itemType',
                          'label',
                          'name',
                          'template',
                          'validationRules',
                          'visible',
                          'visibleIndex'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { validationRulesChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiValidationRuleComponent; })]
              }] });
  })();
  var DxoFormItemModule = /** @class */ (function () {
      function DxoFormItemModule() {
      }
      return DxoFormItemModule;
  }());
  /** @nocollapse */ DxoFormItemModule.ɵfac = function DxoFormItemModule_Factory(t) { return new (t || DxoFormItemModule)(); };
  /** @nocollapse */ DxoFormItemModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFormItemModule });
  /** @nocollapse */ DxoFormItemModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFormItemModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFormItemComponent
                      ],
                      exports: [
                          DxoFormItemComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFormItemModule, { declarations: [DxoFormItemComponent], exports: [DxoFormItemComponent] }); })();

  var DxoFormOptions = /** @class */ (function (_super) {
      __extends(DxoFormOptions, _super);
      function DxoFormOptions() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoFormOptions.prototype, "accessKey", {
          get: function () {
              return this._getOption('accessKey');
          },
          set: function (value) {
              this._setOption('accessKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "activeStateEnabled", {
          get: function () {
              return this._getOption('activeStateEnabled');
          },
          set: function (value) {
              this._setOption('activeStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "alignItemLabels", {
          get: function () {
              return this._getOption('alignItemLabels');
          },
          set: function (value) {
              this._setOption('alignItemLabels', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "alignItemLabelsInAllGroups", {
          get: function () {
              return this._getOption('alignItemLabelsInAllGroups');
          },
          set: function (value) {
              this._setOption('alignItemLabelsInAllGroups', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "colCount", {
          get: function () {
              return this._getOption('colCount');
          },
          set: function (value) {
              this._setOption('colCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "colCountByScreen", {
          get: function () {
              return this._getOption('colCountByScreen');
          },
          set: function (value) {
              this._setOption('colCountByScreen', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "customizeItem", {
          get: function () {
              return this._getOption('customizeItem');
          },
          set: function (value) {
              this._setOption('customizeItem', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "elementAttr", {
          get: function () {
              return this._getOption('elementAttr');
          },
          set: function (value) {
              this._setOption('elementAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "focusStateEnabled", {
          get: function () {
              return this._getOption('focusStateEnabled');
          },
          set: function (value) {
              this._setOption('focusStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "formData", {
          get: function () {
              return this._getOption('formData');
          },
          set: function (value) {
              this._setOption('formData', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "hint", {
          get: function () {
              return this._getOption('hint');
          },
          set: function (value) {
              this._setOption('hint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "hoverStateEnabled", {
          get: function () {
              return this._getOption('hoverStateEnabled');
          },
          set: function (value) {
              this._setOption('hoverStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "isDirty", {
          get: function () {
              return this._getOption('isDirty');
          },
          set: function (value) {
              this._setOption('isDirty', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "items", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this._setOption('items', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "labelLocation", {
          get: function () {
              return this._getOption('labelLocation');
          },
          set: function (value) {
              this._setOption('labelLocation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "labelMode", {
          get: function () {
              return this._getOption('labelMode');
          },
          set: function (value) {
              this._setOption('labelMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "minColWidth", {
          get: function () {
              return this._getOption('minColWidth');
          },
          set: function (value) {
              this._setOption('minColWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "onContentReady", {
          get: function () {
              return this._getOption('onContentReady');
          },
          set: function (value) {
              this._setOption('onContentReady', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "onDisposing", {
          get: function () {
              return this._getOption('onDisposing');
          },
          set: function (value) {
              this._setOption('onDisposing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "onEditorEnterKey", {
          get: function () {
              return this._getOption('onEditorEnterKey');
          },
          set: function (value) {
              this._setOption('onEditorEnterKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "onFieldDataChanged", {
          get: function () {
              return this._getOption('onFieldDataChanged');
          },
          set: function (value) {
              this._setOption('onFieldDataChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "onInitialized", {
          get: function () {
              return this._getOption('onInitialized');
          },
          set: function (value) {
              this._setOption('onInitialized', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "onOptionChanged", {
          get: function () {
              return this._getOption('onOptionChanged');
          },
          set: function (value) {
              this._setOption('onOptionChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "optionalMark", {
          get: function () {
              return this._getOption('optionalMark');
          },
          set: function (value) {
              this._setOption('optionalMark', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "readOnly", {
          get: function () {
              return this._getOption('readOnly');
          },
          set: function (value) {
              this._setOption('readOnly', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "requiredMark", {
          get: function () {
              return this._getOption('requiredMark');
          },
          set: function (value) {
              this._setOption('requiredMark', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "requiredMessage", {
          get: function () {
              return this._getOption('requiredMessage');
          },
          set: function (value) {
              this._setOption('requiredMessage', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "rtlEnabled", {
          get: function () {
              return this._getOption('rtlEnabled');
          },
          set: function (value) {
              this._setOption('rtlEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "screenByWidth", {
          get: function () {
              return this._getOption('screenByWidth');
          },
          set: function (value) {
              this._setOption('screenByWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "scrollingEnabled", {
          get: function () {
              return this._getOption('scrollingEnabled');
          },
          set: function (value) {
              this._setOption('scrollingEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "showColonAfterLabel", {
          get: function () {
              return this._getOption('showColonAfterLabel');
          },
          set: function (value) {
              this._setOption('showColonAfterLabel', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "showOptionalMark", {
          get: function () {
              return this._getOption('showOptionalMark');
          },
          set: function (value) {
              this._setOption('showOptionalMark', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "showRequiredMark", {
          get: function () {
              return this._getOption('showRequiredMark');
          },
          set: function (value) {
              this._setOption('showRequiredMark', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "showValidationSummary", {
          get: function () {
              return this._getOption('showValidationSummary');
          },
          set: function (value) {
              this._setOption('showValidationSummary', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "tabIndex", {
          get: function () {
              return this._getOption('tabIndex');
          },
          set: function (value) {
              this._setOption('tabIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "validationGroup", {
          get: function () {
              return this._getOption('validationGroup');
          },
          set: function (value) {
              this._setOption('validationGroup', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormOptions.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoFormOptions;
  }(i1.NestedOption));
  /** @nocollapse */ DxoFormOptions.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoFormOptions_BaseFactory; return function DxoFormOptions_Factory(t) { return (ɵDxoFormOptions_BaseFactory || (ɵDxoFormOptions_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoFormOptions)))(t || DxoFormOptions); }; }();
  /** @nocollapse */ DxoFormOptions.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFormOptions, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFormOptions_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFormOptions, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoFormComponent = /** @class */ (function (_super) {
      __extends(DxoFormComponent, _super);
      function DxoFormComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'formDataChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFormComponent.prototype, "_optionPath", {
          get: function () {
              return 'form';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoFormComponent.prototype, "itemsChildren", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this.setChildren('items', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoFormComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFormComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFormComponent;
  }(DxoFormOptions));
  /** @nocollapse */ DxoFormComponent.ɵfac = function DxoFormComponent_Factory(t) { return new (t || DxoFormComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFormComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFormComponent, selectors: [["dxo-form"]], contentQueries: function DxoFormComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiItemComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
          }
      }, inputs: { accessKey: "accessKey", activeStateEnabled: "activeStateEnabled", alignItemLabels: "alignItemLabels", alignItemLabelsInAllGroups: "alignItemLabelsInAllGroups", colCount: "colCount", colCountByScreen: "colCountByScreen", customizeItem: "customizeItem", disabled: "disabled", elementAttr: "elementAttr", focusStateEnabled: "focusStateEnabled", formData: "formData", height: "height", hint: "hint", hoverStateEnabled: "hoverStateEnabled", isDirty: "isDirty", items: "items", labelLocation: "labelLocation", labelMode: "labelMode", minColWidth: "minColWidth", onContentReady: "onContentReady", onDisposing: "onDisposing", onEditorEnterKey: "onEditorEnterKey", onFieldDataChanged: "onFieldDataChanged", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", optionalMark: "optionalMark", readOnly: "readOnly", requiredMark: "requiredMark", requiredMessage: "requiredMessage", rtlEnabled: "rtlEnabled", screenByWidth: "screenByWidth", scrollingEnabled: "scrollingEnabled", showColonAfterLabel: "showColonAfterLabel", showOptionalMark: "showOptionalMark", showRequiredMark: "showRequiredMark", showValidationSummary: "showValidationSummary", tabIndex: "tabIndex", validationGroup: "validationGroup", visible: "visible", width: "width" }, outputs: { formDataChange: "formDataChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFormComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFormComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-form',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'accessKey',
                          'activeStateEnabled',
                          'alignItemLabels',
                          'alignItemLabelsInAllGroups',
                          'colCount',
                          'colCountByScreen',
                          'customizeItem',
                          'disabled',
                          'elementAttr',
                          'focusStateEnabled',
                          'formData',
                          'height',
                          'hint',
                          'hoverStateEnabled',
                          'isDirty',
                          'items',
                          'labelLocation',
                          'labelMode',
                          'minColWidth',
                          'onContentReady',
                          'onDisposing',
                          'onEditorEnterKey',
                          'onFieldDataChanged',
                          'onInitialized',
                          'onOptionChanged',
                          'optionalMark',
                          'readOnly',
                          'requiredMark',
                          'requiredMessage',
                          'rtlEnabled',
                          'screenByWidth',
                          'scrollingEnabled',
                          'showColonAfterLabel',
                          'showOptionalMark',
                          'showRequiredMark',
                          'showValidationSummary',
                          'tabIndex',
                          'validationGroup',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { formDataChange: [{
                  type: i0.Output
              }], itemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiItemComponent; })]
              }] });
  })();
  var DxoFormModule = /** @class */ (function () {
      function DxoFormModule() {
      }
      return DxoFormModule;
  }());
  /** @nocollapse */ DxoFormModule.ɵfac = function DxoFormModule_Factory(t) { return new (t || DxoFormModule)(); };
  /** @nocollapse */ DxoFormModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFormModule });
  /** @nocollapse */ DxoFormModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFormModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFormComponent
                      ],
                      exports: [
                          DxoFormComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFormModule, { declarations: [DxoFormComponent], exports: [DxoFormComponent] }); })();

  var DxoFormatComponent = /** @class */ (function (_super) {
      __extends(DxoFormatComponent, _super);
      function DxoFormatComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFormatComponent.prototype, "_optionPath", {
          get: function () {
              return 'format';
          },
          enumerable: false,
          configurable: true
      });
      DxoFormatComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFormatComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFormatComponent;
  }(DxoFormat));
  /** @nocollapse */ DxoFormatComponent.ɵfac = function DxoFormatComponent_Factory(t) { return new (t || DxoFormatComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFormatComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFormatComponent, selectors: [["dxo-format"]], inputs: { currency: "currency", formatter: "formatter", parser: "parser", precision: "precision", type: "type", useCurrencyAccountingStyle: "useCurrencyAccountingStyle" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFormatComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFormatComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-format',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'currency',
                          'formatter',
                          'parser',
                          'precision',
                          'type',
                          'useCurrencyAccountingStyle'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoFormatModule = /** @class */ (function () {
      function DxoFormatModule() {
      }
      return DxoFormatModule;
  }());
  /** @nocollapse */ DxoFormatModule.ɵfac = function DxoFormatModule_Factory(t) { return new (t || DxoFormatModule)(); };
  /** @nocollapse */ DxoFormatModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFormatModule });
  /** @nocollapse */ DxoFormatModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFormatModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFormatComponent
                      ],
                      exports: [
                          DxoFormatComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFormatModule, { declarations: [DxoFormatComponent], exports: [DxoFormatComponent] }); })();

  var DxoAnimationState = /** @class */ (function (_super) {
      __extends(DxoAnimationState, _super);
      function DxoAnimationState() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoAnimationState.prototype, "left", {
          get: function () {
              return this._getOption('left');
          },
          set: function (value) {
              this._setOption('left', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationState.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationState.prototype, "position", {
          get: function () {
              return this._getOption('position');
          },
          set: function (value) {
              this._setOption('position', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationState.prototype, "scale", {
          get: function () {
              return this._getOption('scale');
          },
          set: function (value) {
              this._setOption('scale', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoAnimationState.prototype, "top", {
          get: function () {
              return this._getOption('top');
          },
          set: function (value) {
              this._setOption('top', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoAnimationState;
  }(i1.NestedOption));
  /** @nocollapse */ DxoAnimationState.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoAnimationState_BaseFactory; return function DxoAnimationState_Factory(t) { return (ɵDxoAnimationState_BaseFactory || (ɵDxoAnimationState_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoAnimationState)))(t || DxoAnimationState); }; }();
  /** @nocollapse */ DxoAnimationState.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoAnimationState, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoAnimationState_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoAnimationState, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoFromComponent = /** @class */ (function (_super) {
      __extends(DxoFromComponent, _super);
      function DxoFromComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFromComponent.prototype, "_optionPath", {
          get: function () {
              return 'from';
          },
          enumerable: false,
          configurable: true
      });
      DxoFromComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFromComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFromComponent;
  }(DxoAnimationState));
  /** @nocollapse */ DxoFromComponent.ɵfac = function DxoFromComponent_Factory(t) { return new (t || DxoFromComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFromComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFromComponent, selectors: [["dxo-from"]], inputs: { left: "left", opacity: "opacity", position: "position", scale: "scale", top: "top" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFromComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFromComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-from',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'left',
                          'opacity',
                          'position',
                          'scale',
                          'top'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoFromModule = /** @class */ (function () {
      function DxoFromModule() {
      }
      return DxoFromModule;
  }());
  /** @nocollapse */ DxoFromModule.ɵfac = function DxoFromModule_Factory(t) { return new (t || DxoFromModule)(); };
  /** @nocollapse */ DxoFromModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFromModule });
  /** @nocollapse */ DxoFromModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFromModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFromComponent
                      ],
                      exports: [
                          DxoFromComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFromModule, { declarations: [DxoFromComponent], exports: [DxoFromComponent] }); })();

  var DxoFullstackedareaComponent = /** @class */ (function (_super) {
      __extends(DxoFullstackedareaComponent, _super);
      function DxoFullstackedareaComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFullstackedareaComponent.prototype, "_optionPath", {
          get: function () {
              return 'fullstackedarea';
          },
          enumerable: false,
          configurable: true
      });
      DxoFullstackedareaComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFullstackedareaComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFullstackedareaComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoFullstackedareaComponent.ɵfac = function DxoFullstackedareaComponent_Factory(t) { return new (t || DxoFullstackedareaComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFullstackedareaComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFullstackedareaComponent, selectors: [["dxo-fullstackedarea"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFullstackedareaComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFullstackedareaComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-fullstackedarea',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoFullstackedareaModule = /** @class */ (function () {
      function DxoFullstackedareaModule() {
      }
      return DxoFullstackedareaModule;
  }());
  /** @nocollapse */ DxoFullstackedareaModule.ɵfac = function DxoFullstackedareaModule_Factory(t) { return new (t || DxoFullstackedareaModule)(); };
  /** @nocollapse */ DxoFullstackedareaModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFullstackedareaModule });
  /** @nocollapse */ DxoFullstackedareaModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFullstackedareaModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFullstackedareaComponent
                      ],
                      exports: [
                          DxoFullstackedareaComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFullstackedareaModule, { declarations: [DxoFullstackedareaComponent], exports: [DxoFullstackedareaComponent] }); })();

  var DxoFullstackedbarComponent = /** @class */ (function (_super) {
      __extends(DxoFullstackedbarComponent, _super);
      function DxoFullstackedbarComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFullstackedbarComponent.prototype, "_optionPath", {
          get: function () {
              return 'fullstackedbar';
          },
          enumerable: false,
          configurable: true
      });
      DxoFullstackedbarComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFullstackedbarComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFullstackedbarComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoFullstackedbarComponent.ɵfac = function DxoFullstackedbarComponent_Factory(t) { return new (t || DxoFullstackedbarComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFullstackedbarComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFullstackedbarComponent, selectors: [["dxo-fullstackedbar"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFullstackedbarComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFullstackedbarComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-fullstackedbar',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoFullstackedbarModule = /** @class */ (function () {
      function DxoFullstackedbarModule() {
      }
      return DxoFullstackedbarModule;
  }());
  /** @nocollapse */ DxoFullstackedbarModule.ɵfac = function DxoFullstackedbarModule_Factory(t) { return new (t || DxoFullstackedbarModule)(); };
  /** @nocollapse */ DxoFullstackedbarModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFullstackedbarModule });
  /** @nocollapse */ DxoFullstackedbarModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFullstackedbarModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFullstackedbarComponent
                      ],
                      exports: [
                          DxoFullstackedbarComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFullstackedbarModule, { declarations: [DxoFullstackedbarComponent], exports: [DxoFullstackedbarComponent] }); })();

  var DxoFullstackedlineComponent = /** @class */ (function (_super) {
      __extends(DxoFullstackedlineComponent, _super);
      function DxoFullstackedlineComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFullstackedlineComponent.prototype, "_optionPath", {
          get: function () {
              return 'fullstackedline';
          },
          enumerable: false,
          configurable: true
      });
      DxoFullstackedlineComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFullstackedlineComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFullstackedlineComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoFullstackedlineComponent.ɵfac = function DxoFullstackedlineComponent_Factory(t) { return new (t || DxoFullstackedlineComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFullstackedlineComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFullstackedlineComponent, selectors: [["dxo-fullstackedline"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFullstackedlineComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFullstackedlineComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-fullstackedline',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoFullstackedlineModule = /** @class */ (function () {
      function DxoFullstackedlineModule() {
      }
      return DxoFullstackedlineModule;
  }());
  /** @nocollapse */ DxoFullstackedlineModule.ɵfac = function DxoFullstackedlineModule_Factory(t) { return new (t || DxoFullstackedlineModule)(); };
  /** @nocollapse */ DxoFullstackedlineModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFullstackedlineModule });
  /** @nocollapse */ DxoFullstackedlineModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFullstackedlineModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFullstackedlineComponent
                      ],
                      exports: [
                          DxoFullstackedlineComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFullstackedlineModule, { declarations: [DxoFullstackedlineComponent], exports: [DxoFullstackedlineComponent] }); })();

  var DxoFullstackedsplineComponent = /** @class */ (function (_super) {
      __extends(DxoFullstackedsplineComponent, _super);
      function DxoFullstackedsplineComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFullstackedsplineComponent.prototype, "_optionPath", {
          get: function () {
              return 'fullstackedspline';
          },
          enumerable: false,
          configurable: true
      });
      DxoFullstackedsplineComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFullstackedsplineComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFullstackedsplineComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoFullstackedsplineComponent.ɵfac = function DxoFullstackedsplineComponent_Factory(t) { return new (t || DxoFullstackedsplineComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFullstackedsplineComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFullstackedsplineComponent, selectors: [["dxo-fullstackedspline"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFullstackedsplineComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFullstackedsplineComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-fullstackedspline',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoFullstackedsplineModule = /** @class */ (function () {
      function DxoFullstackedsplineModule() {
      }
      return DxoFullstackedsplineModule;
  }());
  /** @nocollapse */ DxoFullstackedsplineModule.ɵfac = function DxoFullstackedsplineModule_Factory(t) { return new (t || DxoFullstackedsplineModule)(); };
  /** @nocollapse */ DxoFullstackedsplineModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFullstackedsplineModule });
  /** @nocollapse */ DxoFullstackedsplineModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFullstackedsplineModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFullstackedsplineComponent
                      ],
                      exports: [
                          DxoFullstackedsplineComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFullstackedsplineModule, { declarations: [DxoFullstackedsplineComponent], exports: [DxoFullstackedsplineComponent] }); })();

  var DxoFullstackedsplineareaComponent = /** @class */ (function (_super) {
      __extends(DxoFullstackedsplineareaComponent, _super);
      function DxoFullstackedsplineareaComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoFullstackedsplineareaComponent.prototype, "_optionPath", {
          get: function () {
              return 'fullstackedsplinearea';
          },
          enumerable: false,
          configurable: true
      });
      DxoFullstackedsplineareaComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoFullstackedsplineareaComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoFullstackedsplineareaComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoFullstackedsplineareaComponent.ɵfac = function DxoFullstackedsplineareaComponent_Factory(t) { return new (t || DxoFullstackedsplineareaComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoFullstackedsplineareaComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoFullstackedsplineareaComponent, selectors: [["dxo-fullstackedsplinearea"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoFullstackedsplineareaComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFullstackedsplineareaComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-fullstackedsplinearea',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoFullstackedsplineareaModule = /** @class */ (function () {
      function DxoFullstackedsplineareaModule() {
      }
      return DxoFullstackedsplineareaModule;
  }());
  /** @nocollapse */ DxoFullstackedsplineareaModule.ɵfac = function DxoFullstackedsplineareaModule_Factory(t) { return new (t || DxoFullstackedsplineareaModule)(); };
  /** @nocollapse */ DxoFullstackedsplineareaModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoFullstackedsplineareaModule });
  /** @nocollapse */ DxoFullstackedsplineareaModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoFullstackedsplineareaModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoFullstackedsplineareaComponent
                      ],
                      exports: [
                          DxoFullstackedsplineareaComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoFullstackedsplineareaModule, { declarations: [DxoFullstackedsplineareaComponent], exports: [DxoFullstackedsplineareaComponent] }); })();

  var DxoGeometryComponent = /** @class */ (function (_super) {
      __extends(DxoGeometryComponent, _super);
      function DxoGeometryComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoGeometryComponent.prototype, "endAngle", {
          get: function () {
              return this._getOption('endAngle');
          },
          set: function (value) {
              this._setOption('endAngle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGeometryComponent.prototype, "startAngle", {
          get: function () {
              return this._getOption('startAngle');
          },
          set: function (value) {
              this._setOption('startAngle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGeometryComponent.prototype, "orientation", {
          get: function () {
              return this._getOption('orientation');
          },
          set: function (value) {
              this._setOption('orientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGeometryComponent.prototype, "_optionPath", {
          get: function () {
              return 'geometry';
          },
          enumerable: false,
          configurable: true
      });
      DxoGeometryComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoGeometryComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoGeometryComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoGeometryComponent.ɵfac = function DxoGeometryComponent_Factory(t) { return new (t || DxoGeometryComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoGeometryComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoGeometryComponent, selectors: [["dxo-geometry"]], inputs: { endAngle: "endAngle", startAngle: "startAngle", orientation: "orientation" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoGeometryComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGeometryComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-geometry',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { endAngle: [{
                  type: i0.Input
              }], startAngle: [{
                  type: i0.Input
              }], orientation: [{
                  type: i0.Input
              }] });
  })();
  var DxoGeometryModule = /** @class */ (function () {
      function DxoGeometryModule() {
      }
      return DxoGeometryModule;
  }());
  /** @nocollapse */ DxoGeometryModule.ɵfac = function DxoGeometryModule_Factory(t) { return new (t || DxoGeometryModule)(); };
  /** @nocollapse */ DxoGeometryModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoGeometryModule });
  /** @nocollapse */ DxoGeometryModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGeometryModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoGeometryComponent
                      ],
                      exports: [
                          DxoGeometryComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoGeometryModule, { declarations: [DxoGeometryComponent], exports: [DxoGeometryComponent] }); })();

  var DxoGridSizeComponent = /** @class */ (function (_super) {
      __extends(DxoGridSizeComponent, _super);
      function DxoGridSizeComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'valueChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoGridSizeComponent.prototype, "items", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this._setOption('items', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGridSizeComponent.prototype, "value", {
          get: function () {
              return this._getOption('value');
          },
          set: function (value) {
              this._setOption('value', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGridSizeComponent.prototype, "_optionPath", {
          get: function () {
              return 'gridSize';
          },
          enumerable: false,
          configurable: true
      });
      DxoGridSizeComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoGridSizeComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoGridSizeComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoGridSizeComponent.ɵfac = function DxoGridSizeComponent_Factory(t) { return new (t || DxoGridSizeComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoGridSizeComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoGridSizeComponent, selectors: [["dxo-grid-size"]], inputs: { items: "items", value: "value" }, outputs: { valueChange: "valueChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoGridSizeComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGridSizeComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-grid-size',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { items: [{
                  type: i0.Input
              }], value: [{
                  type: i0.Input
              }], valueChange: [{
                  type: i0.Output
              }] });
  })();
  var DxoGridSizeModule = /** @class */ (function () {
      function DxoGridSizeModule() {
      }
      return DxoGridSizeModule;
  }());
  /** @nocollapse */ DxoGridSizeModule.ɵfac = function DxoGridSizeModule_Factory(t) { return new (t || DxoGridSizeModule)(); };
  /** @nocollapse */ DxoGridSizeModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoGridSizeModule });
  /** @nocollapse */ DxoGridSizeModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGridSizeModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoGridSizeComponent
                      ],
                      exports: [
                          DxoGridSizeComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoGridSizeModule, { declarations: [DxoGridSizeComponent], exports: [DxoGridSizeComponent] }); })();

  var DxoGridComponent = /** @class */ (function (_super) {
      __extends(DxoGridComponent, _super);
      function DxoGridComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoGridComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGridComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGridComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGridComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGridComponent.prototype, "_optionPath", {
          get: function () {
              return 'grid';
          },
          enumerable: false,
          configurable: true
      });
      DxoGridComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoGridComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoGridComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoGridComponent.ɵfac = function DxoGridComponent_Factory(t) { return new (t || DxoGridComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoGridComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoGridComponent, selectors: [["dxo-grid"]], inputs: { color: "color", opacity: "opacity", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoGridComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGridComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-grid',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoGridModule = /** @class */ (function () {
      function DxoGridModule() {
      }
      return DxoGridModule;
  }());
  /** @nocollapse */ DxoGridModule.ɵfac = function DxoGridModule_Factory(t) { return new (t || DxoGridModule)(); };
  /** @nocollapse */ DxoGridModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoGridModule });
  /** @nocollapse */ DxoGridModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGridModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoGridComponent
                      ],
                      exports: [
                          DxoGridComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoGridModule, { declarations: [DxoGridComponent], exports: [DxoGridComponent] }); })();

  var DxiGroupItemComponent = /** @class */ (function (_super) {
      __extends(DxiGroupItemComponent, _super);
      function DxiGroupItemComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiGroupItemComponent.prototype, "alignByColumn", {
          get: function () {
              return this._getOption('alignByColumn');
          },
          set: function (value) {
              this._setOption('alignByColumn', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupItemComponent.prototype, "column", {
          get: function () {
              return this._getOption('column');
          },
          set: function (value) {
              this._setOption('column', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupItemComponent.prototype, "customizeText", {
          get: function () {
              return this._getOption('customizeText');
          },
          set: function (value) {
              this._setOption('customizeText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupItemComponent.prototype, "displayFormat", {
          get: function () {
              return this._getOption('displayFormat');
          },
          set: function (value) {
              this._setOption('displayFormat', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupItemComponent.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupItemComponent.prototype, "showInColumn", {
          get: function () {
              return this._getOption('showInColumn');
          },
          set: function (value) {
              this._setOption('showInColumn', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupItemComponent.prototype, "showInGroupFooter", {
          get: function () {
              return this._getOption('showInGroupFooter');
          },
          set: function (value) {
              this._setOption('showInGroupFooter', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupItemComponent.prototype, "skipEmptyValues", {
          get: function () {
              return this._getOption('skipEmptyValues');
          },
          set: function (value) {
              this._setOption('skipEmptyValues', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupItemComponent.prototype, "summaryType", {
          get: function () {
              return this._getOption('summaryType');
          },
          set: function (value) {
              this._setOption('summaryType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupItemComponent.prototype, "valueFormat", {
          get: function () {
              return this._getOption('valueFormat');
          },
          set: function (value) {
              this._setOption('valueFormat', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGroupItemComponent.prototype, "_optionPath", {
          get: function () {
              return 'groupItems';
          },
          enumerable: false,
          configurable: true
      });
      DxiGroupItemComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiGroupItemComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiGroupItemComponent.ɵfac = function DxiGroupItemComponent_Factory(t) { return new (t || DxiGroupItemComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiGroupItemComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiGroupItemComponent, selectors: [["dxi-group-item"]], inputs: { alignByColumn: "alignByColumn", column: "column", customizeText: "customizeText", displayFormat: "displayFormat", name: "name", showInColumn: "showInColumn", showInGroupFooter: "showInGroupFooter", skipEmptyValues: "skipEmptyValues", summaryType: "summaryType", valueFormat: "valueFormat" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiGroupItemComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiGroupItemComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-group-item',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { alignByColumn: [{
                  type: i0.Input
              }], column: [{
                  type: i0.Input
              }], customizeText: [{
                  type: i0.Input
              }], displayFormat: [{
                  type: i0.Input
              }], name: [{
                  type: i0.Input
              }], showInColumn: [{
                  type: i0.Input
              }], showInGroupFooter: [{
                  type: i0.Input
              }], skipEmptyValues: [{
                  type: i0.Input
              }], summaryType: [{
                  type: i0.Input
              }], valueFormat: [{
                  type: i0.Input
              }] });
  })();
  var DxiGroupItemModule = /** @class */ (function () {
      function DxiGroupItemModule() {
      }
      return DxiGroupItemModule;
  }());
  /** @nocollapse */ DxiGroupItemModule.ɵfac = function DxiGroupItemModule_Factory(t) { return new (t || DxiGroupItemModule)(); };
  /** @nocollapse */ DxiGroupItemModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiGroupItemModule });
  /** @nocollapse */ DxiGroupItemModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiGroupItemModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiGroupItemComponent
                      ],
                      exports: [
                          DxiGroupItemComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiGroupItemModule, { declarations: [DxiGroupItemComponent], exports: [DxiGroupItemComponent] }); })();

  var DxoGroupOperationDescriptionsComponent = /** @class */ (function (_super) {
      __extends(DxoGroupOperationDescriptionsComponent, _super);
      function DxoGroupOperationDescriptionsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "and", {
          get: function () {
              return this._getOption('and');
          },
          set: function (value) {
              this._setOption('and', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "notAnd", {
          get: function () {
              return this._getOption('notAnd');
          },
          set: function (value) {
              this._setOption('notAnd', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "notOr", {
          get: function () {
              return this._getOption('notOr');
          },
          set: function (value) {
              this._setOption('notOr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "or", {
          get: function () {
              return this._getOption('or');
          },
          set: function (value) {
              this._setOption('or', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "_optionPath", {
          get: function () {
              return 'groupOperationDescriptions';
          },
          enumerable: false,
          configurable: true
      });
      DxoGroupOperationDescriptionsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoGroupOperationDescriptionsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoGroupOperationDescriptionsComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoGroupOperationDescriptionsComponent.ɵfac = function DxoGroupOperationDescriptionsComponent_Factory(t) { return new (t || DxoGroupOperationDescriptionsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoGroupOperationDescriptionsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoGroupOperationDescriptionsComponent, selectors: [["dxo-group-operation-descriptions"]], inputs: { and: "and", notAnd: "notAnd", notOr: "notOr", or: "or" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoGroupOperationDescriptionsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGroupOperationDescriptionsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-group-operation-descriptions',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { and: [{
                  type: i0.Input
              }], notAnd: [{
                  type: i0.Input
              }], notOr: [{
                  type: i0.Input
              }], or: [{
                  type: i0.Input
              }] });
  })();
  var DxoGroupOperationDescriptionsModule = /** @class */ (function () {
      function DxoGroupOperationDescriptionsModule() {
      }
      return DxoGroupOperationDescriptionsModule;
  }());
  /** @nocollapse */ DxoGroupOperationDescriptionsModule.ɵfac = function DxoGroupOperationDescriptionsModule_Factory(t) { return new (t || DxoGroupOperationDescriptionsModule)(); };
  /** @nocollapse */ DxoGroupOperationDescriptionsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoGroupOperationDescriptionsModule });
  /** @nocollapse */ DxoGroupOperationDescriptionsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGroupOperationDescriptionsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoGroupOperationDescriptionsComponent
                      ],
                      exports: [
                          DxoGroupOperationDescriptionsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoGroupOperationDescriptionsModule, { declarations: [DxoGroupOperationDescriptionsComponent], exports: [DxoGroupOperationDescriptionsComponent] }); })();

  var DxoGroupPanelComponent = /** @class */ (function (_super) {
      __extends(DxoGroupPanelComponent, _super);
      function DxoGroupPanelComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'visibleChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoGroupPanelComponent.prototype, "allowColumnDragging", {
          get: function () {
              return this._getOption('allowColumnDragging');
          },
          set: function (value) {
              this._setOption('allowColumnDragging', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupPanelComponent.prototype, "emptyPanelText", {
          get: function () {
              return this._getOption('emptyPanelText');
          },
          set: function (value) {
              this._setOption('emptyPanelText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupPanelComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupPanelComponent.prototype, "_optionPath", {
          get: function () {
              return 'groupPanel';
          },
          enumerable: false,
          configurable: true
      });
      DxoGroupPanelComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoGroupPanelComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoGroupPanelComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoGroupPanelComponent.ɵfac = function DxoGroupPanelComponent_Factory(t) { return new (t || DxoGroupPanelComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoGroupPanelComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoGroupPanelComponent, selectors: [["dxo-group-panel"]], inputs: { allowColumnDragging: "allowColumnDragging", emptyPanelText: "emptyPanelText", visible: "visible" }, outputs: { visibleChange: "visibleChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoGroupPanelComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGroupPanelComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-group-panel',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowColumnDragging: [{
                  type: i0.Input
              }], emptyPanelText: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], visibleChange: [{
                  type: i0.Output
              }] });
  })();
  var DxoGroupPanelModule = /** @class */ (function () {
      function DxoGroupPanelModule() {
      }
      return DxoGroupPanelModule;
  }());
  /** @nocollapse */ DxoGroupPanelModule.ɵfac = function DxoGroupPanelModule_Factory(t) { return new (t || DxoGroupPanelModule)(); };
  /** @nocollapse */ DxoGroupPanelModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoGroupPanelModule });
  /** @nocollapse */ DxoGroupPanelModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGroupPanelModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoGroupPanelComponent
                      ],
                      exports: [
                          DxoGroupPanelComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoGroupPanelModule, { declarations: [DxoGroupPanelComponent], exports: [DxoGroupPanelComponent] }); })();

  var DxoGroupComponent = /** @class */ (function (_super) {
      __extends(DxoGroupComponent, _super);
      function DxoGroupComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoGroupComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupComponent.prototype, "headerHeight", {
          get: function () {
              return this._getOption('headerHeight');
          },
          set: function (value) {
              this._setOption('headerHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupComponent.prototype, "hoverEnabled", {
          get: function () {
              return this._getOption('hoverEnabled');
          },
          set: function (value) {
              this._setOption('hoverEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupComponent.prototype, "hoverStyle", {
          get: function () {
              return this._getOption('hoverStyle');
          },
          set: function (value) {
              this._setOption('hoverStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupComponent.prototype, "padding", {
          get: function () {
              return this._getOption('padding');
          },
          set: function (value) {
              this._setOption('padding', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupComponent.prototype, "selectionStyle", {
          get: function () {
              return this._getOption('selectionStyle');
          },
          set: function (value) {
              this._setOption('selectionStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupComponent.prototype, "_optionPath", {
          get: function () {
              return 'group';
          },
          enumerable: false,
          configurable: true
      });
      DxoGroupComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoGroupComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoGroupComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoGroupComponent.ɵfac = function DxoGroupComponent_Factory(t) { return new (t || DxoGroupComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoGroupComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoGroupComponent, selectors: [["dxo-group"]], inputs: { border: "border", color: "color", headerHeight: "headerHeight", hoverEnabled: "hoverEnabled", hoverStyle: "hoverStyle", label: "label", padding: "padding", selectionStyle: "selectionStyle" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoGroupComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGroupComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-group',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { border: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], headerHeight: [{
                  type: i0.Input
              }], hoverEnabled: [{
                  type: i0.Input
              }], hoverStyle: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], padding: [{
                  type: i0.Input
              }], selectionStyle: [{
                  type: i0.Input
              }] });
  })();
  var DxoGroupModule = /** @class */ (function () {
      function DxoGroupModule() {
      }
      return DxoGroupModule;
  }());
  /** @nocollapse */ DxoGroupModule.ɵfac = function DxoGroupModule_Factory(t) { return new (t || DxoGroupModule)(); };
  /** @nocollapse */ DxoGroupModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoGroupModule });
  /** @nocollapse */ DxoGroupModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGroupModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoGroupComponent
                      ],
                      exports: [
                          DxoGroupComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoGroupModule, { declarations: [DxoGroupComponent], exports: [DxoGroupComponent] }); })();

  var DxoGroupingComponent = /** @class */ (function (_super) {
      __extends(DxoGroupingComponent, _super);
      function DxoGroupingComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoGroupingComponent.prototype, "allowCollapsing", {
          get: function () {
              return this._getOption('allowCollapsing');
          },
          set: function (value) {
              this._setOption('allowCollapsing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupingComponent.prototype, "autoExpandAll", {
          get: function () {
              return this._getOption('autoExpandAll');
          },
          set: function (value) {
              this._setOption('autoExpandAll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupingComponent.prototype, "contextMenuEnabled", {
          get: function () {
              return this._getOption('contextMenuEnabled');
          },
          set: function (value) {
              this._setOption('contextMenuEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupingComponent.prototype, "expandMode", {
          get: function () {
              return this._getOption('expandMode');
          },
          set: function (value) {
              this._setOption('expandMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupingComponent.prototype, "texts", {
          get: function () {
              return this._getOption('texts');
          },
          set: function (value) {
              this._setOption('texts', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGroupingComponent.prototype, "_optionPath", {
          get: function () {
              return 'grouping';
          },
          enumerable: false,
          configurable: true
      });
      DxoGroupingComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoGroupingComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoGroupingComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoGroupingComponent.ɵfac = function DxoGroupingComponent_Factory(t) { return new (t || DxoGroupingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoGroupingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoGroupingComponent, selectors: [["dxo-grouping"]], inputs: { allowCollapsing: "allowCollapsing", autoExpandAll: "autoExpandAll", contextMenuEnabled: "contextMenuEnabled", expandMode: "expandMode", texts: "texts" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoGroupingComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGroupingComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-grouping',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowCollapsing: [{
                  type: i0.Input
              }], autoExpandAll: [{
                  type: i0.Input
              }], contextMenuEnabled: [{
                  type: i0.Input
              }], expandMode: [{
                  type: i0.Input
              }], texts: [{
                  type: i0.Input
              }] });
  })();
  var DxoGroupingModule = /** @class */ (function () {
      function DxoGroupingModule() {
      }
      return DxoGroupingModule;
  }());
  /** @nocollapse */ DxoGroupingModule.ɵfac = function DxoGroupingModule_Factory(t) { return new (t || DxoGroupingModule)(); };
  /** @nocollapse */ DxoGroupingModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoGroupingModule });
  /** @nocollapse */ DxoGroupingModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGroupingModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoGroupingComponent
                      ],
                      exports: [
                          DxoGroupingComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoGroupingModule, { declarations: [DxoGroupingComponent], exports: [DxoGroupingComponent] }); })();

  var DxoHatchingComponent = /** @class */ (function (_super) {
      __extends(DxoHatchingComponent, _super);
      function DxoHatchingComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoHatchingComponent.prototype, "direction", {
          get: function () {
              return this._getOption('direction');
          },
          set: function (value) {
              this._setOption('direction', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHatchingComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHatchingComponent.prototype, "step", {
          get: function () {
              return this._getOption('step');
          },
          set: function (value) {
              this._setOption('step', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHatchingComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHatchingComponent.prototype, "_optionPath", {
          get: function () {
              return 'hatching';
          },
          enumerable: false,
          configurable: true
      });
      DxoHatchingComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoHatchingComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoHatchingComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoHatchingComponent.ɵfac = function DxoHatchingComponent_Factory(t) { return new (t || DxoHatchingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoHatchingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoHatchingComponent, selectors: [["dxo-hatching"]], inputs: { direction: "direction", opacity: "opacity", step: "step", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHatchingComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHatchingComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-hatching',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { direction: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], step: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoHatchingModule = /** @class */ (function () {
      function DxoHatchingModule() {
      }
      return DxoHatchingModule;
  }());
  /** @nocollapse */ DxoHatchingModule.ɵfac = function DxoHatchingModule_Factory(t) { return new (t || DxoHatchingModule)(); };
  /** @nocollapse */ DxoHatchingModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoHatchingModule });
  /** @nocollapse */ DxoHatchingModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHatchingModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoHatchingComponent
                      ],
                      exports: [
                          DxoHatchingComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoHatchingModule, { declarations: [DxoHatchingComponent], exports: [DxoHatchingComponent] }); })();

  var DxoGanttHeaderFilter = /** @class */ (function (_super) {
      __extends(DxoGanttHeaderFilter, _super);
      function DxoGanttHeaderFilter() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoGanttHeaderFilter.prototype, "allowSearch", {
          get: function () {
              return this._getOption('allowSearch');
          },
          set: function (value) {
              this._setOption('allowSearch', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilter.prototype, "allowSelectAll", {
          get: function () {
              return this._getOption('allowSelectAll');
          },
          set: function (value) {
              this._setOption('allowSelectAll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilter.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilter.prototype, "groupInterval", {
          get: function () {
              return this._getOption('groupInterval');
          },
          set: function (value) {
              this._setOption('groupInterval', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilter.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilter.prototype, "search", {
          get: function () {
              return this._getOption('search');
          },
          set: function (value) {
              this._setOption('search', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilter.prototype, "searchMode", {
          get: function () {
              return this._getOption('searchMode');
          },
          set: function (value) {
              this._setOption('searchMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilter.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilter.prototype, "searchTimeout", {
          get: function () {
              return this._getOption('searchTimeout');
          },
          set: function (value) {
              this._setOption('searchTimeout', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilter.prototype, "texts", {
          get: function () {
              return this._getOption('texts');
          },
          set: function (value) {
              this._setOption('texts', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilter.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilter.prototype, "showRelevantValues", {
          get: function () {
              return this._getOption('showRelevantValues');
          },
          set: function (value) {
              this._setOption('showRelevantValues', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoGanttHeaderFilter;
  }(i1.NestedOption));
  /** @nocollapse */ DxoGanttHeaderFilter.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoGanttHeaderFilter_BaseFactory; return function DxoGanttHeaderFilter_Factory(t) { return (ɵDxoGanttHeaderFilter_BaseFactory || (ɵDxoGanttHeaderFilter_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoGanttHeaderFilter)))(t || DxoGanttHeaderFilter); }; }();
  /** @nocollapse */ DxoGanttHeaderFilter.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoGanttHeaderFilter, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoGanttHeaderFilter_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGanttHeaderFilter, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoHeaderFilterComponent = /** @class */ (function (_super) {
      __extends(DxoHeaderFilterComponent, _super);
      function DxoHeaderFilterComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoHeaderFilterComponent.prototype, "_optionPath", {
          get: function () {
              return 'headerFilter';
          },
          enumerable: false,
          configurable: true
      });
      DxoHeaderFilterComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoHeaderFilterComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoHeaderFilterComponent;
  }(DxoGanttHeaderFilter));
  /** @nocollapse */ DxoHeaderFilterComponent.ɵfac = function DxoHeaderFilterComponent_Factory(t) { return new (t || DxoHeaderFilterComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoHeaderFilterComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoHeaderFilterComponent, selectors: [["dxo-header-filter"]], inputs: { allowSearch: "allowSearch", allowSelectAll: "allowSelectAll", dataSource: "dataSource", groupInterval: "groupInterval", height: "height", search: "search", searchMode: "searchMode", width: "width", searchTimeout: "searchTimeout", texts: "texts", visible: "visible", showRelevantValues: "showRelevantValues" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHeaderFilterComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHeaderFilterComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-header-filter',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'allowSearch',
                          'allowSelectAll',
                          'dataSource',
                          'groupInterval',
                          'height',
                          'search',
                          'searchMode',
                          'width',
                          'searchTimeout',
                          'texts',
                          'visible',
                          'showRelevantValues'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoHeaderFilterModule = /** @class */ (function () {
      function DxoHeaderFilterModule() {
      }
      return DxoHeaderFilterModule;
  }());
  /** @nocollapse */ DxoHeaderFilterModule.ɵfac = function DxoHeaderFilterModule_Factory(t) { return new (t || DxoHeaderFilterModule)(); };
  /** @nocollapse */ DxoHeaderFilterModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoHeaderFilterModule });
  /** @nocollapse */ DxoHeaderFilterModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHeaderFilterModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoHeaderFilterComponent
                      ],
                      exports: [
                          DxoHeaderFilterComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoHeaderFilterModule, { declarations: [DxoHeaderFilterComponent], exports: [DxoHeaderFilterComponent] }); })();

  var DxoHeightComponent = /** @class */ (function (_super) {
      __extends(DxoHeightComponent, _super);
      function DxoHeightComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoHeightComponent.prototype, "rangeMaxPoint", {
          get: function () {
              return this._getOption('rangeMaxPoint');
          },
          set: function (value) {
              this._setOption('rangeMaxPoint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHeightComponent.prototype, "rangeMinPoint", {
          get: function () {
              return this._getOption('rangeMinPoint');
          },
          set: function (value) {
              this._setOption('rangeMinPoint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHeightComponent.prototype, "_optionPath", {
          get: function () {
              return 'height';
          },
          enumerable: false,
          configurable: true
      });
      DxoHeightComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoHeightComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoHeightComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoHeightComponent.ɵfac = function DxoHeightComponent_Factory(t) { return new (t || DxoHeightComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoHeightComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoHeightComponent, selectors: [["dxo-height"]], inputs: { rangeMaxPoint: "rangeMaxPoint", rangeMinPoint: "rangeMinPoint" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHeightComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHeightComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-height',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { rangeMaxPoint: [{
                  type: i0.Input
              }], rangeMinPoint: [{
                  type: i0.Input
              }] });
  })();
  var DxoHeightModule = /** @class */ (function () {
      function DxoHeightModule() {
      }
      return DxoHeightModule;
  }());
  /** @nocollapse */ DxoHeightModule.ɵfac = function DxoHeightModule_Factory(t) { return new (t || DxoHeightModule)(); };
  /** @nocollapse */ DxoHeightModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoHeightModule });
  /** @nocollapse */ DxoHeightModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHeightModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoHeightComponent
                      ],
                      exports: [
                          DxoHeightComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoHeightModule, { declarations: [DxoHeightComponent], exports: [DxoHeightComponent] }); })();

  var DxoHideEventComponent = /** @class */ (function (_super) {
      __extends(DxoHideEventComponent, _super);
      function DxoHideEventComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoHideEventComponent.prototype, "delay", {
          get: function () {
              return this._getOption('delay');
          },
          set: function (value) {
              this._setOption('delay', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHideEventComponent.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHideEventComponent.prototype, "_optionPath", {
          get: function () {
              return 'hideEvent';
          },
          enumerable: false,
          configurable: true
      });
      DxoHideEventComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoHideEventComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoHideEventComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoHideEventComponent.ɵfac = function DxoHideEventComponent_Factory(t) { return new (t || DxoHideEventComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoHideEventComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoHideEventComponent, selectors: [["dxo-hide-event"]], inputs: { delay: "delay", name: "name" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHideEventComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHideEventComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-hide-event',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { delay: [{
                  type: i0.Input
              }], name: [{
                  type: i0.Input
              }] });
  })();
  var DxoHideEventModule = /** @class */ (function () {
      function DxoHideEventModule() {
      }
      return DxoHideEventModule;
  }());
  /** @nocollapse */ DxoHideEventModule.ɵfac = function DxoHideEventModule_Factory(t) { return new (t || DxoHideEventModule)(); };
  /** @nocollapse */ DxoHideEventModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoHideEventModule });
  /** @nocollapse */ DxoHideEventModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHideEventModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoHideEventComponent
                      ],
                      exports: [
                          DxoHideEventComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoHideEventModule, { declarations: [DxoHideEventComponent], exports: [DxoHideEventComponent] }); })();

  var DxoHideComponent = /** @class */ (function (_super) {
      __extends(DxoHideComponent, _super);
      function DxoHideComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoHideComponent.prototype, "_optionPath", {
          get: function () {
              return 'hide';
          },
          enumerable: false,
          configurable: true
      });
      DxoHideComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoHideComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoHideComponent;
  }(DxoAnimationConfig));
  /** @nocollapse */ DxoHideComponent.ɵfac = function DxoHideComponent_Factory(t) { return new (t || DxoHideComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoHideComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoHideComponent, selectors: [["dxo-hide"]], inputs: { complete: "complete", delay: "delay", direction: "direction", duration: "duration", easing: "easing", from: "from", staggerDelay: "staggerDelay", start: "start", to: "to", type: "type" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHideComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHideComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-hide',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'complete',
                          'delay',
                          'direction',
                          'duration',
                          'easing',
                          'from',
                          'staggerDelay',
                          'start',
                          'to',
                          'type'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoHideModule = /** @class */ (function () {
      function DxoHideModule() {
      }
      return DxoHideModule;
  }());
  /** @nocollapse */ DxoHideModule.ɵfac = function DxoHideModule_Factory(t) { return new (t || DxoHideModule)(); };
  /** @nocollapse */ DxoHideModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoHideModule });
  /** @nocollapse */ DxoHideModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHideModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoHideComponent
                      ],
                      exports: [
                          DxoHideComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoHideModule, { declarations: [DxoHideComponent], exports: [DxoHideComponent] }); })();

  var DxoHistoryToolbarComponent = /** @class */ (function (_super) {
      __extends(DxoHistoryToolbarComponent, _super);
      function DxoHistoryToolbarComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoHistoryToolbarComponent.prototype, "commands", {
          get: function () {
              return this._getOption('commands');
          },
          set: function (value) {
              this._setOption('commands', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHistoryToolbarComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHistoryToolbarComponent.prototype, "_optionPath", {
          get: function () {
              return 'historyToolbar';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHistoryToolbarComponent.prototype, "commandsChildren", {
          get: function () {
              return this._getOption('commands');
          },
          set: function (value) {
              this.setChildren('commands', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoHistoryToolbarComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoHistoryToolbarComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoHistoryToolbarComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoHistoryToolbarComponent.ɵfac = function DxoHistoryToolbarComponent_Factory(t) { return new (t || DxoHistoryToolbarComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoHistoryToolbarComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoHistoryToolbarComponent, selectors: [["dxo-history-toolbar"]], contentQueries: function DxoHistoryToolbarComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiCommandComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.commandsChildren = _t);
          }
      }, inputs: { commands: "commands", visible: "visible" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHistoryToolbarComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHistoryToolbarComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-history-toolbar',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { commands: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], commandsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiCommandComponent; })]
              }] });
  })();
  var DxoHistoryToolbarModule = /** @class */ (function () {
      function DxoHistoryToolbarModule() {
      }
      return DxoHistoryToolbarModule;
  }());
  /** @nocollapse */ DxoHistoryToolbarModule.ɵfac = function DxoHistoryToolbarModule_Factory(t) { return new (t || DxoHistoryToolbarModule)(); };
  /** @nocollapse */ DxoHistoryToolbarModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoHistoryToolbarModule });
  /** @nocollapse */ DxoHistoryToolbarModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHistoryToolbarModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoHistoryToolbarComponent
                      ],
                      exports: [
                          DxoHistoryToolbarComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoHistoryToolbarModule, { declarations: [DxoHistoryToolbarComponent], exports: [DxoHistoryToolbarComponent] }); })();

  var DxoHorizontalLineComponent = /** @class */ (function (_super) {
      __extends(DxoHorizontalLineComponent, _super);
      function DxoHorizontalLineComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoHorizontalLineComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHorizontalLineComponent.prototype, "dashStyle", {
          get: function () {
              return this._getOption('dashStyle');
          },
          set: function (value) {
              this._setOption('dashStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHorizontalLineComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHorizontalLineComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHorizontalLineComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHorizontalLineComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHorizontalLineComponent.prototype, "_optionPath", {
          get: function () {
              return 'horizontalLine';
          },
          enumerable: false,
          configurable: true
      });
      DxoHorizontalLineComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoHorizontalLineComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoHorizontalLineComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoHorizontalLineComponent.ɵfac = function DxoHorizontalLineComponent_Factory(t) { return new (t || DxoHorizontalLineComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoHorizontalLineComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoHorizontalLineComponent, selectors: [["dxo-horizontal-line"]], inputs: { color: "color", dashStyle: "dashStyle", label: "label", opacity: "opacity", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHorizontalLineComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHorizontalLineComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-horizontal-line',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], dashStyle: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoHorizontalLineModule = /** @class */ (function () {
      function DxoHorizontalLineModule() {
      }
      return DxoHorizontalLineModule;
  }());
  /** @nocollapse */ DxoHorizontalLineModule.ɵfac = function DxoHorizontalLineModule_Factory(t) { return new (t || DxoHorizontalLineModule)(); };
  /** @nocollapse */ DxoHorizontalLineModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoHorizontalLineModule });
  /** @nocollapse */ DxoHorizontalLineModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHorizontalLineModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoHorizontalLineComponent
                      ],
                      exports: [
                          DxoHorizontalLineComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoHorizontalLineModule, { declarations: [DxoHorizontalLineComponent], exports: [DxoHorizontalLineComponent] }); })();

  var DxoHoverStyleComponent = /** @class */ (function (_super) {
      __extends(DxoHoverStyleComponent, _super);
      function DxoHoverStyleComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoHoverStyleComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHoverStyleComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHoverStyleComponent.prototype, "dashStyle", {
          get: function () {
              return this._getOption('dashStyle');
          },
          set: function (value) {
              this._setOption('dashStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHoverStyleComponent.prototype, "hatching", {
          get: function () {
              return this._getOption('hatching');
          },
          set: function (value) {
              this._setOption('hatching', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHoverStyleComponent.prototype, "highlight", {
          get: function () {
              return this._getOption('highlight');
          },
          set: function (value) {
              this._setOption('highlight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHoverStyleComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHoverStyleComponent.prototype, "size", {
          get: function () {
              return this._getOption('size');
          },
          set: function (value) {
              this._setOption('size', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHoverStyleComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHoverStyleComponent.prototype, "_optionPath", {
          get: function () {
              return 'hoverStyle';
          },
          enumerable: false,
          configurable: true
      });
      DxoHoverStyleComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoHoverStyleComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoHoverStyleComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoHoverStyleComponent.ɵfac = function DxoHoverStyleComponent_Factory(t) { return new (t || DxoHoverStyleComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoHoverStyleComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoHoverStyleComponent, selectors: [["dxo-hover-style"]], inputs: { border: "border", color: "color", dashStyle: "dashStyle", hatching: "hatching", highlight: "highlight", width: "width", size: "size", opacity: "opacity" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHoverStyleComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHoverStyleComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-hover-style',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { border: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], dashStyle: [{
                  type: i0.Input
              }], hatching: [{
                  type: i0.Input
              }], highlight: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }], size: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }] });
  })();
  var DxoHoverStyleModule = /** @class */ (function () {
      function DxoHoverStyleModule() {
      }
      return DxoHoverStyleModule;
  }());
  /** @nocollapse */ DxoHoverStyleModule.ɵfac = function DxoHoverStyleModule_Factory(t) { return new (t || DxoHoverStyleModule)(); };
  /** @nocollapse */ DxoHoverStyleModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoHoverStyleModule });
  /** @nocollapse */ DxoHoverStyleModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHoverStyleModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoHoverStyleComponent
                      ],
                      exports: [
                          DxoHoverStyleComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoHoverStyleModule, { declarations: [DxoHoverStyleComponent], exports: [DxoHoverStyleComponent] }); })();

  var DxoHtmlEditorImageUpload = /** @class */ (function (_super) {
      __extends(DxoHtmlEditorImageUpload, _super);
      function DxoHtmlEditorImageUpload() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoHtmlEditorImageUpload.prototype, "fileUploaderOptions", {
          get: function () {
              return this._getOption('fileUploaderOptions');
          },
          set: function (value) {
              this._setOption('fileUploaderOptions', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHtmlEditorImageUpload.prototype, "fileUploadMode", {
          get: function () {
              return this._getOption('fileUploadMode');
          },
          set: function (value) {
              this._setOption('fileUploadMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHtmlEditorImageUpload.prototype, "tabs", {
          get: function () {
              return this._getOption('tabs');
          },
          set: function (value) {
              this._setOption('tabs', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHtmlEditorImageUpload.prototype, "uploadDirectory", {
          get: function () {
              return this._getOption('uploadDirectory');
          },
          set: function (value) {
              this._setOption('uploadDirectory', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHtmlEditorImageUpload.prototype, "uploadUrl", {
          get: function () {
              return this._getOption('uploadUrl');
          },
          set: function (value) {
              this._setOption('uploadUrl', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoHtmlEditorImageUpload;
  }(i1.NestedOption));
  /** @nocollapse */ DxoHtmlEditorImageUpload.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoHtmlEditorImageUpload_BaseFactory; return function DxoHtmlEditorImageUpload_Factory(t) { return (ɵDxoHtmlEditorImageUpload_BaseFactory || (ɵDxoHtmlEditorImageUpload_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoHtmlEditorImageUpload)))(t || DxoHtmlEditorImageUpload); }; }();
  /** @nocollapse */ DxoHtmlEditorImageUpload.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoHtmlEditorImageUpload, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHtmlEditorImageUpload_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHtmlEditorImageUpload, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoImageUploadComponent = /** @class */ (function (_super) {
      __extends(DxoImageUploadComponent, _super);
      function DxoImageUploadComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoImageUploadComponent.prototype, "_optionPath", {
          get: function () {
              return 'imageUpload';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoImageUploadComponent.prototype, "tabsChildren", {
          get: function () {
              return this._getOption('tabs');
          },
          set: function (value) {
              this.setChildren('tabs', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoImageUploadComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoImageUploadComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoImageUploadComponent;
  }(DxoHtmlEditorImageUpload));
  /** @nocollapse */ DxoImageUploadComponent.ɵfac = function DxoImageUploadComponent_Factory(t) { return new (t || DxoImageUploadComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoImageUploadComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoImageUploadComponent, selectors: [["dxo-image-upload"]], contentQueries: function DxoImageUploadComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiTabComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.tabsChildren = _t);
          }
      }, inputs: { fileUploaderOptions: "fileUploaderOptions", fileUploadMode: "fileUploadMode", tabs: "tabs", uploadDirectory: "uploadDirectory", uploadUrl: "uploadUrl" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoImageUploadComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoImageUploadComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-image-upload',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'fileUploaderOptions',
                          'fileUploadMode',
                          'tabs',
                          'uploadDirectory',
                          'uploadUrl'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { tabsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiTabComponent; })]
              }] });
  })();
  var DxoImageUploadModule = /** @class */ (function () {
      function DxoImageUploadModule() {
      }
      return DxoImageUploadModule;
  }());
  /** @nocollapse */ DxoImageUploadModule.ɵfac = function DxoImageUploadModule_Factory(t) { return new (t || DxoImageUploadModule)(); };
  /** @nocollapse */ DxoImageUploadModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoImageUploadModule });
  /** @nocollapse */ DxoImageUploadModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoImageUploadModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoImageUploadComponent
                      ],
                      exports: [
                          DxoImageUploadComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoImageUploadModule, { declarations: [DxoImageUploadComponent], exports: [DxoImageUploadComponent] }); })();

  var DxoImageComponent = /** @class */ (function (_super) {
      __extends(DxoImageComponent, _super);
      function DxoImageComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoImageComponent.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoImageComponent.prototype, "url", {
          get: function () {
              return this._getOption('url');
          },
          set: function (value) {
              this._setOption('url', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoImageComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoImageComponent.prototype, "location", {
          get: function () {
              return this._getOption('location');
          },
          set: function (value) {
              this._setOption('location', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoImageComponent.prototype, "_optionPath", {
          get: function () {
              return 'image';
          },
          enumerable: false,
          configurable: true
      });
      DxoImageComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoImageComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoImageComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoImageComponent.ɵfac = function DxoImageComponent_Factory(t) { return new (t || DxoImageComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoImageComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoImageComponent, selectors: [["dxo-image"]], inputs: { height: "height", url: "url", width: "width", location: "location" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoImageComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoImageComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-image',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { height: [{
                  type: i0.Input
              }], url: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }], location: [{
                  type: i0.Input
              }] });
  })();
  var DxoImageModule = /** @class */ (function () {
      function DxoImageModule() {
      }
      return DxoImageModule;
  }());
  /** @nocollapse */ DxoImageModule.ɵfac = function DxoImageModule_Factory(t) { return new (t || DxoImageModule)(); };
  /** @nocollapse */ DxoImageModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoImageModule });
  /** @nocollapse */ DxoImageModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoImageModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoImageComponent
                      ],
                      exports: [
                          DxoImageComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoImageModule, { declarations: [DxoImageComponent], exports: [DxoImageComponent] }); })();

  var DxoIndentComponent = /** @class */ (function (_super) {
      __extends(DxoIndentComponent, _super);
      function DxoIndentComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoIndentComponent.prototype, "left", {
          get: function () {
              return this._getOption('left');
          },
          set: function (value) {
              this._setOption('left', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoIndentComponent.prototype, "right", {
          get: function () {
              return this._getOption('right');
          },
          set: function (value) {
              this._setOption('right', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoIndentComponent.prototype, "_optionPath", {
          get: function () {
              return 'indent';
          },
          enumerable: false,
          configurable: true
      });
      DxoIndentComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoIndentComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoIndentComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoIndentComponent.ɵfac = function DxoIndentComponent_Factory(t) { return new (t || DxoIndentComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoIndentComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoIndentComponent, selectors: [["dxo-indent"]], inputs: { left: "left", right: "right" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoIndentComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoIndentComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-indent',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { left: [{
                  type: i0.Input
              }], right: [{
                  type: i0.Input
              }] });
  })();
  var DxoIndentModule = /** @class */ (function () {
      function DxoIndentModule() {
      }
      return DxoIndentModule;
  }());
  /** @nocollapse */ DxoIndentModule.ɵfac = function DxoIndentModule_Factory(t) { return new (t || DxoIndentModule)(); };
  /** @nocollapse */ DxoIndentModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoIndentModule });
  /** @nocollapse */ DxoIndentModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoIndentModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoIndentComponent
                      ],
                      exports: [
                          DxoIndentComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoIndentModule, { declarations: [DxoIndentComponent], exports: [DxoIndentComponent] }); })();

  var DxoSortableOptions = /** @class */ (function (_super) {
      __extends(DxoSortableOptions, _super);
      function DxoSortableOptions() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoSortableOptions.prototype, "allowDropInsideItem", {
          get: function () {
              return this._getOption('allowDropInsideItem');
          },
          set: function (value) {
              this._setOption('allowDropInsideItem', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "allowReordering", {
          get: function () {
              return this._getOption('allowReordering');
          },
          set: function (value) {
              this._setOption('allowReordering', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "autoScroll", {
          get: function () {
              return this._getOption('autoScroll');
          },
          set: function (value) {
              this._setOption('autoScroll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "boundary", {
          get: function () {
              return this._getOption('boundary');
          },
          set: function (value) {
              this._setOption('boundary', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "container", {
          get: function () {
              return this._getOption('container');
          },
          set: function (value) {
              this._setOption('container', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "cursorOffset", {
          get: function () {
              return this._getOption('cursorOffset');
          },
          set: function (value) {
              this._setOption('cursorOffset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "data", {
          get: function () {
              return this._getOption('data');
          },
          set: function (value) {
              this._setOption('data', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "dragDirection", {
          get: function () {
              return this._getOption('dragDirection');
          },
          set: function (value) {
              this._setOption('dragDirection', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "dragTemplate", {
          get: function () {
              return this._getOption('dragTemplate');
          },
          set: function (value) {
              this._setOption('dragTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "dropFeedbackMode", {
          get: function () {
              return this._getOption('dropFeedbackMode');
          },
          set: function (value) {
              this._setOption('dropFeedbackMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "elementAttr", {
          get: function () {
              return this._getOption('elementAttr');
          },
          set: function (value) {
              this._setOption('elementAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "filter", {
          get: function () {
              return this._getOption('filter');
          },
          set: function (value) {
              this._setOption('filter', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "group", {
          get: function () {
              return this._getOption('group');
          },
          set: function (value) {
              this._setOption('group', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "handle", {
          get: function () {
              return this._getOption('handle');
          },
          set: function (value) {
              this._setOption('handle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "itemOrientation", {
          get: function () {
              return this._getOption('itemOrientation');
          },
          set: function (value) {
              this._setOption('itemOrientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "moveItemOnDrop", {
          get: function () {
              return this._getOption('moveItemOnDrop');
          },
          set: function (value) {
              this._setOption('moveItemOnDrop', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "onAdd", {
          get: function () {
              return this._getOption('onAdd');
          },
          set: function (value) {
              this._setOption('onAdd', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "onDisposing", {
          get: function () {
              return this._getOption('onDisposing');
          },
          set: function (value) {
              this._setOption('onDisposing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "onDragChange", {
          get: function () {
              return this._getOption('onDragChange');
          },
          set: function (value) {
              this._setOption('onDragChange', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "onDragEnd", {
          get: function () {
              return this._getOption('onDragEnd');
          },
          set: function (value) {
              this._setOption('onDragEnd', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "onDragMove", {
          get: function () {
              return this._getOption('onDragMove');
          },
          set: function (value) {
              this._setOption('onDragMove', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "onDragStart", {
          get: function () {
              return this._getOption('onDragStart');
          },
          set: function (value) {
              this._setOption('onDragStart', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "onInitialized", {
          get: function () {
              return this._getOption('onInitialized');
          },
          set: function (value) {
              this._setOption('onInitialized', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "onOptionChanged", {
          get: function () {
              return this._getOption('onOptionChanged');
          },
          set: function (value) {
              this._setOption('onOptionChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "onRemove", {
          get: function () {
              return this._getOption('onRemove');
          },
          set: function (value) {
              this._setOption('onRemove', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "onReorder", {
          get: function () {
              return this._getOption('onReorder');
          },
          set: function (value) {
              this._setOption('onReorder', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "rtlEnabled", {
          get: function () {
              return this._getOption('rtlEnabled');
          },
          set: function (value) {
              this._setOption('rtlEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "scrollSensitivity", {
          get: function () {
              return this._getOption('scrollSensitivity');
          },
          set: function (value) {
              this._setOption('scrollSensitivity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "scrollSpeed", {
          get: function () {
              return this._getOption('scrollSpeed');
          },
          set: function (value) {
              this._setOption('scrollSpeed', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSortableOptions.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoSortableOptions;
  }(i1.NestedOption));
  /** @nocollapse */ DxoSortableOptions.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoSortableOptions_BaseFactory; return function DxoSortableOptions_Factory(t) { return (ɵDxoSortableOptions_BaseFactory || (ɵDxoSortableOptions_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoSortableOptions)))(t || DxoSortableOptions); }; }();
  /** @nocollapse */ DxoSortableOptions.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSortableOptions, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSortableOptions_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSortableOptions, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoItemDraggingComponent = /** @class */ (function (_super) {
      __extends(DxoItemDraggingComponent, _super);
      function DxoItemDraggingComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoItemDraggingComponent.prototype, "_optionPath", {
          get: function () {
              return 'itemDragging';
          },
          enumerable: false,
          configurable: true
      });
      DxoItemDraggingComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoItemDraggingComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoItemDraggingComponent;
  }(DxoSortableOptions));
  /** @nocollapse */ DxoItemDraggingComponent.ɵfac = function DxoItemDraggingComponent_Factory(t) { return new (t || DxoItemDraggingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoItemDraggingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoItemDraggingComponent, selectors: [["dxo-item-dragging"]], inputs: { allowDropInsideItem: "allowDropInsideItem", allowReordering: "allowReordering", autoScroll: "autoScroll", boundary: "boundary", container: "container", cursorOffset: "cursorOffset", data: "data", dragDirection: "dragDirection", dragTemplate: "dragTemplate", dropFeedbackMode: "dropFeedbackMode", elementAttr: "elementAttr", filter: "filter", group: "group", handle: "handle", height: "height", itemOrientation: "itemOrientation", moveItemOnDrop: "moveItemOnDrop", onAdd: "onAdd", onDisposing: "onDisposing", onDragChange: "onDragChange", onDragEnd: "onDragEnd", onDragMove: "onDragMove", onDragStart: "onDragStart", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", onRemove: "onRemove", onReorder: "onReorder", rtlEnabled: "rtlEnabled", scrollSensitivity: "scrollSensitivity", scrollSpeed: "scrollSpeed", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoItemDraggingComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoItemDraggingComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-item-dragging',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'allowDropInsideItem',
                          'allowReordering',
                          'autoScroll',
                          'boundary',
                          'container',
                          'cursorOffset',
                          'data',
                          'dragDirection',
                          'dragTemplate',
                          'dropFeedbackMode',
                          'elementAttr',
                          'filter',
                          'group',
                          'handle',
                          'height',
                          'itemOrientation',
                          'moveItemOnDrop',
                          'onAdd',
                          'onDisposing',
                          'onDragChange',
                          'onDragEnd',
                          'onDragMove',
                          'onDragStart',
                          'onInitialized',
                          'onOptionChanged',
                          'onRemove',
                          'onReorder',
                          'rtlEnabled',
                          'scrollSensitivity',
                          'scrollSpeed',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoItemDraggingModule = /** @class */ (function () {
      function DxoItemDraggingModule() {
      }
      return DxoItemDraggingModule;
  }());
  /** @nocollapse */ DxoItemDraggingModule.ɵfac = function DxoItemDraggingModule_Factory(t) { return new (t || DxoItemDraggingModule)(); };
  /** @nocollapse */ DxoItemDraggingModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoItemDraggingModule });
  /** @nocollapse */ DxoItemDraggingModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoItemDraggingModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoItemDraggingComponent
                      ],
                      exports: [
                          DxoItemDraggingComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoItemDraggingModule, { declarations: [DxoItemDraggingComponent], exports: [DxoItemDraggingComponent] }); })();

  var DxoItemTextFormatComponent = /** @class */ (function (_super) {
      __extends(DxoItemTextFormatComponent, _super);
      function DxoItemTextFormatComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoItemTextFormatComponent.prototype, "_optionPath", {
          get: function () {
              return 'itemTextFormat';
          },
          enumerable: false,
          configurable: true
      });
      DxoItemTextFormatComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoItemTextFormatComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoItemTextFormatComponent;
  }(DxoFormat));
  /** @nocollapse */ DxoItemTextFormatComponent.ɵfac = function DxoItemTextFormatComponent_Factory(t) { return new (t || DxoItemTextFormatComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoItemTextFormatComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoItemTextFormatComponent, selectors: [["dxo-item-text-format"]], inputs: { currency: "currency", formatter: "formatter", parser: "parser", precision: "precision", type: "type", useCurrencyAccountingStyle: "useCurrencyAccountingStyle" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoItemTextFormatComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoItemTextFormatComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-item-text-format',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'currency',
                          'formatter',
                          'parser',
                          'precision',
                          'type',
                          'useCurrencyAccountingStyle'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoItemTextFormatModule = /** @class */ (function () {
      function DxoItemTextFormatModule() {
      }
      return DxoItemTextFormatModule;
  }());
  /** @nocollapse */ DxoItemTextFormatModule.ɵfac = function DxoItemTextFormatModule_Factory(t) { return new (t || DxoItemTextFormatModule)(); };
  /** @nocollapse */ DxoItemTextFormatModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoItemTextFormatModule });
  /** @nocollapse */ DxoItemTextFormatModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoItemTextFormatModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoItemTextFormatComponent
                      ],
                      exports: [
                          DxoItemTextFormatComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoItemTextFormatModule, { declarations: [DxoItemTextFormatComponent], exports: [DxoItemTextFormatComponent] }); })();

  var DxoItemViewComponent = /** @class */ (function (_super) {
      __extends(DxoItemViewComponent, _super);
      function DxoItemViewComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoItemViewComponent.prototype, "details", {
          get: function () {
              return this._getOption('details');
          },
          set: function (value) {
              this._setOption('details', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoItemViewComponent.prototype, "mode", {
          get: function () {
              return this._getOption('mode');
          },
          set: function (value) {
              this._setOption('mode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoItemViewComponent.prototype, "showFolders", {
          get: function () {
              return this._getOption('showFolders');
          },
          set: function (value) {
              this._setOption('showFolders', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoItemViewComponent.prototype, "showParentFolder", {
          get: function () {
              return this._getOption('showParentFolder');
          },
          set: function (value) {
              this._setOption('showParentFolder', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoItemViewComponent.prototype, "_optionPath", {
          get: function () {
              return 'itemView';
          },
          enumerable: false,
          configurable: true
      });
      DxoItemViewComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoItemViewComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoItemViewComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoItemViewComponent.ɵfac = function DxoItemViewComponent_Factory(t) { return new (t || DxoItemViewComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoItemViewComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoItemViewComponent, selectors: [["dxo-item-view"]], inputs: { details: "details", mode: "mode", showFolders: "showFolders", showParentFolder: "showParentFolder" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoItemViewComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoItemViewComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-item-view',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { details: [{
                  type: i0.Input
              }], mode: [{
                  type: i0.Input
              }], showFolders: [{
                  type: i0.Input
              }], showParentFolder: [{
                  type: i0.Input
              }] });
  })();
  var DxoItemViewModule = /** @class */ (function () {
      function DxoItemViewModule() {
      }
      return DxoItemViewModule;
  }());
  /** @nocollapse */ DxoItemViewModule.ɵfac = function DxoItemViewModule_Factory(t) { return new (t || DxoItemViewModule)(); };
  /** @nocollapse */ DxoItemViewModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoItemViewModule });
  /** @nocollapse */ DxoItemViewModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoItemViewModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoItemViewComponent
                      ],
                      exports: [
                          DxoItemViewComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoItemViewModule, { declarations: [DxoItemViewComponent], exports: [DxoItemViewComponent] }); })();

  var DxoItemComponent = /** @class */ (function (_super) {
      __extends(DxoItemComponent, _super);
      function DxoItemComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoItemComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoItemComponent.prototype, "hoverStyle", {
          get: function () {
              return this._getOption('hoverStyle');
          },
          set: function (value) {
              this._setOption('hoverStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoItemComponent.prototype, "selectionStyle", {
          get: function () {
              return this._getOption('selectionStyle');
          },
          set: function (value) {
              this._setOption('selectionStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoItemComponent.prototype, "_optionPath", {
          get: function () {
              return 'item';
          },
          enumerable: false,
          configurable: true
      });
      DxoItemComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoItemComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoItemComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoItemComponent.ɵfac = function DxoItemComponent_Factory(t) { return new (t || DxoItemComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoItemComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoItemComponent, selectors: [["dxo-item"]], inputs: { border: "border", hoverStyle: "hoverStyle", selectionStyle: "selectionStyle" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoItemComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoItemComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-item',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { border: [{
                  type: i0.Input
              }], hoverStyle: [{
                  type: i0.Input
              }], selectionStyle: [{
                  type: i0.Input
              }] });
  })();
  var DxoItemModule = /** @class */ (function () {
      function DxoItemModule() {
      }
      return DxoItemModule;
  }());
  /** @nocollapse */ DxoItemModule.ɵfac = function DxoItemModule_Factory(t) { return new (t || DxoItemModule)(); };
  /** @nocollapse */ DxoItemModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoItemModule });
  /** @nocollapse */ DxoItemModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoItemModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoItemComponent
                      ],
                      exports: [
                          DxoItemComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoItemModule, { declarations: [DxoItemComponent], exports: [DxoItemComponent] }); })();

  var DxoKeyboardNavigationComponent = /** @class */ (function (_super) {
      __extends(DxoKeyboardNavigationComponent, _super);
      function DxoKeyboardNavigationComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "editOnKeyPress", {
          get: function () {
              return this._getOption('editOnKeyPress');
          },
          set: function (value) {
              this._setOption('editOnKeyPress', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "enterKeyAction", {
          get: function () {
              return this._getOption('enterKeyAction');
          },
          set: function (value) {
              this._setOption('enterKeyAction', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "enterKeyDirection", {
          get: function () {
              return this._getOption('enterKeyDirection');
          },
          set: function (value) {
              this._setOption('enterKeyDirection', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "_optionPath", {
          get: function () {
              return 'keyboardNavigation';
          },
          enumerable: false,
          configurable: true
      });
      DxoKeyboardNavigationComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoKeyboardNavigationComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoKeyboardNavigationComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoKeyboardNavigationComponent.ɵfac = function DxoKeyboardNavigationComponent_Factory(t) { return new (t || DxoKeyboardNavigationComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoKeyboardNavigationComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoKeyboardNavigationComponent, selectors: [["dxo-keyboard-navigation"]], inputs: { editOnKeyPress: "editOnKeyPress", enabled: "enabled", enterKeyAction: "enterKeyAction", enterKeyDirection: "enterKeyDirection" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoKeyboardNavigationComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoKeyboardNavigationComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-keyboard-navigation',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { editOnKeyPress: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }], enterKeyAction: [{
                  type: i0.Input
              }], enterKeyDirection: [{
                  type: i0.Input
              }] });
  })();
  var DxoKeyboardNavigationModule = /** @class */ (function () {
      function DxoKeyboardNavigationModule() {
      }
      return DxoKeyboardNavigationModule;
  }());
  /** @nocollapse */ DxoKeyboardNavigationModule.ɵfac = function DxoKeyboardNavigationModule_Factory(t) { return new (t || DxoKeyboardNavigationModule)(); };
  /** @nocollapse */ DxoKeyboardNavigationModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoKeyboardNavigationModule });
  /** @nocollapse */ DxoKeyboardNavigationModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoKeyboardNavigationModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoKeyboardNavigationComponent
                      ],
                      exports: [
                          DxoKeyboardNavigationComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoKeyboardNavigationModule, { declarations: [DxoKeyboardNavigationComponent], exports: [DxoKeyboardNavigationComponent] }); })();

  var DxoLabelComponent = /** @class */ (function (_super) {
      __extends(DxoLabelComponent, _super);
      function DxoLabelComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoLabelComponent.prototype, "connectorColor", {
          get: function () {
              return this._getOption('connectorColor');
          },
          set: function (value) {
              this._setOption('connectorColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "connectorWidth", {
          get: function () {
              return this._getOption('connectorWidth');
          },
          set: function (value) {
              this._setOption('connectorWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "customizeText", {
          get: function () {
              return this._getOption('customizeText');
          },
          set: function (value) {
              this._setOption('customizeText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "font", {
          get: function () {
              return this._getOption('font');
          },
          set: function (value) {
              this._setOption('font', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "format", {
          get: function () {
              return this._getOption('format');
          },
          set: function (value) {
              this._setOption('format', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "indent", {
          get: function () {
              return this._getOption('indent');
          },
          set: function (value) {
              this._setOption('indent', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "horizontalAlignment", {
          get: function () {
              return this._getOption('horizontalAlignment');
          },
          set: function (value) {
              this._setOption('horizontalAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "position", {
          get: function () {
              return this._getOption('position');
          },
          set: function (value) {
              this._setOption('position', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "verticalAlignment", {
          get: function () {
              return this._getOption('verticalAlignment');
          },
          set: function (value) {
              this._setOption('verticalAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "alignment", {
          get: function () {
              return this._getOption('alignment');
          },
          set: function (value) {
              this._setOption('alignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "customizeHint", {
          get: function () {
              return this._getOption('customizeHint');
          },
          set: function (value) {
              this._setOption('customizeHint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "displayMode", {
          get: function () {
              return this._getOption('displayMode');
          },
          set: function (value) {
              this._setOption('displayMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "indentFromAxis", {
          get: function () {
              return this._getOption('indentFromAxis');
          },
          set: function (value) {
              this._setOption('indentFromAxis', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "overlappingBehavior", {
          get: function () {
              return this._getOption('overlappingBehavior');
          },
          set: function (value) {
              this._setOption('overlappingBehavior', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "rotationAngle", {
          get: function () {
              return this._getOption('rotationAngle');
          },
          set: function (value) {
              this._setOption('rotationAngle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "staggeringSpacing", {
          get: function () {
              return this._getOption('staggeringSpacing');
          },
          set: function (value) {
              this._setOption('staggeringSpacing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "template", {
          get: function () {
              return this._getOption('template');
          },
          set: function (value) {
              this._setOption('template', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "textOverflow", {
          get: function () {
              return this._getOption('textOverflow');
          },
          set: function (value) {
              this._setOption('textOverflow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "wordWrap", {
          get: function () {
              return this._getOption('wordWrap');
          },
          set: function (value) {
              this._setOption('wordWrap', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "argumentFormat", {
          get: function () {
              return this._getOption('argumentFormat');
          },
          set: function (value) {
              this._setOption('argumentFormat', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "backgroundColor", {
          get: function () {
              return this._getOption('backgroundColor');
          },
          set: function (value) {
              this._setOption('backgroundColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "connector", {
          get: function () {
              return this._getOption('connector');
          },
          set: function (value) {
              this._setOption('connector', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "displayFormat", {
          get: function () {
              return this._getOption('displayFormat');
          },
          set: function (value) {
              this._setOption('displayFormat', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "horizontalOffset", {
          get: function () {
              return this._getOption('horizontalOffset');
          },
          set: function (value) {
              this._setOption('horizontalOffset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "showForZeroValues", {
          get: function () {
              return this._getOption('showForZeroValues');
          },
          set: function (value) {
              this._setOption('showForZeroValues', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "verticalOffset", {
          get: function () {
              return this._getOption('verticalOffset');
          },
          set: function (value) {
              this._setOption('verticalOffset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "hideFirstOrLast", {
          get: function () {
              return this._getOption('hideFirstOrLast');
          },
          set: function (value) {
              this._setOption('hideFirstOrLast', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "indentFromTick", {
          get: function () {
              return this._getOption('indentFromTick');
          },
          set: function (value) {
              this._setOption('indentFromTick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "useRangeColors", {
          get: function () {
              return this._getOption('useRangeColors');
          },
          set: function (value) {
              this._setOption('useRangeColors', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "location", {
          get: function () {
              return this._getOption('location');
          },
          set: function (value) {
              this._setOption('location', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "showColon", {
          get: function () {
              return this._getOption('showColon');
          },
          set: function (value) {
              this._setOption('showColon', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "radialOffset", {
          get: function () {
              return this._getOption('radialOffset');
          },
          set: function (value) {
              this._setOption('radialOffset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "topIndent", {
          get: function () {
              return this._getOption('topIndent');
          },
          set: function (value) {
              this._setOption('topIndent', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "shadow", {
          get: function () {
              return this._getOption('shadow');
          },
          set: function (value) {
              this._setOption('shadow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "useNodeColors", {
          get: function () {
              return this._getOption('useNodeColors');
          },
          set: function (value) {
              this._setOption('useNodeColors', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "dataField", {
          get: function () {
              return this._getOption('dataField');
          },
          set: function (value) {
              this._setOption('dataField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLabelComponent.prototype, "_optionPath", {
          get: function () {
              return 'label';
          },
          enumerable: false,
          configurable: true
      });
      DxoLabelComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoLabelComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoLabelComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoLabelComponent.ɵfac = function DxoLabelComponent_Factory(t) { return new (t || DxoLabelComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoLabelComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoLabelComponent, selectors: [["dxo-label"]], inputs: { connectorColor: "connectorColor", connectorWidth: "connectorWidth", customizeText: "customizeText", font: "font", format: "format", indent: "indent", visible: "visible", horizontalAlignment: "horizontalAlignment", position: "position", text: "text", verticalAlignment: "verticalAlignment", alignment: "alignment", customizeHint: "customizeHint", displayMode: "displayMode", indentFromAxis: "indentFromAxis", overlappingBehavior: "overlappingBehavior", rotationAngle: "rotationAngle", staggeringSpacing: "staggeringSpacing", template: "template", textOverflow: "textOverflow", wordWrap: "wordWrap", argumentFormat: "argumentFormat", backgroundColor: "backgroundColor", border: "border", connector: "connector", displayFormat: "displayFormat", horizontalOffset: "horizontalOffset", showForZeroValues: "showForZeroValues", verticalOffset: "verticalOffset", hideFirstOrLast: "hideFirstOrLast", indentFromTick: "indentFromTick", useRangeColors: "useRangeColors", location: "location", showColon: "showColon", radialOffset: "radialOffset", topIndent: "topIndent", shadow: "shadow", useNodeColors: "useNodeColors", dataField: "dataField", enabled: "enabled" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoLabelComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLabelComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-label',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { connectorColor: [{
                  type: i0.Input
              }], connectorWidth: [{
                  type: i0.Input
              }], customizeText: [{
                  type: i0.Input
              }], font: [{
                  type: i0.Input
              }], format: [{
                  type: i0.Input
              }], indent: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], horizontalAlignment: [{
                  type: i0.Input
              }], position: [{
                  type: i0.Input
              }], text: [{
                  type: i0.Input
              }], verticalAlignment: [{
                  type: i0.Input
              }], alignment: [{
                  type: i0.Input
              }], customizeHint: [{
                  type: i0.Input
              }], displayMode: [{
                  type: i0.Input
              }], indentFromAxis: [{
                  type: i0.Input
              }], overlappingBehavior: [{
                  type: i0.Input
              }], rotationAngle: [{
                  type: i0.Input
              }], staggeringSpacing: [{
                  type: i0.Input
              }], template: [{
                  type: i0.Input
              }], textOverflow: [{
                  type: i0.Input
              }], wordWrap: [{
                  type: i0.Input
              }], argumentFormat: [{
                  type: i0.Input
              }], backgroundColor: [{
                  type: i0.Input
              }], border: [{
                  type: i0.Input
              }], connector: [{
                  type: i0.Input
              }], displayFormat: [{
                  type: i0.Input
              }], horizontalOffset: [{
                  type: i0.Input
              }], showForZeroValues: [{
                  type: i0.Input
              }], verticalOffset: [{
                  type: i0.Input
              }], hideFirstOrLast: [{
                  type: i0.Input
              }], indentFromTick: [{
                  type: i0.Input
              }], useRangeColors: [{
                  type: i0.Input
              }], location: [{
                  type: i0.Input
              }], showColon: [{
                  type: i0.Input
              }], radialOffset: [{
                  type: i0.Input
              }], topIndent: [{
                  type: i0.Input
              }], shadow: [{
                  type: i0.Input
              }], useNodeColors: [{
                  type: i0.Input
              }], dataField: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }] });
  })();
  var DxoLabelModule = /** @class */ (function () {
      function DxoLabelModule() {
      }
      return DxoLabelModule;
  }());
  /** @nocollapse */ DxoLabelModule.ɵfac = function DxoLabelModule_Factory(t) { return new (t || DxoLabelModule)(); };
  /** @nocollapse */ DxoLabelModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoLabelModule });
  /** @nocollapse */ DxoLabelModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLabelModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoLabelComponent
                      ],
                      exports: [
                          DxoLabelComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoLabelModule, { declarations: [DxoLabelComponent], exports: [DxoLabelComponent] }); })();

  var DxiLayerComponent = /** @class */ (function (_super) {
      __extends(DxiLayerComponent, _super);
      function DxiLayerComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiLayerComponent.prototype, "borderColor", {
          get: function () {
              return this._getOption('borderColor');
          },
          set: function (value) {
              this._setOption('borderColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "borderWidth", {
          get: function () {
              return this._getOption('borderWidth');
          },
          set: function (value) {
              this._setOption('borderWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "colorGroupingField", {
          get: function () {
              return this._getOption('colorGroupingField');
          },
          set: function (value) {
              this._setOption('colorGroupingField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "colorGroups", {
          get: function () {
              return this._getOption('colorGroups');
          },
          set: function (value) {
              this._setOption('colorGroups', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "customize", {
          get: function () {
              return this._getOption('customize');
          },
          set: function (value) {
              this._setOption('customize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "dataField", {
          get: function () {
              return this._getOption('dataField');
          },
          set: function (value) {
              this._setOption('dataField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "elementType", {
          get: function () {
              return this._getOption('elementType');
          },
          set: function (value) {
              this._setOption('elementType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "hoveredBorderColor", {
          get: function () {
              return this._getOption('hoveredBorderColor');
          },
          set: function (value) {
              this._setOption('hoveredBorderColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "hoveredBorderWidth", {
          get: function () {
              return this._getOption('hoveredBorderWidth');
          },
          set: function (value) {
              this._setOption('hoveredBorderWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "hoveredColor", {
          get: function () {
              return this._getOption('hoveredColor');
          },
          set: function (value) {
              this._setOption('hoveredColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "hoverEnabled", {
          get: function () {
              return this._getOption('hoverEnabled');
          },
          set: function (value) {
              this._setOption('hoverEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "maxSize", {
          get: function () {
              return this._getOption('maxSize');
          },
          set: function (value) {
              this._setOption('maxSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "minSize", {
          get: function () {
              return this._getOption('minSize');
          },
          set: function (value) {
              this._setOption('minSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "palette", {
          get: function () {
              return this._getOption('palette');
          },
          set: function (value) {
              this._setOption('palette', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "paletteIndex", {
          get: function () {
              return this._getOption('paletteIndex');
          },
          set: function (value) {
              this._setOption('paletteIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "paletteSize", {
          get: function () {
              return this._getOption('paletteSize');
          },
          set: function (value) {
              this._setOption('paletteSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "selectedBorderColor", {
          get: function () {
              return this._getOption('selectedBorderColor');
          },
          set: function (value) {
              this._setOption('selectedBorderColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "selectedBorderWidth", {
          get: function () {
              return this._getOption('selectedBorderWidth');
          },
          set: function (value) {
              this._setOption('selectedBorderWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "selectedColor", {
          get: function () {
              return this._getOption('selectedColor');
          },
          set: function (value) {
              this._setOption('selectedColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "selectionMode", {
          get: function () {
              return this._getOption('selectionMode');
          },
          set: function (value) {
              this._setOption('selectionMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "size", {
          get: function () {
              return this._getOption('size');
          },
          set: function (value) {
              this._setOption('size', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "sizeGroupingField", {
          get: function () {
              return this._getOption('sizeGroupingField');
          },
          set: function (value) {
              this._setOption('sizeGroupingField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "sizeGroups", {
          get: function () {
              return this._getOption('sizeGroups');
          },
          set: function (value) {
              this._setOption('sizeGroups', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLayerComponent.prototype, "_optionPath", {
          get: function () {
              return 'layers';
          },
          enumerable: false,
          configurable: true
      });
      DxiLayerComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiLayerComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiLayerComponent.ɵfac = function DxiLayerComponent_Factory(t) { return new (t || DxiLayerComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiLayerComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiLayerComponent, selectors: [["dxi-layer"]], inputs: { borderColor: "borderColor", borderWidth: "borderWidth", color: "color", colorGroupingField: "colorGroupingField", colorGroups: "colorGroups", customize: "customize", dataField: "dataField", dataSource: "dataSource", elementType: "elementType", hoveredBorderColor: "hoveredBorderColor", hoveredBorderWidth: "hoveredBorderWidth", hoveredColor: "hoveredColor", hoverEnabled: "hoverEnabled", label: "label", maxSize: "maxSize", minSize: "minSize", name: "name", opacity: "opacity", palette: "palette", paletteIndex: "paletteIndex", paletteSize: "paletteSize", selectedBorderColor: "selectedBorderColor", selectedBorderWidth: "selectedBorderWidth", selectedColor: "selectedColor", selectionMode: "selectionMode", size: "size", sizeGroupingField: "sizeGroupingField", sizeGroups: "sizeGroups", type: "type" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiLayerComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiLayerComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-layer',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { borderColor: [{
                  type: i0.Input
              }], borderWidth: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], colorGroupingField: [{
                  type: i0.Input
              }], colorGroups: [{
                  type: i0.Input
              }], customize: [{
                  type: i0.Input
              }], dataField: [{
                  type: i0.Input
              }], dataSource: [{
                  type: i0.Input
              }], elementType: [{
                  type: i0.Input
              }], hoveredBorderColor: [{
                  type: i0.Input
              }], hoveredBorderWidth: [{
                  type: i0.Input
              }], hoveredColor: [{
                  type: i0.Input
              }], hoverEnabled: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], maxSize: [{
                  type: i0.Input
              }], minSize: [{
                  type: i0.Input
              }], name: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], palette: [{
                  type: i0.Input
              }], paletteIndex: [{
                  type: i0.Input
              }], paletteSize: [{
                  type: i0.Input
              }], selectedBorderColor: [{
                  type: i0.Input
              }], selectedBorderWidth: [{
                  type: i0.Input
              }], selectedColor: [{
                  type: i0.Input
              }], selectionMode: [{
                  type: i0.Input
              }], size: [{
                  type: i0.Input
              }], sizeGroupingField: [{
                  type: i0.Input
              }], sizeGroups: [{
                  type: i0.Input
              }], type: [{
                  type: i0.Input
              }] });
  })();
  var DxiLayerModule = /** @class */ (function () {
      function DxiLayerModule() {
      }
      return DxiLayerModule;
  }());
  /** @nocollapse */ DxiLayerModule.ɵfac = function DxiLayerModule_Factory(t) { return new (t || DxiLayerModule)(); };
  /** @nocollapse */ DxiLayerModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiLayerModule });
  /** @nocollapse */ DxiLayerModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiLayerModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiLayerComponent
                      ],
                      exports: [
                          DxiLayerComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiLayerModule, { declarations: [DxiLayerComponent], exports: [DxiLayerComponent] }); })();

  var DxiLegendComponent = /** @class */ (function (_super) {
      __extends(DxiLegendComponent, _super);
      function DxiLegendComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiLegendComponent.prototype, "backgroundColor", {
          get: function () {
              return this._getOption('backgroundColor');
          },
          set: function (value) {
              this._setOption('backgroundColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "columnCount", {
          get: function () {
              return this._getOption('columnCount');
          },
          set: function (value) {
              this._setOption('columnCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "columnItemSpacing", {
          get: function () {
              return this._getOption('columnItemSpacing');
          },
          set: function (value) {
              this._setOption('columnItemSpacing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "customizeHint", {
          get: function () {
              return this._getOption('customizeHint');
          },
          set: function (value) {
              this._setOption('customizeHint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "customizeItems", {
          get: function () {
              return this._getOption('customizeItems');
          },
          set: function (value) {
              this._setOption('customizeItems', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "customizeText", {
          get: function () {
              return this._getOption('customizeText');
          },
          set: function (value) {
              this._setOption('customizeText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "font", {
          get: function () {
              return this._getOption('font');
          },
          set: function (value) {
              this._setOption('font', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "horizontalAlignment", {
          get: function () {
              return this._getOption('horizontalAlignment');
          },
          set: function (value) {
              this._setOption('horizontalAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "itemsAlignment", {
          get: function () {
              return this._getOption('itemsAlignment');
          },
          set: function (value) {
              this._setOption('itemsAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "itemTextPosition", {
          get: function () {
              return this._getOption('itemTextPosition');
          },
          set: function (value) {
              this._setOption('itemTextPosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "margin", {
          get: function () {
              return this._getOption('margin');
          },
          set: function (value) {
              this._setOption('margin', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "markerColor", {
          get: function () {
              return this._getOption('markerColor');
          },
          set: function (value) {
              this._setOption('markerColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "markerShape", {
          get: function () {
              return this._getOption('markerShape');
          },
          set: function (value) {
              this._setOption('markerShape', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "markerSize", {
          get: function () {
              return this._getOption('markerSize');
          },
          set: function (value) {
              this._setOption('markerSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "markerTemplate", {
          get: function () {
              return this._getOption('markerTemplate');
          },
          set: function (value) {
              this._setOption('markerTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "orientation", {
          get: function () {
              return this._getOption('orientation');
          },
          set: function (value) {
              this._setOption('orientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "paddingLeftRight", {
          get: function () {
              return this._getOption('paddingLeftRight');
          },
          set: function (value) {
              this._setOption('paddingLeftRight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "paddingTopBottom", {
          get: function () {
              return this._getOption('paddingTopBottom');
          },
          set: function (value) {
              this._setOption('paddingTopBottom', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "rowCount", {
          get: function () {
              return this._getOption('rowCount');
          },
          set: function (value) {
              this._setOption('rowCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "rowItemSpacing", {
          get: function () {
              return this._getOption('rowItemSpacing');
          },
          set: function (value) {
              this._setOption('rowItemSpacing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "source", {
          get: function () {
              return this._getOption('source');
          },
          set: function (value) {
              this._setOption('source', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "title", {
          get: function () {
              return this._getOption('title');
          },
          set: function (value) {
              this._setOption('title', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "verticalAlignment", {
          get: function () {
              return this._getOption('verticalAlignment');
          },
          set: function (value) {
              this._setOption('verticalAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiLegendComponent.prototype, "_optionPath", {
          get: function () {
              return 'legends';
          },
          enumerable: false,
          configurable: true
      });
      DxiLegendComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiLegendComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiLegendComponent.ɵfac = function DxiLegendComponent_Factory(t) { return new (t || DxiLegendComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiLegendComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiLegendComponent, selectors: [["dxi-legend"]], inputs: { backgroundColor: "backgroundColor", border: "border", columnCount: "columnCount", columnItemSpacing: "columnItemSpacing", customizeHint: "customizeHint", customizeItems: "customizeItems", customizeText: "customizeText", font: "font", horizontalAlignment: "horizontalAlignment", itemsAlignment: "itemsAlignment", itemTextPosition: "itemTextPosition", margin: "margin", markerColor: "markerColor", markerShape: "markerShape", markerSize: "markerSize", markerTemplate: "markerTemplate", orientation: "orientation", paddingLeftRight: "paddingLeftRight", paddingTopBottom: "paddingTopBottom", rowCount: "rowCount", rowItemSpacing: "rowItemSpacing", source: "source", title: "title", verticalAlignment: "verticalAlignment", visible: "visible" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiLegendComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiLegendComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-legend',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { backgroundColor: [{
                  type: i0.Input
              }], border: [{
                  type: i0.Input
              }], columnCount: [{
                  type: i0.Input
              }], columnItemSpacing: [{
                  type: i0.Input
              }], customizeHint: [{
                  type: i0.Input
              }], customizeItems: [{
                  type: i0.Input
              }], customizeText: [{
                  type: i0.Input
              }], font: [{
                  type: i0.Input
              }], horizontalAlignment: [{
                  type: i0.Input
              }], itemsAlignment: [{
                  type: i0.Input
              }], itemTextPosition: [{
                  type: i0.Input
              }], margin: [{
                  type: i0.Input
              }], markerColor: [{
                  type: i0.Input
              }], markerShape: [{
                  type: i0.Input
              }], markerSize: [{
                  type: i0.Input
              }], markerTemplate: [{
                  type: i0.Input
              }], orientation: [{
                  type: i0.Input
              }], paddingLeftRight: [{
                  type: i0.Input
              }], paddingTopBottom: [{
                  type: i0.Input
              }], rowCount: [{
                  type: i0.Input
              }], rowItemSpacing: [{
                  type: i0.Input
              }], source: [{
                  type: i0.Input
              }], title: [{
                  type: i0.Input
              }], verticalAlignment: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }] });
  })();
  var DxiLegendModule = /** @class */ (function () {
      function DxiLegendModule() {
      }
      return DxiLegendModule;
  }());
  /** @nocollapse */ DxiLegendModule.ɵfac = function DxiLegendModule_Factory(t) { return new (t || DxiLegendModule)(); };
  /** @nocollapse */ DxiLegendModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiLegendModule });
  /** @nocollapse */ DxiLegendModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiLegendModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiLegendComponent
                      ],
                      exports: [
                          DxiLegendComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiLegendModule, { declarations: [DxiLegendComponent], exports: [DxiLegendComponent] }); })();

  var DxoLegendComponent = /** @class */ (function (_super) {
      __extends(DxoLegendComponent, _super);
      function DxoLegendComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoLegendComponent.prototype, "backgroundColor", {
          get: function () {
              return this._getOption('backgroundColor');
          },
          set: function (value) {
              this._setOption('backgroundColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "columnCount", {
          get: function () {
              return this._getOption('columnCount');
          },
          set: function (value) {
              this._setOption('columnCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "columnItemSpacing", {
          get: function () {
              return this._getOption('columnItemSpacing');
          },
          set: function (value) {
              this._setOption('columnItemSpacing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "customizeHint", {
          get: function () {
              return this._getOption('customizeHint');
          },
          set: function (value) {
              this._setOption('customizeHint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "customizeItems", {
          get: function () {
              return this._getOption('customizeItems');
          },
          set: function (value) {
              this._setOption('customizeItems', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "customizeText", {
          get: function () {
              return this._getOption('customizeText');
          },
          set: function (value) {
              this._setOption('customizeText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "font", {
          get: function () {
              return this._getOption('font');
          },
          set: function (value) {
              this._setOption('font', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "horizontalAlignment", {
          get: function () {
              return this._getOption('horizontalAlignment');
          },
          set: function (value) {
              this._setOption('horizontalAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "itemsAlignment", {
          get: function () {
              return this._getOption('itemsAlignment');
          },
          set: function (value) {
              this._setOption('itemsAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "itemTextFormat", {
          get: function () {
              return this._getOption('itemTextFormat');
          },
          set: function (value) {
              this._setOption('itemTextFormat', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "itemTextPosition", {
          get: function () {
              return this._getOption('itemTextPosition');
          },
          set: function (value) {
              this._setOption('itemTextPosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "margin", {
          get: function () {
              return this._getOption('margin');
          },
          set: function (value) {
              this._setOption('margin', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "markerSize", {
          get: function () {
              return this._getOption('markerSize');
          },
          set: function (value) {
              this._setOption('markerSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "markerTemplate", {
          get: function () {
              return this._getOption('markerTemplate');
          },
          set: function (value) {
              this._setOption('markerTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "orientation", {
          get: function () {
              return this._getOption('orientation');
          },
          set: function (value) {
              this._setOption('orientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "paddingLeftRight", {
          get: function () {
              return this._getOption('paddingLeftRight');
          },
          set: function (value) {
              this._setOption('paddingLeftRight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "paddingTopBottom", {
          get: function () {
              return this._getOption('paddingTopBottom');
          },
          set: function (value) {
              this._setOption('paddingTopBottom', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "rowCount", {
          get: function () {
              return this._getOption('rowCount');
          },
          set: function (value) {
              this._setOption('rowCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "rowItemSpacing", {
          get: function () {
              return this._getOption('rowItemSpacing');
          },
          set: function (value) {
              this._setOption('rowItemSpacing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "title", {
          get: function () {
              return this._getOption('title');
          },
          set: function (value) {
              this._setOption('title', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "verticalAlignment", {
          get: function () {
              return this._getOption('verticalAlignment');
          },
          set: function (value) {
              this._setOption('verticalAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "hoverMode", {
          get: function () {
              return this._getOption('hoverMode');
          },
          set: function (value) {
              this._setOption('hoverMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "position", {
          get: function () {
              return this._getOption('position');
          },
          set: function (value) {
              this._setOption('position', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLegendComponent.prototype, "_optionPath", {
          get: function () {
              return 'legend';
          },
          enumerable: false,
          configurable: true
      });
      DxoLegendComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoLegendComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoLegendComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoLegendComponent.ɵfac = function DxoLegendComponent_Factory(t) { return new (t || DxoLegendComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoLegendComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoLegendComponent, selectors: [["dxo-legend"]], inputs: { backgroundColor: "backgroundColor", border: "border", columnCount: "columnCount", columnItemSpacing: "columnItemSpacing", customizeHint: "customizeHint", customizeItems: "customizeItems", customizeText: "customizeText", font: "font", horizontalAlignment: "horizontalAlignment", itemsAlignment: "itemsAlignment", itemTextFormat: "itemTextFormat", itemTextPosition: "itemTextPosition", margin: "margin", markerSize: "markerSize", markerTemplate: "markerTemplate", orientation: "orientation", paddingLeftRight: "paddingLeftRight", paddingTopBottom: "paddingTopBottom", rowCount: "rowCount", rowItemSpacing: "rowItemSpacing", title: "title", verticalAlignment: "verticalAlignment", visible: "visible", hoverMode: "hoverMode", position: "position" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoLegendComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLegendComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-legend',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { backgroundColor: [{
                  type: i0.Input
              }], border: [{
                  type: i0.Input
              }], columnCount: [{
                  type: i0.Input
              }], columnItemSpacing: [{
                  type: i0.Input
              }], customizeHint: [{
                  type: i0.Input
              }], customizeItems: [{
                  type: i0.Input
              }], customizeText: [{
                  type: i0.Input
              }], font: [{
                  type: i0.Input
              }], horizontalAlignment: [{
                  type: i0.Input
              }], itemsAlignment: [{
                  type: i0.Input
              }], itemTextFormat: [{
                  type: i0.Input
              }], itemTextPosition: [{
                  type: i0.Input
              }], margin: [{
                  type: i0.Input
              }], markerSize: [{
                  type: i0.Input
              }], markerTemplate: [{
                  type: i0.Input
              }], orientation: [{
                  type: i0.Input
              }], paddingLeftRight: [{
                  type: i0.Input
              }], paddingTopBottom: [{
                  type: i0.Input
              }], rowCount: [{
                  type: i0.Input
              }], rowItemSpacing: [{
                  type: i0.Input
              }], title: [{
                  type: i0.Input
              }], verticalAlignment: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], hoverMode: [{
                  type: i0.Input
              }], position: [{
                  type: i0.Input
              }] });
  })();
  var DxoLegendModule = /** @class */ (function () {
      function DxoLegendModule() {
      }
      return DxoLegendModule;
  }());
  /** @nocollapse */ DxoLegendModule.ɵfac = function DxoLegendModule_Factory(t) { return new (t || DxoLegendModule)(); };
  /** @nocollapse */ DxoLegendModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoLegendModule });
  /** @nocollapse */ DxoLegendModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLegendModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoLegendComponent
                      ],
                      exports: [
                          DxoLegendComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoLegendModule, { declarations: [DxoLegendComponent], exports: [DxoLegendComponent] }); })();

  var DxoLineComponent = /** @class */ (function (_super) {
      __extends(DxoLineComponent, _super);
      function DxoLineComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoLineComponent.prototype, "_optionPath", {
          get: function () {
              return 'line';
          },
          enumerable: false,
          configurable: true
      });
      DxoLineComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoLineComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoLineComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoLineComponent.ɵfac = function DxoLineComponent_Factory(t) { return new (t || DxoLineComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoLineComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoLineComponent, selectors: [["dxo-line"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width", closed: "closed" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoLineComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLineComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-line',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width',
                          'closed'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoLineModule = /** @class */ (function () {
      function DxoLineModule() {
      }
      return DxoLineModule;
  }());
  /** @nocollapse */ DxoLineModule.ɵfac = function DxoLineModule_Factory(t) { return new (t || DxoLineModule)(); };
  /** @nocollapse */ DxoLineModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoLineModule });
  /** @nocollapse */ DxoLineModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLineModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoLineComponent
                      ],
                      exports: [
                          DxoLineComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoLineModule, { declarations: [DxoLineComponent], exports: [DxoLineComponent] }); })();

  var DxoLinkComponent = /** @class */ (function (_super) {
      __extends(DxoLinkComponent, _super);
      function DxoLinkComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoLinkComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLinkComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLinkComponent.prototype, "colorMode", {
          get: function () {
              return this._getOption('colorMode');
          },
          set: function (value) {
              this._setOption('colorMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLinkComponent.prototype, "hoverStyle", {
          get: function () {
              return this._getOption('hoverStyle');
          },
          set: function (value) {
              this._setOption('hoverStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLinkComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLinkComponent.prototype, "_optionPath", {
          get: function () {
              return 'link';
          },
          enumerable: false,
          configurable: true
      });
      DxoLinkComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoLinkComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoLinkComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoLinkComponent.ɵfac = function DxoLinkComponent_Factory(t) { return new (t || DxoLinkComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoLinkComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoLinkComponent, selectors: [["dxo-link"]], inputs: { border: "border", color: "color", colorMode: "colorMode", hoverStyle: "hoverStyle", opacity: "opacity" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoLinkComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLinkComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-link',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { border: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], colorMode: [{
                  type: i0.Input
              }], hoverStyle: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }] });
  })();
  var DxoLinkModule = /** @class */ (function () {
      function DxoLinkModule() {
      }
      return DxoLinkModule;
  }());
  /** @nocollapse */ DxoLinkModule.ɵfac = function DxoLinkModule_Factory(t) { return new (t || DxoLinkModule)(); };
  /** @nocollapse */ DxoLinkModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoLinkModule });
  /** @nocollapse */ DxoLinkModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLinkModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoLinkComponent
                      ],
                      exports: [
                          DxoLinkComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoLinkModule, { declarations: [DxoLinkComponent], exports: [DxoLinkComponent] }); })();

  var DxoLoadPanelComponent = /** @class */ (function (_super) {
      __extends(DxoLoadPanelComponent, _super);
      function DxoLoadPanelComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoLoadPanelComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadPanelComponent.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadPanelComponent.prototype, "indicatorSrc", {
          get: function () {
              return this._getOption('indicatorSrc');
          },
          set: function (value) {
              this._setOption('indicatorSrc', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadPanelComponent.prototype, "shading", {
          get: function () {
              return this._getOption('shading');
          },
          set: function (value) {
              this._setOption('shading', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadPanelComponent.prototype, "shadingColor", {
          get: function () {
              return this._getOption('shadingColor');
          },
          set: function (value) {
              this._setOption('shadingColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadPanelComponent.prototype, "showIndicator", {
          get: function () {
              return this._getOption('showIndicator');
          },
          set: function (value) {
              this._setOption('showIndicator', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadPanelComponent.prototype, "showPane", {
          get: function () {
              return this._getOption('showPane');
          },
          set: function (value) {
              this._setOption('showPane', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadPanelComponent.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadPanelComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadPanelComponent.prototype, "_optionPath", {
          get: function () {
              return 'loadPanel';
          },
          enumerable: false,
          configurable: true
      });
      DxoLoadPanelComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoLoadPanelComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoLoadPanelComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoLoadPanelComponent.ɵfac = function DxoLoadPanelComponent_Factory(t) { return new (t || DxoLoadPanelComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoLoadPanelComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoLoadPanelComponent, selectors: [["dxo-load-panel"]], inputs: { enabled: "enabled", height: "height", indicatorSrc: "indicatorSrc", shading: "shading", shadingColor: "shadingColor", showIndicator: "showIndicator", showPane: "showPane", text: "text", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoLoadPanelComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLoadPanelComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-load-panel',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { enabled: [{
                  type: i0.Input
              }], height: [{
                  type: i0.Input
              }], indicatorSrc: [{
                  type: i0.Input
              }], shading: [{
                  type: i0.Input
              }], shadingColor: [{
                  type: i0.Input
              }], showIndicator: [{
                  type: i0.Input
              }], showPane: [{
                  type: i0.Input
              }], text: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoLoadPanelModule = /** @class */ (function () {
      function DxoLoadPanelModule() {
      }
      return DxoLoadPanelModule;
  }());
  /** @nocollapse */ DxoLoadPanelModule.ɵfac = function DxoLoadPanelModule_Factory(t) { return new (t || DxoLoadPanelModule)(); };
  /** @nocollapse */ DxoLoadPanelModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoLoadPanelModule });
  /** @nocollapse */ DxoLoadPanelModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLoadPanelModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoLoadPanelComponent
                      ],
                      exports: [
                          DxoLoadPanelComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoLoadPanelModule, { declarations: [DxoLoadPanelComponent], exports: [DxoLoadPanelComponent] }); })();

  var DxoLoadingIndicatorComponent = /** @class */ (function (_super) {
      __extends(DxoLoadingIndicatorComponent, _super);
      function DxoLoadingIndicatorComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'showChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "backgroundColor", {
          get: function () {
              return this._getOption('backgroundColor');
          },
          set: function (value) {
              this._setOption('backgroundColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "font", {
          get: function () {
              return this._getOption('font');
          },
          set: function (value) {
              this._setOption('font', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "show", {
          get: function () {
              return this._getOption('show');
          },
          set: function (value) {
              this._setOption('show', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "_optionPath", {
          get: function () {
              return 'loadingIndicator';
          },
          enumerable: false,
          configurable: true
      });
      DxoLoadingIndicatorComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoLoadingIndicatorComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoLoadingIndicatorComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoLoadingIndicatorComponent.ɵfac = function DxoLoadingIndicatorComponent_Factory(t) { return new (t || DxoLoadingIndicatorComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoLoadingIndicatorComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoLoadingIndicatorComponent, selectors: [["dxo-loading-indicator"]], inputs: { backgroundColor: "backgroundColor", font: "font", show: "show", text: "text", enabled: "enabled" }, outputs: { showChange: "showChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoLoadingIndicatorComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLoadingIndicatorComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-loading-indicator',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { backgroundColor: [{
                  type: i0.Input
              }], font: [{
                  type: i0.Input
              }], show: [{
                  type: i0.Input
              }], text: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }], showChange: [{
                  type: i0.Output
              }] });
  })();
  var DxoLoadingIndicatorModule = /** @class */ (function () {
      function DxoLoadingIndicatorModule() {
      }
      return DxoLoadingIndicatorModule;
  }());
  /** @nocollapse */ DxoLoadingIndicatorModule.ɵfac = function DxoLoadingIndicatorModule_Factory(t) { return new (t || DxoLoadingIndicatorModule)(); };
  /** @nocollapse */ DxoLoadingIndicatorModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoLoadingIndicatorModule });
  /** @nocollapse */ DxoLoadingIndicatorModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLoadingIndicatorModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoLoadingIndicatorComponent
                      ],
                      exports: [
                          DxoLoadingIndicatorComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoLoadingIndicatorModule, { declarations: [DxoLoadingIndicatorComponent], exports: [DxoLoadingIndicatorComponent] }); })();

  var DxoLookupComponent = /** @class */ (function (_super) {
      __extends(DxoLookupComponent, _super);
      function DxoLookupComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoLookupComponent.prototype, "allowClearing", {
          get: function () {
              return this._getOption('allowClearing');
          },
          set: function (value) {
              this._setOption('allowClearing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLookupComponent.prototype, "calculateCellValue", {
          get: function () {
              return this._getOption('calculateCellValue');
          },
          set: function (value) {
              this._setOption('calculateCellValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLookupComponent.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLookupComponent.prototype, "displayExpr", {
          get: function () {
              return this._getOption('displayExpr');
          },
          set: function (value) {
              this._setOption('displayExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLookupComponent.prototype, "valueExpr", {
          get: function () {
              return this._getOption('valueExpr');
          },
          set: function (value) {
              this._setOption('valueExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoLookupComponent.prototype, "_optionPath", {
          get: function () {
              return 'lookup';
          },
          enumerable: false,
          configurable: true
      });
      DxoLookupComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoLookupComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoLookupComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoLookupComponent.ɵfac = function DxoLookupComponent_Factory(t) { return new (t || DxoLookupComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoLookupComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoLookupComponent, selectors: [["dxo-lookup"]], inputs: { allowClearing: "allowClearing", calculateCellValue: "calculateCellValue", dataSource: "dataSource", displayExpr: "displayExpr", valueExpr: "valueExpr" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoLookupComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLookupComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-lookup',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowClearing: [{
                  type: i0.Input
              }], calculateCellValue: [{
                  type: i0.Input
              }], dataSource: [{
                  type: i0.Input
              }], displayExpr: [{
                  type: i0.Input
              }], valueExpr: [{
                  type: i0.Input
              }] });
  })();
  var DxoLookupModule = /** @class */ (function () {
      function DxoLookupModule() {
      }
      return DxoLookupModule;
  }());
  /** @nocollapse */ DxoLookupModule.ɵfac = function DxoLookupModule_Factory(t) { return new (t || DxoLookupModule)(); };
  /** @nocollapse */ DxoLookupModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoLookupModule });
  /** @nocollapse */ DxoLookupModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoLookupModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoLookupComponent
                      ],
                      exports: [
                          DxoLookupComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoLookupModule, { declarations: [DxoLookupComponent], exports: [DxoLookupComponent] }); })();

  var DxoMainToolbarComponent = /** @class */ (function (_super) {
      __extends(DxoMainToolbarComponent, _super);
      function DxoMainToolbarComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoMainToolbarComponent.prototype, "commands", {
          get: function () {
              return this._getOption('commands');
          },
          set: function (value) {
              this._setOption('commands', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMainToolbarComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMainToolbarComponent.prototype, "_optionPath", {
          get: function () {
              return 'mainToolbar';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMainToolbarComponent.prototype, "commandsChildren", {
          get: function () {
              return this._getOption('commands');
          },
          set: function (value) {
              this.setChildren('commands', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoMainToolbarComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoMainToolbarComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoMainToolbarComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoMainToolbarComponent.ɵfac = function DxoMainToolbarComponent_Factory(t) { return new (t || DxoMainToolbarComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoMainToolbarComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoMainToolbarComponent, selectors: [["dxo-main-toolbar"]], contentQueries: function DxoMainToolbarComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiCommandComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.commandsChildren = _t);
          }
      }, inputs: { commands: "commands", visible: "visible" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoMainToolbarComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMainToolbarComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-main-toolbar',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { commands: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], commandsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiCommandComponent; })]
              }] });
  })();
  var DxoMainToolbarModule = /** @class */ (function () {
      function DxoMainToolbarModule() {
      }
      return DxoMainToolbarModule;
  }());
  /** @nocollapse */ DxoMainToolbarModule.ɵfac = function DxoMainToolbarModule_Factory(t) { return new (t || DxoMainToolbarModule)(); };
  /** @nocollapse */ DxoMainToolbarModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoMainToolbarModule });
  /** @nocollapse */ DxoMainToolbarModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMainToolbarModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoMainToolbarComponent
                      ],
                      exports: [
                          DxoMainToolbarComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoMainToolbarModule, { declarations: [DxoMainToolbarComponent], exports: [DxoMainToolbarComponent] }); })();

  var DxoMarginComponent = /** @class */ (function (_super) {
      __extends(DxoMarginComponent, _super);
      function DxoMarginComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoMarginComponent.prototype, "bottom", {
          get: function () {
              return this._getOption('bottom');
          },
          set: function (value) {
              this._setOption('bottom', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMarginComponent.prototype, "left", {
          get: function () {
              return this._getOption('left');
          },
          set: function (value) {
              this._setOption('left', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMarginComponent.prototype, "right", {
          get: function () {
              return this._getOption('right');
          },
          set: function (value) {
              this._setOption('right', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMarginComponent.prototype, "top", {
          get: function () {
              return this._getOption('top');
          },
          set: function (value) {
              this._setOption('top', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMarginComponent.prototype, "_optionPath", {
          get: function () {
              return 'margin';
          },
          enumerable: false,
          configurable: true
      });
      DxoMarginComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoMarginComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoMarginComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoMarginComponent.ɵfac = function DxoMarginComponent_Factory(t) { return new (t || DxoMarginComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoMarginComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoMarginComponent, selectors: [["dxo-margin"]], inputs: { bottom: "bottom", left: "left", right: "right", top: "top" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoMarginComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMarginComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-margin',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { bottom: [{
                  type: i0.Input
              }], left: [{
                  type: i0.Input
              }], right: [{
                  type: i0.Input
              }], top: [{
                  type: i0.Input
              }] });
  })();
  var DxoMarginModule = /** @class */ (function () {
      function DxoMarginModule() {
      }
      return DxoMarginModule;
  }());
  /** @nocollapse */ DxoMarginModule.ɵfac = function DxoMarginModule_Factory(t) { return new (t || DxoMarginModule)(); };
  /** @nocollapse */ DxoMarginModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoMarginModule });
  /** @nocollapse */ DxoMarginModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMarginModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoMarginComponent
                      ],
                      exports: [
                          DxoMarginComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoMarginModule, { declarations: [DxoMarginComponent], exports: [DxoMarginComponent] }); })();

  var DxiMarkerComponent = /** @class */ (function (_super) {
      __extends(DxiMarkerComponent, _super);
      function DxiMarkerComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiMarkerComponent.prototype, "iconSrc", {
          get: function () {
              return this._getOption('iconSrc');
          },
          set: function (value) {
              this._setOption('iconSrc', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiMarkerComponent.prototype, "location", {
          get: function () {
              return this._getOption('location');
          },
          set: function (value) {
              this._setOption('location', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiMarkerComponent.prototype, "onClick", {
          get: function () {
              return this._getOption('onClick');
          },
          set: function (value) {
              this._setOption('onClick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiMarkerComponent.prototype, "tooltip", {
          get: function () {
              return this._getOption('tooltip');
          },
          set: function (value) {
              this._setOption('tooltip', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiMarkerComponent.prototype, "_optionPath", {
          get: function () {
              return 'markers';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiMarkerComponent.prototype, "locationChildren", {
          get: function () {
              return this._getOption('location');
          },
          set: function (value) {
              this.setChildren('location', value);
          },
          enumerable: false,
          configurable: true
      });
      DxiMarkerComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiMarkerComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiMarkerComponent.ɵfac = function DxiMarkerComponent_Factory(t) { return new (t || DxiMarkerComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiMarkerComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiMarkerComponent, selectors: [["dxi-marker"]], contentQueries: function DxiMarkerComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiLocationComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.locationChildren = _t);
          }
      }, inputs: { iconSrc: "iconSrc", location: "location", onClick: "onClick", tooltip: "tooltip" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiMarkerComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiMarkerComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-marker',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { iconSrc: [{
                  type: i0.Input
              }], location: [{
                  type: i0.Input
              }], onClick: [{
                  type: i0.Input
              }], tooltip: [{
                  type: i0.Input
              }], locationChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiLocationComponent; })]
              }] });
  })();
  var DxiMarkerModule = /** @class */ (function () {
      function DxiMarkerModule() {
      }
      return DxiMarkerModule;
  }());
  /** @nocollapse */ DxiMarkerModule.ɵfac = function DxiMarkerModule_Factory(t) { return new (t || DxiMarkerModule)(); };
  /** @nocollapse */ DxiMarkerModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiMarkerModule });
  /** @nocollapse */ DxiMarkerModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiMarkerModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiMarkerComponent
                      ],
                      exports: [
                          DxiMarkerComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiMarkerModule, { declarations: [DxiMarkerComponent], exports: [DxiMarkerComponent] }); })();

  var DxoMarkerComponent = /** @class */ (function (_super) {
      __extends(DxoMarkerComponent, _super);
      function DxoMarkerComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoMarkerComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMarkerComponent.prototype, "separatorHeight", {
          get: function () {
              return this._getOption('separatorHeight');
          },
          set: function (value) {
              this._setOption('separatorHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMarkerComponent.prototype, "textLeftIndent", {
          get: function () {
              return this._getOption('textLeftIndent');
          },
          set: function (value) {
              this._setOption('textLeftIndent', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMarkerComponent.prototype, "textTopIndent", {
          get: function () {
              return this._getOption('textTopIndent');
          },
          set: function (value) {
              this._setOption('textTopIndent', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMarkerComponent.prototype, "topIndent", {
          get: function () {
              return this._getOption('topIndent');
          },
          set: function (value) {
              this._setOption('topIndent', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMarkerComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMarkerComponent.prototype, "_optionPath", {
          get: function () {
              return 'marker';
          },
          enumerable: false,
          configurable: true
      });
      DxoMarkerComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoMarkerComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoMarkerComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoMarkerComponent.ɵfac = function DxoMarkerComponent_Factory(t) { return new (t || DxoMarkerComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoMarkerComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoMarkerComponent, selectors: [["dxo-marker"]], inputs: { label: "label", separatorHeight: "separatorHeight", textLeftIndent: "textLeftIndent", textTopIndent: "textTopIndent", topIndent: "topIndent", visible: "visible" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoMarkerComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMarkerComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-marker',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { label: [{
                  type: i0.Input
              }], separatorHeight: [{
                  type: i0.Input
              }], textLeftIndent: [{
                  type: i0.Input
              }], textTopIndent: [{
                  type: i0.Input
              }], topIndent: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }] });
  })();
  var DxoMarkerModule = /** @class */ (function () {
      function DxoMarkerModule() {
      }
      return DxoMarkerModule;
  }());
  /** @nocollapse */ DxoMarkerModule.ɵfac = function DxoMarkerModule_Factory(t) { return new (t || DxoMarkerModule)(); };
  /** @nocollapse */ DxoMarkerModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoMarkerModule });
  /** @nocollapse */ DxoMarkerModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMarkerModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoMarkerComponent
                      ],
                      exports: [
                          DxoMarkerComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoMarkerModule, { declarations: [DxoMarkerComponent], exports: [DxoMarkerComponent] }); })();

  var _c0 = ["*"];
  var DxoMasterDetailComponent = /** @class */ (function (_super) {
      __extends(DxoMasterDetailComponent, _super);
      function DxoMasterDetailComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
          var _this = _super.call(this) || this;
          _this.renderer = renderer;
          _this.document = document;
          _this.element = element;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          templateHost.setHost(_this);
          return _this;
      }
      Object.defineProperty(DxoMasterDetailComponent.prototype, "autoExpandAll", {
          get: function () {
              return this._getOption('autoExpandAll');
          },
          set: function (value) {
              this._setOption('autoExpandAll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMasterDetailComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMasterDetailComponent.prototype, "template", {
          get: function () {
              return this._getOption('template');
          },
          set: function (value) {
              this._setOption('template', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMasterDetailComponent.prototype, "_optionPath", {
          get: function () {
              return 'masterDetail';
          },
          enumerable: false,
          configurable: true
      });
      DxoMasterDetailComponent.prototype.setTemplate = function (template) {
          this.template = template;
      };
      DxoMasterDetailComponent.prototype.ngAfterViewInit = function () {
          i1.extractTemplate(this, this.element, this.renderer, this.document);
      };
      DxoMasterDetailComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoMasterDetailComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoMasterDetailComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoMasterDetailComponent.ɵfac = function DxoMasterDetailComponent_Factory(t) { return new (t || DxoMasterDetailComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1), i0__namespace.ɵɵdirectiveInject(i0__namespace.Renderer2), i0__namespace.ɵɵdirectiveInject(common.DOCUMENT), i0__namespace.ɵɵdirectiveInject(i1__namespace.DxTemplateHost, 1), i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
  /** @nocollapse */ DxoMasterDetailComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoMasterDetailComponent, selectors: [["dxo-master-detail"]], inputs: { autoExpandAll: "autoExpandAll", enabled: "enabled", template: "template" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost, i1.DxTemplateHost]), i0__namespace.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function DxoMasterDetailComponent_Template(rf, ctx) {
          if (rf & 1) {
              i0__namespace.ɵɵprojectionDef();
              i0__namespace.ɵɵprojection(0);
          }
      }, styles: ["[_nghost-%COMP%] { display: block; }"] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMasterDetailComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-master-detail',
                      template: '<ng-content></ng-content>',
                      styles: [':host { display: block; }'],
                      providers: [i1.NestedOptionHost, i1.DxTemplateHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }, { type: i0__namespace.Renderer2 }, { type: undefined, decorators: [{
                          type: i0.Inject,
                          args: [common.DOCUMENT]
                      }] }, { type: i1__namespace.DxTemplateHost, decorators: [{
                          type: i0.Host
                      }] }, { type: i0__namespace.ElementRef }];
      }, { autoExpandAll: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }], template: [{
                  type: i0.Input
              }] });
  })();
  var DxoMasterDetailModule = /** @class */ (function () {
      function DxoMasterDetailModule() {
      }
      return DxoMasterDetailModule;
  }());
  /** @nocollapse */ DxoMasterDetailModule.ɵfac = function DxoMasterDetailModule_Factory(t) { return new (t || DxoMasterDetailModule)(); };
  /** @nocollapse */ DxoMasterDetailModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoMasterDetailModule });
  /** @nocollapse */ DxoMasterDetailModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMasterDetailModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoMasterDetailComponent
                      ],
                      exports: [
                          DxoMasterDetailComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoMasterDetailModule, { declarations: [DxoMasterDetailComponent], exports: [DxoMasterDetailComponent] }); })();

  var DxoMaxRangeComponent = /** @class */ (function (_super) {
      __extends(DxoMaxRangeComponent, _super);
      function DxoMaxRangeComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoMaxRangeComponent.prototype, "days", {
          get: function () {
              return this._getOption('days');
          },
          set: function (value) {
              this._setOption('days', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMaxRangeComponent.prototype, "hours", {
          get: function () {
              return this._getOption('hours');
          },
          set: function (value) {
              this._setOption('hours', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMaxRangeComponent.prototype, "milliseconds", {
          get: function () {
              return this._getOption('milliseconds');
          },
          set: function (value) {
              this._setOption('milliseconds', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMaxRangeComponent.prototype, "minutes", {
          get: function () {
              return this._getOption('minutes');
          },
          set: function (value) {
              this._setOption('minutes', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMaxRangeComponent.prototype, "months", {
          get: function () {
              return this._getOption('months');
          },
          set: function (value) {
              this._setOption('months', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMaxRangeComponent.prototype, "quarters", {
          get: function () {
              return this._getOption('quarters');
          },
          set: function (value) {
              this._setOption('quarters', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMaxRangeComponent.prototype, "seconds", {
          get: function () {
              return this._getOption('seconds');
          },
          set: function (value) {
              this._setOption('seconds', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMaxRangeComponent.prototype, "weeks", {
          get: function () {
              return this._getOption('weeks');
          },
          set: function (value) {
              this._setOption('weeks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMaxRangeComponent.prototype, "years", {
          get: function () {
              return this._getOption('years');
          },
          set: function (value) {
              this._setOption('years', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMaxRangeComponent.prototype, "_optionPath", {
          get: function () {
              return 'maxRange';
          },
          enumerable: false,
          configurable: true
      });
      DxoMaxRangeComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoMaxRangeComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoMaxRangeComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoMaxRangeComponent.ɵfac = function DxoMaxRangeComponent_Factory(t) { return new (t || DxoMaxRangeComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoMaxRangeComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoMaxRangeComponent, selectors: [["dxo-max-range"]], inputs: { days: "days", hours: "hours", milliseconds: "milliseconds", minutes: "minutes", months: "months", quarters: "quarters", seconds: "seconds", weeks: "weeks", years: "years" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoMaxRangeComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMaxRangeComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-max-range',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { days: [{
                  type: i0.Input
              }], hours: [{
                  type: i0.Input
              }], milliseconds: [{
                  type: i0.Input
              }], minutes: [{
                  type: i0.Input
              }], months: [{
                  type: i0.Input
              }], quarters: [{
                  type: i0.Input
              }], seconds: [{
                  type: i0.Input
              }], weeks: [{
                  type: i0.Input
              }], years: [{
                  type: i0.Input
              }] });
  })();
  var DxoMaxRangeModule = /** @class */ (function () {
      function DxoMaxRangeModule() {
      }
      return DxoMaxRangeModule;
  }());
  /** @nocollapse */ DxoMaxRangeModule.ɵfac = function DxoMaxRangeModule_Factory(t) { return new (t || DxoMaxRangeModule)(); };
  /** @nocollapse */ DxoMaxRangeModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoMaxRangeModule });
  /** @nocollapse */ DxoMaxRangeModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMaxRangeModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoMaxRangeComponent
                      ],
                      exports: [
                          DxoMaxRangeComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoMaxRangeModule, { declarations: [DxoMaxRangeComponent], exports: [DxoMaxRangeComponent] }); })();

  var DxoHtmlEditorMediaResizing = /** @class */ (function (_super) {
      __extends(DxoHtmlEditorMediaResizing, _super);
      function DxoHtmlEditorMediaResizing() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoHtmlEditorMediaResizing.prototype, "allowedTargets", {
          get: function () {
              return this._getOption('allowedTargets');
          },
          set: function (value) {
              this._setOption('allowedTargets', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHtmlEditorMediaResizing.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoHtmlEditorMediaResizing;
  }(i1.NestedOption));
  /** @nocollapse */ DxoHtmlEditorMediaResizing.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoHtmlEditorMediaResizing_BaseFactory; return function DxoHtmlEditorMediaResizing_Factory(t) { return (ɵDxoHtmlEditorMediaResizing_BaseFactory || (ɵDxoHtmlEditorMediaResizing_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoHtmlEditorMediaResizing)))(t || DxoHtmlEditorMediaResizing); }; }();
  /** @nocollapse */ DxoHtmlEditorMediaResizing.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoHtmlEditorMediaResizing, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHtmlEditorMediaResizing_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHtmlEditorMediaResizing, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoMediaResizingComponent = /** @class */ (function (_super) {
      __extends(DxoMediaResizingComponent, _super);
      function DxoMediaResizingComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoMediaResizingComponent.prototype, "_optionPath", {
          get: function () {
              return 'mediaResizing';
          },
          enumerable: false,
          configurable: true
      });
      DxoMediaResizingComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoMediaResizingComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoMediaResizingComponent;
  }(DxoHtmlEditorMediaResizing));
  /** @nocollapse */ DxoMediaResizingComponent.ɵfac = function DxoMediaResizingComponent_Factory(t) { return new (t || DxoMediaResizingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoMediaResizingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoMediaResizingComponent, selectors: [["dxo-media-resizing"]], inputs: { allowedTargets: "allowedTargets", enabled: "enabled" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoMediaResizingComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMediaResizingComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-media-resizing',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'allowedTargets',
                          'enabled'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoMediaResizingModule = /** @class */ (function () {
      function DxoMediaResizingModule() {
      }
      return DxoMediaResizingModule;
  }());
  /** @nocollapse */ DxoMediaResizingModule.ɵfac = function DxoMediaResizingModule_Factory(t) { return new (t || DxoMediaResizingModule)(); };
  /** @nocollapse */ DxoMediaResizingModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoMediaResizingModule });
  /** @nocollapse */ DxoMediaResizingModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMediaResizingModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoMediaResizingComponent
                      ],
                      exports: [
                          DxoMediaResizingComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoMediaResizingModule, { declarations: [DxoMediaResizingComponent], exports: [DxoMediaResizingComponent] }); })();

  var DxiHtmlEditorMention = /** @class */ (function (_super) {
      __extends(DxiHtmlEditorMention, _super);
      function DxiHtmlEditorMention() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiHtmlEditorMention.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorMention.prototype, "displayExpr", {
          get: function () {
              return this._getOption('displayExpr');
          },
          set: function (value) {
              this._setOption('displayExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorMention.prototype, "itemTemplate", {
          get: function () {
              return this._getOption('itemTemplate');
          },
          set: function (value) {
              this._setOption('itemTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorMention.prototype, "marker", {
          get: function () {
              return this._getOption('marker');
          },
          set: function (value) {
              this._setOption('marker', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorMention.prototype, "minSearchLength", {
          get: function () {
              return this._getOption('minSearchLength');
          },
          set: function (value) {
              this._setOption('minSearchLength', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorMention.prototype, "searchExpr", {
          get: function () {
              return this._getOption('searchExpr');
          },
          set: function (value) {
              this._setOption('searchExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorMention.prototype, "searchTimeout", {
          get: function () {
              return this._getOption('searchTimeout');
          },
          set: function (value) {
              this._setOption('searchTimeout', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorMention.prototype, "template", {
          get: function () {
              return this._getOption('template');
          },
          set: function (value) {
              this._setOption('template', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiHtmlEditorMention.prototype, "valueExpr", {
          get: function () {
              return this._getOption('valueExpr');
          },
          set: function (value) {
              this._setOption('valueExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiHtmlEditorMention;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiHtmlEditorMention.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiHtmlEditorMention_BaseFactory; return function DxiHtmlEditorMention_Factory(t) { return (ɵDxiHtmlEditorMention_BaseFactory || (ɵDxiHtmlEditorMention_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiHtmlEditorMention)))(t || DxiHtmlEditorMention); }; }();
  /** @nocollapse */ DxiHtmlEditorMention.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiHtmlEditorMention, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiHtmlEditorMention_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiHtmlEditorMention, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiMentionComponent = /** @class */ (function (_super) {
      __extends(DxiMentionComponent, _super);
      function DxiMentionComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiMentionComponent.prototype, "_optionPath", {
          get: function () {
              return 'mentions';
          },
          enumerable: false,
          configurable: true
      });
      DxiMentionComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiMentionComponent;
  }(DxiHtmlEditorMention));
  /** @nocollapse */ DxiMentionComponent.ɵfac = function DxiMentionComponent_Factory(t) { return new (t || DxiMentionComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiMentionComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiMentionComponent, selectors: [["dxi-mention"]], inputs: { dataSource: "dataSource", displayExpr: "displayExpr", itemTemplate: "itemTemplate", marker: "marker", minSearchLength: "minSearchLength", searchExpr: "searchExpr", searchTimeout: "searchTimeout", template: "template", valueExpr: "valueExpr" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiMentionComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiMentionComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-mention',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'dataSource',
                          'displayExpr',
                          'itemTemplate',
                          'marker',
                          'minSearchLength',
                          'searchExpr',
                          'searchTimeout',
                          'template',
                          'valueExpr'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxiMentionModule = /** @class */ (function () {
      function DxiMentionModule() {
      }
      return DxiMentionModule;
  }());
  /** @nocollapse */ DxiMentionModule.ɵfac = function DxiMentionModule_Factory(t) { return new (t || DxiMentionModule)(); };
  /** @nocollapse */ DxiMentionModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiMentionModule });
  /** @nocollapse */ DxiMentionModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiMentionModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiMentionComponent
                      ],
                      exports: [
                          DxiMentionComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiMentionModule, { declarations: [DxiMentionComponent], exports: [DxiMentionComponent] }); })();

  var DxiMenuItemComponent = /** @class */ (function (_super) {
      __extends(DxiMenuItemComponent, _super);
      function DxiMenuItemComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiMenuItemComponent.prototype, "action", {
          get: function () {
              return this._getOption('action');
          },
          set: function (value) {
              this._setOption('action', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiMenuItemComponent.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiMenuItemComponent.prototype, "_optionPath", {
          get: function () {
              return 'menuItems';
          },
          enumerable: false,
          configurable: true
      });
      DxiMenuItemComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiMenuItemComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiMenuItemComponent.ɵfac = function DxiMenuItemComponent_Factory(t) { return new (t || DxiMenuItemComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiMenuItemComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiMenuItemComponent, selectors: [["dxi-menu-item"]], inputs: { action: "action", text: "text" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiMenuItemComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiMenuItemComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-menu-item',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { action: [{
                  type: i0.Input
              }], text: [{
                  type: i0.Input
              }] });
  })();
  var DxiMenuItemModule = /** @class */ (function () {
      function DxiMenuItemModule() {
      }
      return DxiMenuItemModule;
  }());
  /** @nocollapse */ DxiMenuItemModule.ɵfac = function DxiMenuItemModule_Factory(t) { return new (t || DxiMenuItemModule)(); };
  /** @nocollapse */ DxiMenuItemModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiMenuItemModule });
  /** @nocollapse */ DxiMenuItemModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiMenuItemModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiMenuItemComponent
                      ],
                      exports: [
                          DxiMenuItemComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiMenuItemModule, { declarations: [DxiMenuItemComponent], exports: [DxiMenuItemComponent] }); })();

  var DxoMinRangeComponent = /** @class */ (function (_super) {
      __extends(DxoMinRangeComponent, _super);
      function DxoMinRangeComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoMinRangeComponent.prototype, "days", {
          get: function () {
              return this._getOption('days');
          },
          set: function (value) {
              this._setOption('days', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinRangeComponent.prototype, "hours", {
          get: function () {
              return this._getOption('hours');
          },
          set: function (value) {
              this._setOption('hours', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinRangeComponent.prototype, "milliseconds", {
          get: function () {
              return this._getOption('milliseconds');
          },
          set: function (value) {
              this._setOption('milliseconds', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinRangeComponent.prototype, "minutes", {
          get: function () {
              return this._getOption('minutes');
          },
          set: function (value) {
              this._setOption('minutes', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinRangeComponent.prototype, "months", {
          get: function () {
              return this._getOption('months');
          },
          set: function (value) {
              this._setOption('months', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinRangeComponent.prototype, "quarters", {
          get: function () {
              return this._getOption('quarters');
          },
          set: function (value) {
              this._setOption('quarters', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinRangeComponent.prototype, "seconds", {
          get: function () {
              return this._getOption('seconds');
          },
          set: function (value) {
              this._setOption('seconds', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinRangeComponent.prototype, "weeks", {
          get: function () {
              return this._getOption('weeks');
          },
          set: function (value) {
              this._setOption('weeks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinRangeComponent.prototype, "years", {
          get: function () {
              return this._getOption('years');
          },
          set: function (value) {
              this._setOption('years', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinRangeComponent.prototype, "_optionPath", {
          get: function () {
              return 'minRange';
          },
          enumerable: false,
          configurable: true
      });
      DxoMinRangeComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoMinRangeComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoMinRangeComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoMinRangeComponent.ɵfac = function DxoMinRangeComponent_Factory(t) { return new (t || DxoMinRangeComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoMinRangeComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoMinRangeComponent, selectors: [["dxo-min-range"]], inputs: { days: "days", hours: "hours", milliseconds: "milliseconds", minutes: "minutes", months: "months", quarters: "quarters", seconds: "seconds", weeks: "weeks", years: "years" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoMinRangeComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMinRangeComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-min-range',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { days: [{
                  type: i0.Input
              }], hours: [{
                  type: i0.Input
              }], milliseconds: [{
                  type: i0.Input
              }], minutes: [{
                  type: i0.Input
              }], months: [{
                  type: i0.Input
              }], quarters: [{
                  type: i0.Input
              }], seconds: [{
                  type: i0.Input
              }], weeks: [{
                  type: i0.Input
              }], years: [{
                  type: i0.Input
              }] });
  })();
  var DxoMinRangeModule = /** @class */ (function () {
      function DxoMinRangeModule() {
      }
      return DxoMinRangeModule;
  }());
  /** @nocollapse */ DxoMinRangeModule.ɵfac = function DxoMinRangeModule_Factory(t) { return new (t || DxoMinRangeModule)(); };
  /** @nocollapse */ DxoMinRangeModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoMinRangeModule });
  /** @nocollapse */ DxoMinRangeModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMinRangeModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoMinRangeComponent
                      ],
                      exports: [
                          DxoMinRangeComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoMinRangeModule, { declarations: [DxoMinRangeComponent], exports: [DxoMinRangeComponent] }); })();

  var DxoMinVisualRangeLengthComponent = /** @class */ (function (_super) {
      __extends(DxoMinVisualRangeLengthComponent, _super);
      function DxoMinVisualRangeLengthComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "days", {
          get: function () {
              return this._getOption('days');
          },
          set: function (value) {
              this._setOption('days', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "hours", {
          get: function () {
              return this._getOption('hours');
          },
          set: function (value) {
              this._setOption('hours', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "milliseconds", {
          get: function () {
              return this._getOption('milliseconds');
          },
          set: function (value) {
              this._setOption('milliseconds', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "minutes", {
          get: function () {
              return this._getOption('minutes');
          },
          set: function (value) {
              this._setOption('minutes', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "months", {
          get: function () {
              return this._getOption('months');
          },
          set: function (value) {
              this._setOption('months', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "quarters", {
          get: function () {
              return this._getOption('quarters');
          },
          set: function (value) {
              this._setOption('quarters', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "seconds", {
          get: function () {
              return this._getOption('seconds');
          },
          set: function (value) {
              this._setOption('seconds', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "weeks", {
          get: function () {
              return this._getOption('weeks');
          },
          set: function (value) {
              this._setOption('weeks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "years", {
          get: function () {
              return this._getOption('years');
          },
          set: function (value) {
              this._setOption('years', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "_optionPath", {
          get: function () {
              return 'minVisualRangeLength';
          },
          enumerable: false,
          configurable: true
      });
      DxoMinVisualRangeLengthComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoMinVisualRangeLengthComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoMinVisualRangeLengthComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoMinVisualRangeLengthComponent.ɵfac = function DxoMinVisualRangeLengthComponent_Factory(t) { return new (t || DxoMinVisualRangeLengthComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoMinVisualRangeLengthComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoMinVisualRangeLengthComponent, selectors: [["dxo-min-visual-range-length"]], inputs: { days: "days", hours: "hours", milliseconds: "milliseconds", minutes: "minutes", months: "months", quarters: "quarters", seconds: "seconds", weeks: "weeks", years: "years" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoMinVisualRangeLengthComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMinVisualRangeLengthComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-min-visual-range-length',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { days: [{
                  type: i0.Input
              }], hours: [{
                  type: i0.Input
              }], milliseconds: [{
                  type: i0.Input
              }], minutes: [{
                  type: i0.Input
              }], months: [{
                  type: i0.Input
              }], quarters: [{
                  type: i0.Input
              }], seconds: [{
                  type: i0.Input
              }], weeks: [{
                  type: i0.Input
              }], years: [{
                  type: i0.Input
              }] });
  })();
  var DxoMinVisualRangeLengthModule = /** @class */ (function () {
      function DxoMinVisualRangeLengthModule() {
      }
      return DxoMinVisualRangeLengthModule;
  }());
  /** @nocollapse */ DxoMinVisualRangeLengthModule.ɵfac = function DxoMinVisualRangeLengthModule_Factory(t) { return new (t || DxoMinVisualRangeLengthModule)(); };
  /** @nocollapse */ DxoMinVisualRangeLengthModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoMinVisualRangeLengthModule });
  /** @nocollapse */ DxoMinVisualRangeLengthModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMinVisualRangeLengthModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoMinVisualRangeLengthComponent
                      ],
                      exports: [
                          DxoMinVisualRangeLengthComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoMinVisualRangeLengthModule, { declarations: [DxoMinVisualRangeLengthComponent], exports: [DxoMinVisualRangeLengthComponent] }); })();

  var DxoMinorGridComponent = /** @class */ (function (_super) {
      __extends(DxoMinorGridComponent, _super);
      function DxoMinorGridComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoMinorGridComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorGridComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorGridComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorGridComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorGridComponent.prototype, "_optionPath", {
          get: function () {
              return 'minorGrid';
          },
          enumerable: false,
          configurable: true
      });
      DxoMinorGridComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoMinorGridComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoMinorGridComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoMinorGridComponent.ɵfac = function DxoMinorGridComponent_Factory(t) { return new (t || DxoMinorGridComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoMinorGridComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoMinorGridComponent, selectors: [["dxo-minor-grid"]], inputs: { color: "color", opacity: "opacity", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoMinorGridComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMinorGridComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-minor-grid',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoMinorGridModule = /** @class */ (function () {
      function DxoMinorGridModule() {
      }
      return DxoMinorGridModule;
  }());
  /** @nocollapse */ DxoMinorGridModule.ɵfac = function DxoMinorGridModule_Factory(t) { return new (t || DxoMinorGridModule)(); };
  /** @nocollapse */ DxoMinorGridModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoMinorGridModule });
  /** @nocollapse */ DxoMinorGridModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMinorGridModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoMinorGridComponent
                      ],
                      exports: [
                          DxoMinorGridComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoMinorGridModule, { declarations: [DxoMinorGridComponent], exports: [DxoMinorGridComponent] }); })();

  var DxoMinorTickIntervalComponent = /** @class */ (function (_super) {
      __extends(DxoMinorTickIntervalComponent, _super);
      function DxoMinorTickIntervalComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "days", {
          get: function () {
              return this._getOption('days');
          },
          set: function (value) {
              this._setOption('days', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "hours", {
          get: function () {
              return this._getOption('hours');
          },
          set: function (value) {
              this._setOption('hours', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "milliseconds", {
          get: function () {
              return this._getOption('milliseconds');
          },
          set: function (value) {
              this._setOption('milliseconds', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "minutes", {
          get: function () {
              return this._getOption('minutes');
          },
          set: function (value) {
              this._setOption('minutes', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "months", {
          get: function () {
              return this._getOption('months');
          },
          set: function (value) {
              this._setOption('months', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "quarters", {
          get: function () {
              return this._getOption('quarters');
          },
          set: function (value) {
              this._setOption('quarters', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "seconds", {
          get: function () {
              return this._getOption('seconds');
          },
          set: function (value) {
              this._setOption('seconds', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "weeks", {
          get: function () {
              return this._getOption('weeks');
          },
          set: function (value) {
              this._setOption('weeks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "years", {
          get: function () {
              return this._getOption('years');
          },
          set: function (value) {
              this._setOption('years', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "_optionPath", {
          get: function () {
              return 'minorTickInterval';
          },
          enumerable: false,
          configurable: true
      });
      DxoMinorTickIntervalComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoMinorTickIntervalComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoMinorTickIntervalComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoMinorTickIntervalComponent.ɵfac = function DxoMinorTickIntervalComponent_Factory(t) { return new (t || DxoMinorTickIntervalComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoMinorTickIntervalComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoMinorTickIntervalComponent, selectors: [["dxo-minor-tick-interval"]], inputs: { days: "days", hours: "hours", milliseconds: "milliseconds", minutes: "minutes", months: "months", quarters: "quarters", seconds: "seconds", weeks: "weeks", years: "years" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoMinorTickIntervalComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMinorTickIntervalComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-minor-tick-interval',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { days: [{
                  type: i0.Input
              }], hours: [{
                  type: i0.Input
              }], milliseconds: [{
                  type: i0.Input
              }], minutes: [{
                  type: i0.Input
              }], months: [{
                  type: i0.Input
              }], quarters: [{
                  type: i0.Input
              }], seconds: [{
                  type: i0.Input
              }], weeks: [{
                  type: i0.Input
              }], years: [{
                  type: i0.Input
              }] });
  })();
  var DxoMinorTickIntervalModule = /** @class */ (function () {
      function DxoMinorTickIntervalModule() {
      }
      return DxoMinorTickIntervalModule;
  }());
  /** @nocollapse */ DxoMinorTickIntervalModule.ɵfac = function DxoMinorTickIntervalModule_Factory(t) { return new (t || DxoMinorTickIntervalModule)(); };
  /** @nocollapse */ DxoMinorTickIntervalModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoMinorTickIntervalModule });
  /** @nocollapse */ DxoMinorTickIntervalModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMinorTickIntervalModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoMinorTickIntervalComponent
                      ],
                      exports: [
                          DxoMinorTickIntervalComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoMinorTickIntervalModule, { declarations: [DxoMinorTickIntervalComponent], exports: [DxoMinorTickIntervalComponent] }); })();

  var DxoMinorTickComponent = /** @class */ (function (_super) {
      __extends(DxoMinorTickComponent, _super);
      function DxoMinorTickComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoMinorTickComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickComponent.prototype, "length", {
          get: function () {
              return this._getOption('length');
          },
          set: function (value) {
              this._setOption('length', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickComponent.prototype, "shift", {
          get: function () {
              return this._getOption('shift');
          },
          set: function (value) {
              this._setOption('shift', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMinorTickComponent.prototype, "_optionPath", {
          get: function () {
              return 'minorTick';
          },
          enumerable: false,
          configurable: true
      });
      DxoMinorTickComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoMinorTickComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoMinorTickComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoMinorTickComponent.ɵfac = function DxoMinorTickComponent_Factory(t) { return new (t || DxoMinorTickComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoMinorTickComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoMinorTickComponent, selectors: [["dxo-minor-tick"]], inputs: { color: "color", length: "length", opacity: "opacity", shift: "shift", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoMinorTickComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMinorTickComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-minor-tick',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], length: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], shift: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoMinorTickModule = /** @class */ (function () {
      function DxoMinorTickModule() {
      }
      return DxoMinorTickModule;
  }());
  /** @nocollapse */ DxoMinorTickModule.ɵfac = function DxoMinorTickModule_Factory(t) { return new (t || DxoMinorTickModule)(); };
  /** @nocollapse */ DxoMinorTickModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoMinorTickModule });
  /** @nocollapse */ DxoMinorTickModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMinorTickModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoMinorTickComponent
                      ],
                      exports: [
                          DxoMinorTickComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoMinorTickModule, { declarations: [DxoMinorTickComponent], exports: [DxoMinorTickComponent] }); })();

  var DxoMyComponent = /** @class */ (function (_super) {
      __extends(DxoMyComponent, _super);
      function DxoMyComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoMyComponent.prototype, "x", {
          get: function () {
              return this._getOption('x');
          },
          set: function (value) {
              this._setOption('x', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMyComponent.prototype, "y", {
          get: function () {
              return this._getOption('y');
          },
          set: function (value) {
              this._setOption('y', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoMyComponent.prototype, "_optionPath", {
          get: function () {
              return 'my';
          },
          enumerable: false,
          configurable: true
      });
      DxoMyComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoMyComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoMyComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoMyComponent.ɵfac = function DxoMyComponent_Factory(t) { return new (t || DxoMyComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoMyComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoMyComponent, selectors: [["dxo-my"]], inputs: { x: "x", y: "y" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoMyComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMyComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-my',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { x: [{
                  type: i0.Input
              }], y: [{
                  type: i0.Input
              }] });
  })();
  var DxoMyModule = /** @class */ (function () {
      function DxoMyModule() {
      }
      return DxoMyModule;
  }());
  /** @nocollapse */ DxoMyModule.ɵfac = function DxoMyModule_Factory(t) { return new (t || DxoMyModule)(); };
  /** @nocollapse */ DxoMyModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoMyModule });
  /** @nocollapse */ DxoMyModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoMyModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoMyComponent
                      ],
                      exports: [
                          DxoMyComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoMyModule, { declarations: [DxoMyComponent], exports: [DxoMyComponent] }); })();

  var DxoNodeComponent = /** @class */ (function (_super) {
      __extends(DxoNodeComponent, _super);
      function DxoNodeComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoNodeComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodeComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodeComponent.prototype, "hoverStyle", {
          get: function () {
              return this._getOption('hoverStyle');
          },
          set: function (value) {
              this._setOption('hoverStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodeComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodeComponent.prototype, "padding", {
          get: function () {
              return this._getOption('padding');
          },
          set: function (value) {
              this._setOption('padding', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodeComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodeComponent.prototype, "_optionPath", {
          get: function () {
              return 'node';
          },
          enumerable: false,
          configurable: true
      });
      DxoNodeComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoNodeComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoNodeComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoNodeComponent.ɵfac = function DxoNodeComponent_Factory(t) { return new (t || DxoNodeComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoNodeComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoNodeComponent, selectors: [["dxo-node"]], inputs: { border: "border", color: "color", hoverStyle: "hoverStyle", opacity: "opacity", padding: "padding", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoNodeComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoNodeComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-node',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { border: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], hoverStyle: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], padding: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoNodeModule = /** @class */ (function () {
      function DxoNodeModule() {
      }
      return DxoNodeModule;
  }());
  /** @nocollapse */ DxoNodeModule.ɵfac = function DxoNodeModule_Factory(t) { return new (t || DxoNodeModule)(); };
  /** @nocollapse */ DxoNodeModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoNodeModule });
  /** @nocollapse */ DxoNodeModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoNodeModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoNodeComponent
                      ],
                      exports: [
                          DxoNodeComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoNodeModule, { declarations: [DxoNodeComponent], exports: [DxoNodeComponent] }); })();

  var DxoNodesComponent = /** @class */ (function (_super) {
      __extends(DxoNodesComponent, _super);
      function DxoNodesComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoNodesComponent.prototype, "autoLayout", {
          get: function () {
              return this._getOption('autoLayout');
          },
          set: function (value) {
              this._setOption('autoLayout', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "autoSizeEnabled", {
          get: function () {
              return this._getOption('autoSizeEnabled');
          },
          set: function (value) {
              this._setOption('autoSizeEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "containerChildrenExpr", {
          get: function () {
              return this._getOption('containerChildrenExpr');
          },
          set: function (value) {
              this._setOption('containerChildrenExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "containerKeyExpr", {
          get: function () {
              return this._getOption('containerKeyExpr');
          },
          set: function (value) {
              this._setOption('containerKeyExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "customDataExpr", {
          get: function () {
              return this._getOption('customDataExpr');
          },
          set: function (value) {
              this._setOption('customDataExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "heightExpr", {
          get: function () {
              return this._getOption('heightExpr');
          },
          set: function (value) {
              this._setOption('heightExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "imageUrlExpr", {
          get: function () {
              return this._getOption('imageUrlExpr');
          },
          set: function (value) {
              this._setOption('imageUrlExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "itemsExpr", {
          get: function () {
              return this._getOption('itemsExpr');
          },
          set: function (value) {
              this._setOption('itemsExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "keyExpr", {
          get: function () {
              return this._getOption('keyExpr');
          },
          set: function (value) {
              this._setOption('keyExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "leftExpr", {
          get: function () {
              return this._getOption('leftExpr');
          },
          set: function (value) {
              this._setOption('leftExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "lockedExpr", {
          get: function () {
              return this._getOption('lockedExpr');
          },
          set: function (value) {
              this._setOption('lockedExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "parentKeyExpr", {
          get: function () {
              return this._getOption('parentKeyExpr');
          },
          set: function (value) {
              this._setOption('parentKeyExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "styleExpr", {
          get: function () {
              return this._getOption('styleExpr');
          },
          set: function (value) {
              this._setOption('styleExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "textExpr", {
          get: function () {
              return this._getOption('textExpr');
          },
          set: function (value) {
              this._setOption('textExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "textStyleExpr", {
          get: function () {
              return this._getOption('textStyleExpr');
          },
          set: function (value) {
              this._setOption('textStyleExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "topExpr", {
          get: function () {
              return this._getOption('topExpr');
          },
          set: function (value) {
              this._setOption('topExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "typeExpr", {
          get: function () {
              return this._getOption('typeExpr');
          },
          set: function (value) {
              this._setOption('typeExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "widthExpr", {
          get: function () {
              return this._getOption('widthExpr');
          },
          set: function (value) {
              this._setOption('widthExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "zIndexExpr", {
          get: function () {
              return this._getOption('zIndexExpr');
          },
          set: function (value) {
              this._setOption('zIndexExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNodesComponent.prototype, "_optionPath", {
          get: function () {
              return 'nodes';
          },
          enumerable: false,
          configurable: true
      });
      DxoNodesComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoNodesComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoNodesComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoNodesComponent.ɵfac = function DxoNodesComponent_Factory(t) { return new (t || DxoNodesComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoNodesComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoNodesComponent, selectors: [["dxo-nodes"]], inputs: { autoLayout: "autoLayout", autoSizeEnabled: "autoSizeEnabled", containerChildrenExpr: "containerChildrenExpr", containerKeyExpr: "containerKeyExpr", customDataExpr: "customDataExpr", dataSource: "dataSource", heightExpr: "heightExpr", imageUrlExpr: "imageUrlExpr", itemsExpr: "itemsExpr", keyExpr: "keyExpr", leftExpr: "leftExpr", lockedExpr: "lockedExpr", parentKeyExpr: "parentKeyExpr", styleExpr: "styleExpr", textExpr: "textExpr", textStyleExpr: "textStyleExpr", topExpr: "topExpr", typeExpr: "typeExpr", widthExpr: "widthExpr", zIndexExpr: "zIndexExpr" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoNodesComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoNodesComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-nodes',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { autoLayout: [{
                  type: i0.Input
              }], autoSizeEnabled: [{
                  type: i0.Input
              }], containerChildrenExpr: [{
                  type: i0.Input
              }], containerKeyExpr: [{
                  type: i0.Input
              }], customDataExpr: [{
                  type: i0.Input
              }], dataSource: [{
                  type: i0.Input
              }], heightExpr: [{
                  type: i0.Input
              }], imageUrlExpr: [{
                  type: i0.Input
              }], itemsExpr: [{
                  type: i0.Input
              }], keyExpr: [{
                  type: i0.Input
              }], leftExpr: [{
                  type: i0.Input
              }], lockedExpr: [{
                  type: i0.Input
              }], parentKeyExpr: [{
                  type: i0.Input
              }], styleExpr: [{
                  type: i0.Input
              }], textExpr: [{
                  type: i0.Input
              }], textStyleExpr: [{
                  type: i0.Input
              }], topExpr: [{
                  type: i0.Input
              }], typeExpr: [{
                  type: i0.Input
              }], widthExpr: [{
                  type: i0.Input
              }], zIndexExpr: [{
                  type: i0.Input
              }] });
  })();
  var DxoNodesModule = /** @class */ (function () {
      function DxoNodesModule() {
      }
      return DxoNodesModule;
  }());
  /** @nocollapse */ DxoNodesModule.ɵfac = function DxoNodesModule_Factory(t) { return new (t || DxoNodesModule)(); };
  /** @nocollapse */ DxoNodesModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoNodesModule });
  /** @nocollapse */ DxoNodesModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoNodesModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoNodesComponent
                      ],
                      exports: [
                          DxoNodesComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoNodesModule, { declarations: [DxoNodesComponent], exports: [DxoNodesComponent] }); })();

  var DxoNotificationsComponent = /** @class */ (function (_super) {
      __extends(DxoNotificationsComponent, _super);
      function DxoNotificationsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoNotificationsComponent.prototype, "showPanel", {
          get: function () {
              return this._getOption('showPanel');
          },
          set: function (value) {
              this._setOption('showPanel', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNotificationsComponent.prototype, "showPopup", {
          get: function () {
              return this._getOption('showPopup');
          },
          set: function (value) {
              this._setOption('showPopup', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoNotificationsComponent.prototype, "_optionPath", {
          get: function () {
              return 'notifications';
          },
          enumerable: false,
          configurable: true
      });
      DxoNotificationsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoNotificationsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoNotificationsComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoNotificationsComponent.ɵfac = function DxoNotificationsComponent_Factory(t) { return new (t || DxoNotificationsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoNotificationsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoNotificationsComponent, selectors: [["dxo-notifications"]], inputs: { showPanel: "showPanel", showPopup: "showPopup" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoNotificationsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoNotificationsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-notifications',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { showPanel: [{
                  type: i0.Input
              }], showPopup: [{
                  type: i0.Input
              }] });
  })();
  var DxoNotificationsModule = /** @class */ (function () {
      function DxoNotificationsModule() {
      }
      return DxoNotificationsModule;
  }());
  /** @nocollapse */ DxoNotificationsModule.ɵfac = function DxoNotificationsModule_Factory(t) { return new (t || DxoNotificationsModule)(); };
  /** @nocollapse */ DxoNotificationsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoNotificationsModule });
  /** @nocollapse */ DxoNotificationsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoNotificationsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoNotificationsComponent
                      ],
                      exports: [
                          DxoNotificationsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoNotificationsModule, { declarations: [DxoNotificationsComponent], exports: [DxoNotificationsComponent] }); })();

  var DxoOffsetComponent = /** @class */ (function (_super) {
      __extends(DxoOffsetComponent, _super);
      function DxoOffsetComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoOffsetComponent.prototype, "x", {
          get: function () {
              return this._getOption('x');
          },
          set: function (value) {
              this._setOption('x', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoOffsetComponent.prototype, "y", {
          get: function () {
              return this._getOption('y');
          },
          set: function (value) {
              this._setOption('y', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoOffsetComponent.prototype, "_optionPath", {
          get: function () {
              return 'offset';
          },
          enumerable: false,
          configurable: true
      });
      DxoOffsetComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoOffsetComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoOffsetComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoOffsetComponent.ɵfac = function DxoOffsetComponent_Factory(t) { return new (t || DxoOffsetComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoOffsetComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoOffsetComponent, selectors: [["dxo-offset"]], inputs: { x: "x", y: "y" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoOffsetComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoOffsetComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-offset',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { x: [{
                  type: i0.Input
              }], y: [{
                  type: i0.Input
              }] });
  })();
  var DxoOffsetModule = /** @class */ (function () {
      function DxoOffsetModule() {
      }
      return DxoOffsetModule;
  }());
  /** @nocollapse */ DxoOffsetModule.ɵfac = function DxoOffsetModule_Factory(t) { return new (t || DxoOffsetModule)(); };
  /** @nocollapse */ DxoOffsetModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoOffsetModule });
  /** @nocollapse */ DxoOffsetModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoOffsetModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoOffsetComponent
                      ],
                      exports: [
                          DxoOffsetComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoOffsetModule, { declarations: [DxoOffsetComponent], exports: [DxoOffsetComponent] }); })();

  var DxoGanttFilterRowOperationDescriptions = /** @class */ (function (_super) {
      __extends(DxoGanttFilterRowOperationDescriptions, _super);
      function DxoGanttFilterRowOperationDescriptions() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoGanttFilterRowOperationDescriptions.prototype, "between", {
          get: function () {
              return this._getOption('between');
          },
          set: function (value) {
              this._setOption('between', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRowOperationDescriptions.prototype, "contains", {
          get: function () {
              return this._getOption('contains');
          },
          set: function (value) {
              this._setOption('contains', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRowOperationDescriptions.prototype, "endsWith", {
          get: function () {
              return this._getOption('endsWith');
          },
          set: function (value) {
              this._setOption('endsWith', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRowOperationDescriptions.prototype, "equal", {
          get: function () {
              return this._getOption('equal');
          },
          set: function (value) {
              this._setOption('equal', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRowOperationDescriptions.prototype, "greaterThan", {
          get: function () {
              return this._getOption('greaterThan');
          },
          set: function (value) {
              this._setOption('greaterThan', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRowOperationDescriptions.prototype, "greaterThanOrEqual", {
          get: function () {
              return this._getOption('greaterThanOrEqual');
          },
          set: function (value) {
              this._setOption('greaterThanOrEqual', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRowOperationDescriptions.prototype, "lessThan", {
          get: function () {
              return this._getOption('lessThan');
          },
          set: function (value) {
              this._setOption('lessThan', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRowOperationDescriptions.prototype, "lessThanOrEqual", {
          get: function () {
              return this._getOption('lessThanOrEqual');
          },
          set: function (value) {
              this._setOption('lessThanOrEqual', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRowOperationDescriptions.prototype, "notContains", {
          get: function () {
              return this._getOption('notContains');
          },
          set: function (value) {
              this._setOption('notContains', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRowOperationDescriptions.prototype, "notEqual", {
          get: function () {
              return this._getOption('notEqual');
          },
          set: function (value) {
              this._setOption('notEqual', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttFilterRowOperationDescriptions.prototype, "startsWith", {
          get: function () {
              return this._getOption('startsWith');
          },
          set: function (value) {
              this._setOption('startsWith', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoGanttFilterRowOperationDescriptions;
  }(i1.NestedOption));
  /** @nocollapse */ DxoGanttFilterRowOperationDescriptions.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoGanttFilterRowOperationDescriptions_BaseFactory; return function DxoGanttFilterRowOperationDescriptions_Factory(t) { return (ɵDxoGanttFilterRowOperationDescriptions_BaseFactory || (ɵDxoGanttFilterRowOperationDescriptions_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoGanttFilterRowOperationDescriptions)))(t || DxoGanttFilterRowOperationDescriptions); }; }();
  /** @nocollapse */ DxoGanttFilterRowOperationDescriptions.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoGanttFilterRowOperationDescriptions, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoGanttFilterRowOperationDescriptions_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGanttFilterRowOperationDescriptions, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoOperationDescriptionsComponent = /** @class */ (function (_super) {
      __extends(DxoOperationDescriptionsComponent, _super);
      function DxoOperationDescriptionsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "_optionPath", {
          get: function () {
              return 'operationDescriptions';
          },
          enumerable: false,
          configurable: true
      });
      DxoOperationDescriptionsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoOperationDescriptionsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoOperationDescriptionsComponent;
  }(DxoGanttFilterRowOperationDescriptions));
  /** @nocollapse */ DxoOperationDescriptionsComponent.ɵfac = function DxoOperationDescriptionsComponent_Factory(t) { return new (t || DxoOperationDescriptionsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoOperationDescriptionsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoOperationDescriptionsComponent, selectors: [["dxo-operation-descriptions"]], inputs: { between: "between", contains: "contains", endsWith: "endsWith", equal: "equal", greaterThan: "greaterThan", greaterThanOrEqual: "greaterThanOrEqual", lessThan: "lessThan", lessThanOrEqual: "lessThanOrEqual", notContains: "notContains", notEqual: "notEqual", startsWith: "startsWith" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoOperationDescriptionsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoOperationDescriptionsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-operation-descriptions',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'between',
                          'contains',
                          'endsWith',
                          'equal',
                          'greaterThan',
                          'greaterThanOrEqual',
                          'lessThan',
                          'lessThanOrEqual',
                          'notContains',
                          'notEqual',
                          'startsWith'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoOperationDescriptionsModule = /** @class */ (function () {
      function DxoOperationDescriptionsModule() {
      }
      return DxoOperationDescriptionsModule;
  }());
  /** @nocollapse */ DxoOperationDescriptionsModule.ɵfac = function DxoOperationDescriptionsModule_Factory(t) { return new (t || DxoOperationDescriptionsModule)(); };
  /** @nocollapse */ DxoOperationDescriptionsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoOperationDescriptionsModule });
  /** @nocollapse */ DxoOperationDescriptionsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoOperationDescriptionsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoOperationDescriptionsComponent
                      ],
                      exports: [
                          DxoOperationDescriptionsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoOperationDescriptionsModule, { declarations: [DxoOperationDescriptionsComponent], exports: [DxoOperationDescriptionsComponent] }); })();

  var DxoOptionsComponent = /** @class */ (function (_super) {
      __extends(DxoOptionsComponent, _super);
      function DxoOptionsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoOptionsComponent.prototype, "_optionPath", {
          get: function () {
              return 'options';
          },
          enumerable: false,
          configurable: true
      });
      DxoOptionsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoOptionsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoOptionsComponent;
  }(DxoButtonOptions));
  /** @nocollapse */ DxoOptionsComponent.ɵfac = function DxoOptionsComponent_Factory(t) { return new (t || DxoOptionsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoOptionsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoOptionsComponent, selectors: [["dxo-options"]], inputs: { accessKey: "accessKey", activeStateEnabled: "activeStateEnabled", disabled: "disabled", elementAttr: "elementAttr", focusStateEnabled: "focusStateEnabled", height: "height", hint: "hint", hoverStateEnabled: "hoverStateEnabled", icon: "icon", onClick: "onClick", onContentReady: "onContentReady", onDisposing: "onDisposing", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", rtlEnabled: "rtlEnabled", stylingMode: "stylingMode", tabIndex: "tabIndex", template: "template", text: "text", type: "type", useSubmitBehavior: "useSubmitBehavior", validationGroup: "validationGroup", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoOptionsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoOptionsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-options',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'accessKey',
                          'activeStateEnabled',
                          'disabled',
                          'elementAttr',
                          'focusStateEnabled',
                          'height',
                          'hint',
                          'hoverStateEnabled',
                          'icon',
                          'onClick',
                          'onContentReady',
                          'onDisposing',
                          'onInitialized',
                          'onOptionChanged',
                          'rtlEnabled',
                          'stylingMode',
                          'tabIndex',
                          'template',
                          'text',
                          'type',
                          'useSubmitBehavior',
                          'validationGroup',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoOptionsModule = /** @class */ (function () {
      function DxoOptionsModule() {
      }
      return DxoOptionsModule;
  }());
  /** @nocollapse */ DxoOptionsModule.ɵfac = function DxoOptionsModule_Factory(t) { return new (t || DxoOptionsModule)(); };
  /** @nocollapse */ DxoOptionsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoOptionsModule });
  /** @nocollapse */ DxoOptionsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoOptionsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoOptionsComponent
                      ],
                      exports: [
                          DxoOptionsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoOptionsModule, { declarations: [DxoOptionsComponent], exports: [DxoOptionsComponent] }); })();

  var DxoPageSizeComponent = /** @class */ (function (_super) {
      __extends(DxoPageSizeComponent, _super);
      function DxoPageSizeComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'heightChange' },
              { emit: 'widthChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoPageSizeComponent.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPageSizeComponent.prototype, "items", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this._setOption('items', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPageSizeComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPageSizeComponent.prototype, "_optionPath", {
          get: function () {
              return 'pageSize';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPageSizeComponent.prototype, "itemsChildren", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this.setChildren('items', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoPageSizeComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoPageSizeComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoPageSizeComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoPageSizeComponent.ɵfac = function DxoPageSizeComponent_Factory(t) { return new (t || DxoPageSizeComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoPageSizeComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoPageSizeComponent, selectors: [["dxo-page-size"]], contentQueries: function DxoPageSizeComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiItemComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
          }
      }, inputs: { height: "height", items: "items", width: "width" }, outputs: { heightChange: "heightChange", widthChange: "widthChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoPageSizeComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPageSizeComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-page-size',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { height: [{
                  type: i0.Input
              }], items: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }], heightChange: [{
                  type: i0.Output
              }], widthChange: [{
                  type: i0.Output
              }], itemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiItemComponent; })]
              }] });
  })();
  var DxoPageSizeModule = /** @class */ (function () {
      function DxoPageSizeModule() {
      }
      return DxoPageSizeModule;
  }());
  /** @nocollapse */ DxoPageSizeModule.ɵfac = function DxoPageSizeModule_Factory(t) { return new (t || DxoPageSizeModule)(); };
  /** @nocollapse */ DxoPageSizeModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoPageSizeModule });
  /** @nocollapse */ DxoPageSizeModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPageSizeModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoPageSizeComponent
                      ],
                      exports: [
                          DxoPageSizeComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoPageSizeModule, { declarations: [DxoPageSizeComponent], exports: [DxoPageSizeComponent] }); })();

  var DxoPagerComponent = /** @class */ (function (_super) {
      __extends(DxoPagerComponent, _super);
      function DxoPagerComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoPagerComponent.prototype, "allowedPageSizes", {
          get: function () {
              return this._getOption('allowedPageSizes');
          },
          set: function (value) {
              this._setOption('allowedPageSizes', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPagerComponent.prototype, "displayMode", {
          get: function () {
              return this._getOption('displayMode');
          },
          set: function (value) {
              this._setOption('displayMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPagerComponent.prototype, "infoText", {
          get: function () {
              return this._getOption('infoText');
          },
          set: function (value) {
              this._setOption('infoText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPagerComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPagerComponent.prototype, "showInfo", {
          get: function () {
              return this._getOption('showInfo');
          },
          set: function (value) {
              this._setOption('showInfo', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPagerComponent.prototype, "showNavigationButtons", {
          get: function () {
              return this._getOption('showNavigationButtons');
          },
          set: function (value) {
              this._setOption('showNavigationButtons', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPagerComponent.prototype, "showPageSizeSelector", {
          get: function () {
              return this._getOption('showPageSizeSelector');
          },
          set: function (value) {
              this._setOption('showPageSizeSelector', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPagerComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPagerComponent.prototype, "_optionPath", {
          get: function () {
              return 'pager';
          },
          enumerable: false,
          configurable: true
      });
      DxoPagerComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoPagerComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoPagerComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoPagerComponent.ɵfac = function DxoPagerComponent_Factory(t) { return new (t || DxoPagerComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoPagerComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoPagerComponent, selectors: [["dxo-pager"]], inputs: { allowedPageSizes: "allowedPageSizes", displayMode: "displayMode", infoText: "infoText", label: "label", showInfo: "showInfo", showNavigationButtons: "showNavigationButtons", showPageSizeSelector: "showPageSizeSelector", visible: "visible" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoPagerComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPagerComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-pager',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowedPageSizes: [{
                  type: i0.Input
              }], displayMode: [{
                  type: i0.Input
              }], infoText: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], showInfo: [{
                  type: i0.Input
              }], showNavigationButtons: [{
                  type: i0.Input
              }], showPageSizeSelector: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }] });
  })();
  var DxoPagerModule = /** @class */ (function () {
      function DxoPagerModule() {
      }
      return DxoPagerModule;
  }());
  /** @nocollapse */ DxoPagerModule.ɵfac = function DxoPagerModule_Factory(t) { return new (t || DxoPagerModule)(); };
  /** @nocollapse */ DxoPagerModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoPagerModule });
  /** @nocollapse */ DxoPagerModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPagerModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoPagerComponent
                      ],
                      exports: [
                          DxoPagerComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoPagerModule, { declarations: [DxoPagerComponent], exports: [DxoPagerComponent] }); })();

  var DxoPagingComponent = /** @class */ (function (_super) {
      __extends(DxoPagingComponent, _super);
      function DxoPagingComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'pageIndexChange' },
              { emit: 'pageSizeChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoPagingComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPagingComponent.prototype, "pageIndex", {
          get: function () {
              return this._getOption('pageIndex');
          },
          set: function (value) {
              this._setOption('pageIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPagingComponent.prototype, "pageSize", {
          get: function () {
              return this._getOption('pageSize');
          },
          set: function (value) {
              this._setOption('pageSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPagingComponent.prototype, "_optionPath", {
          get: function () {
              return 'paging';
          },
          enumerable: false,
          configurable: true
      });
      DxoPagingComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoPagingComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoPagingComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoPagingComponent.ɵfac = function DxoPagingComponent_Factory(t) { return new (t || DxoPagingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoPagingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoPagingComponent, selectors: [["dxo-paging"]], inputs: { enabled: "enabled", pageIndex: "pageIndex", pageSize: "pageSize" }, outputs: { pageIndexChange: "pageIndexChange", pageSizeChange: "pageSizeChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoPagingComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPagingComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-paging',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { enabled: [{
                  type: i0.Input
              }], pageIndex: [{
                  type: i0.Input
              }], pageSize: [{
                  type: i0.Input
              }], pageIndexChange: [{
                  type: i0.Output
              }], pageSizeChange: [{
                  type: i0.Output
              }] });
  })();
  var DxoPagingModule = /** @class */ (function () {
      function DxoPagingModule() {
      }
      return DxoPagingModule;
  }());
  /** @nocollapse */ DxoPagingModule.ɵfac = function DxoPagingModule_Factory(t) { return new (t || DxoPagingModule)(); };
  /** @nocollapse */ DxoPagingModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoPagingModule });
  /** @nocollapse */ DxoPagingModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPagingModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoPagingComponent
                      ],
                      exports: [
                          DxoPagingComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoPagingModule, { declarations: [DxoPagingComponent], exports: [DxoPagingComponent] }); })();

  var DxiPaneComponent = /** @class */ (function (_super) {
      __extends(DxiPaneComponent, _super);
      function DxiPaneComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiPaneComponent.prototype, "backgroundColor", {
          get: function () {
              return this._getOption('backgroundColor');
          },
          set: function (value) {
              this._setOption('backgroundColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiPaneComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiPaneComponent.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiPaneComponent.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiPaneComponent.prototype, "_optionPath", {
          get: function () {
              return 'panes';
          },
          enumerable: false,
          configurable: true
      });
      DxiPaneComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiPaneComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiPaneComponent.ɵfac = function DxiPaneComponent_Factory(t) { return new (t || DxiPaneComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiPaneComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiPaneComponent, selectors: [["dxi-pane"]], inputs: { backgroundColor: "backgroundColor", border: "border", height: "height", name: "name" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiPaneComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiPaneComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-pane',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { backgroundColor: [{
                  type: i0.Input
              }], border: [{
                  type: i0.Input
              }], height: [{
                  type: i0.Input
              }], name: [{
                  type: i0.Input
              }] });
  })();
  var DxiPaneModule = /** @class */ (function () {
      function DxiPaneModule() {
      }
      return DxiPaneModule;
  }());
  /** @nocollapse */ DxiPaneModule.ɵfac = function DxiPaneModule_Factory(t) { return new (t || DxiPaneModule)(); };
  /** @nocollapse */ DxiPaneModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiPaneModule });
  /** @nocollapse */ DxiPaneModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiPaneModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiPaneComponent
                      ],
                      exports: [
                          DxiPaneComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiPaneModule, { declarations: [DxiPaneComponent], exports: [DxiPaneComponent] }); })();

  var DxoPermissionsComponent = /** @class */ (function (_super) {
      __extends(DxoPermissionsComponent, _super);
      function DxoPermissionsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoPermissionsComponent.prototype, "copy", {
          get: function () {
              return this._getOption('copy');
          },
          set: function (value) {
              this._setOption('copy', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPermissionsComponent.prototype, "create", {
          get: function () {
              return this._getOption('create');
          },
          set: function (value) {
              this._setOption('create', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPermissionsComponent.prototype, "delete", {
          get: function () {
              return this._getOption('delete');
          },
          set: function (value) {
              this._setOption('delete', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPermissionsComponent.prototype, "download", {
          get: function () {
              return this._getOption('download');
          },
          set: function (value) {
              this._setOption('download', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPermissionsComponent.prototype, "move", {
          get: function () {
              return this._getOption('move');
          },
          set: function (value) {
              this._setOption('move', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPermissionsComponent.prototype, "rename", {
          get: function () {
              return this._getOption('rename');
          },
          set: function (value) {
              this._setOption('rename', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPermissionsComponent.prototype, "upload", {
          get: function () {
              return this._getOption('upload');
          },
          set: function (value) {
              this._setOption('upload', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPermissionsComponent.prototype, "_optionPath", {
          get: function () {
              return 'permissions';
          },
          enumerable: false,
          configurable: true
      });
      DxoPermissionsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoPermissionsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoPermissionsComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoPermissionsComponent.ɵfac = function DxoPermissionsComponent_Factory(t) { return new (t || DxoPermissionsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoPermissionsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoPermissionsComponent, selectors: [["dxo-permissions"]], inputs: { copy: "copy", create: "create", delete: "delete", download: "download", move: "move", rename: "rename", upload: "upload" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoPermissionsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPermissionsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-permissions',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { copy: [{
                  type: i0.Input
              }], create: [{
                  type: i0.Input
              }], delete: [{
                  type: i0.Input
              }], download: [{
                  type: i0.Input
              }], move: [{
                  type: i0.Input
              }], rename: [{
                  type: i0.Input
              }], upload: [{
                  type: i0.Input
              }] });
  })();
  var DxoPermissionsModule = /** @class */ (function () {
      function DxoPermissionsModule() {
      }
      return DxoPermissionsModule;
  }());
  /** @nocollapse */ DxoPermissionsModule.ɵfac = function DxoPermissionsModule_Factory(t) { return new (t || DxoPermissionsModule)(); };
  /** @nocollapse */ DxoPermissionsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoPermissionsModule });
  /** @nocollapse */ DxoPermissionsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPermissionsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoPermissionsComponent
                      ],
                      exports: [
                          DxoPermissionsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoPermissionsModule, { declarations: [DxoPermissionsComponent], exports: [DxoPermissionsComponent] }); })();

  var DxoPointComponent = /** @class */ (function (_super) {
      __extends(DxoPointComponent, _super);
      function DxoPointComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoPointComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPointComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPointComponent.prototype, "hoverMode", {
          get: function () {
              return this._getOption('hoverMode');
          },
          set: function (value) {
              this._setOption('hoverMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPointComponent.prototype, "hoverStyle", {
          get: function () {
              return this._getOption('hoverStyle');
          },
          set: function (value) {
              this._setOption('hoverStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPointComponent.prototype, "image", {
          get: function () {
              return this._getOption('image');
          },
          set: function (value) {
              this._setOption('image', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPointComponent.prototype, "selectionMode", {
          get: function () {
              return this._getOption('selectionMode');
          },
          set: function (value) {
              this._setOption('selectionMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPointComponent.prototype, "selectionStyle", {
          get: function () {
              return this._getOption('selectionStyle');
          },
          set: function (value) {
              this._setOption('selectionStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPointComponent.prototype, "size", {
          get: function () {
              return this._getOption('size');
          },
          set: function (value) {
              this._setOption('size', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPointComponent.prototype, "symbol", {
          get: function () {
              return this._getOption('symbol');
          },
          set: function (value) {
              this._setOption('symbol', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPointComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPointComponent.prototype, "_optionPath", {
          get: function () {
              return 'point';
          },
          enumerable: false,
          configurable: true
      });
      DxoPointComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoPointComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoPointComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoPointComponent.ɵfac = function DxoPointComponent_Factory(t) { return new (t || DxoPointComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoPointComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoPointComponent, selectors: [["dxo-point"]], inputs: { border: "border", color: "color", hoverMode: "hoverMode", hoverStyle: "hoverStyle", image: "image", selectionMode: "selectionMode", selectionStyle: "selectionStyle", size: "size", symbol: "symbol", visible: "visible" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoPointComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPointComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-point',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { border: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], hoverMode: [{
                  type: i0.Input
              }], hoverStyle: [{
                  type: i0.Input
              }], image: [{
                  type: i0.Input
              }], selectionMode: [{
                  type: i0.Input
              }], selectionStyle: [{
                  type: i0.Input
              }], size: [{
                  type: i0.Input
              }], symbol: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }] });
  })();
  var DxoPointModule = /** @class */ (function () {
      function DxoPointModule() {
      }
      return DxoPointModule;
  }());
  /** @nocollapse */ DxoPointModule.ɵfac = function DxoPointModule_Factory(t) { return new (t || DxoPointModule)(); };
  /** @nocollapse */ DxoPointModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoPointModule });
  /** @nocollapse */ DxoPointModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPointModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoPointComponent
                      ],
                      exports: [
                          DxoPointComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoPointModule, { declarations: [DxoPointComponent], exports: [DxoPointComponent] }); })();

  var DxoPopupComponent = /** @class */ (function (_super) {
      __extends(DxoPopupComponent, _super);
      function DxoPopupComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'heightChange' },
              { emit: 'positionChange' },
              { emit: 'visibleChange' },
              { emit: 'widthChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoPopupComponent.prototype, "_optionPath", {
          get: function () {
              return 'popup';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPopupComponent.prototype, "toolbarItemsChildren", {
          get: function () {
              return this._getOption('toolbarItems');
          },
          set: function (value) {
              this.setChildren('toolbarItems', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoPopupComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoPopupComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoPopupComponent;
  }(DxoPopupOptions));
  /** @nocollapse */ DxoPopupComponent.ɵfac = function DxoPopupComponent_Factory(t) { return new (t || DxoPopupComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoPopupComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoPopupComponent, selectors: [["dxo-popup"]], contentQueries: function DxoPopupComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiToolbarItemComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.toolbarItemsChildren = _t);
          }
      }, inputs: { accessKey: "accessKey", animation: "animation", closeOnOutsideClick: "closeOnOutsideClick", container: "container", contentTemplate: "contentTemplate", copyRootClassesToWrapper: "copyRootClassesToWrapper", deferRendering: "deferRendering", disabled: "disabled", dragAndResizeArea: "dragAndResizeArea", dragEnabled: "dragEnabled", dragOutsideBoundary: "dragOutsideBoundary", elementAttr: "elementAttr", enableBodyScroll: "enableBodyScroll", focusStateEnabled: "focusStateEnabled", fullScreen: "fullScreen", height: "height", hideOnOutsideClick: "hideOnOutsideClick", hideOnParentScroll: "hideOnParentScroll", hint: "hint", hoverStateEnabled: "hoverStateEnabled", maxHeight: "maxHeight", maxWidth: "maxWidth", minHeight: "minHeight", minWidth: "minWidth", onContentReady: "onContentReady", onDisposing: "onDisposing", onHidden: "onHidden", onHiding: "onHiding", onInitialized: "onInitialized", onOptionChanged: "onOptionChanged", onResize: "onResize", onResizeEnd: "onResizeEnd", onResizeStart: "onResizeStart", onShowing: "onShowing", onShown: "onShown", onTitleRendered: "onTitleRendered", position: "position", resizeEnabled: "resizeEnabled", restorePosition: "restorePosition", rtlEnabled: "rtlEnabled", shading: "shading", shadingColor: "shadingColor", showCloseButton: "showCloseButton", showTitle: "showTitle", tabIndex: "tabIndex", title: "title", titleTemplate: "titleTemplate", toolbarItems: "toolbarItems", visible: "visible", width: "width", wrapperAttr: "wrapperAttr" }, outputs: { heightChange: "heightChange", positionChange: "positionChange", visibleChange: "visibleChange", widthChange: "widthChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoPopupComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPopupComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-popup',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'accessKey',
                          'animation',
                          'closeOnOutsideClick',
                          'container',
                          'contentTemplate',
                          'copyRootClassesToWrapper',
                          'deferRendering',
                          'disabled',
                          'dragAndResizeArea',
                          'dragEnabled',
                          'dragOutsideBoundary',
                          'elementAttr',
                          'enableBodyScroll',
                          'focusStateEnabled',
                          'fullScreen',
                          'height',
                          'hideOnOutsideClick',
                          'hideOnParentScroll',
                          'hint',
                          'hoverStateEnabled',
                          'maxHeight',
                          'maxWidth',
                          'minHeight',
                          'minWidth',
                          'onContentReady',
                          'onDisposing',
                          'onHidden',
                          'onHiding',
                          'onInitialized',
                          'onOptionChanged',
                          'onResize',
                          'onResizeEnd',
                          'onResizeStart',
                          'onShowing',
                          'onShown',
                          'onTitleRendered',
                          'position',
                          'resizeEnabled',
                          'restorePosition',
                          'rtlEnabled',
                          'shading',
                          'shadingColor',
                          'showCloseButton',
                          'showTitle',
                          'tabIndex',
                          'title',
                          'titleTemplate',
                          'toolbarItems',
                          'visible',
                          'width',
                          'wrapperAttr'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { heightChange: [{
                  type: i0.Output
              }], positionChange: [{
                  type: i0.Output
              }], visibleChange: [{
                  type: i0.Output
              }], widthChange: [{
                  type: i0.Output
              }], toolbarItemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiToolbarItemComponent; })]
              }] });
  })();
  var DxoPopupModule = /** @class */ (function () {
      function DxoPopupModule() {
      }
      return DxoPopupModule;
  }());
  /** @nocollapse */ DxoPopupModule.ɵfac = function DxoPopupModule_Factory(t) { return new (t || DxoPopupModule)(); };
  /** @nocollapse */ DxoPopupModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoPopupModule });
  /** @nocollapse */ DxoPopupModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPopupModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoPopupComponent
                      ],
                      exports: [
                          DxoPopupComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoPopupModule, { declarations: [DxoPopupComponent], exports: [DxoPopupComponent] }); })();

  var DxoPositionConfig = /** @class */ (function (_super) {
      __extends(DxoPositionConfig, _super);
      function DxoPositionConfig() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoPositionConfig.prototype, "at", {
          get: function () {
              return this._getOption('at');
          },
          set: function (value) {
              this._setOption('at', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPositionConfig.prototype, "boundary", {
          get: function () {
              return this._getOption('boundary');
          },
          set: function (value) {
              this._setOption('boundary', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPositionConfig.prototype, "boundaryOffset", {
          get: function () {
              return this._getOption('boundaryOffset');
          },
          set: function (value) {
              this._setOption('boundaryOffset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPositionConfig.prototype, "collision", {
          get: function () {
              return this._getOption('collision');
          },
          set: function (value) {
              this._setOption('collision', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPositionConfig.prototype, "my", {
          get: function () {
              return this._getOption('my');
          },
          set: function (value) {
              this._setOption('my', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPositionConfig.prototype, "of", {
          get: function () {
              return this._getOption('of');
          },
          set: function (value) {
              this._setOption('of', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPositionConfig.prototype, "offset", {
          get: function () {
              return this._getOption('offset');
          },
          set: function (value) {
              this._setOption('offset', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoPositionConfig;
  }(i1.NestedOption));
  /** @nocollapse */ DxoPositionConfig.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoPositionConfig_BaseFactory; return function DxoPositionConfig_Factory(t) { return (ɵDxoPositionConfig_BaseFactory || (ɵDxoPositionConfig_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoPositionConfig)))(t || DxoPositionConfig); }; }();
  /** @nocollapse */ DxoPositionConfig.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoPositionConfig, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoPositionConfig_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPositionConfig, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoPositionComponent = /** @class */ (function (_super) {
      __extends(DxoPositionComponent, _super);
      function DxoPositionComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoPositionComponent.prototype, "_optionPath", {
          get: function () {
              return 'position';
          },
          enumerable: false,
          configurable: true
      });
      DxoPositionComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoPositionComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoPositionComponent;
  }(DxoPositionConfig));
  /** @nocollapse */ DxoPositionComponent.ɵfac = function DxoPositionComponent_Factory(t) { return new (t || DxoPositionComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoPositionComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoPositionComponent, selectors: [["dxo-position"]], inputs: { at: "at", boundary: "boundary", boundaryOffset: "boundaryOffset", collision: "collision", my: "my", of: "of", offset: "offset" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoPositionComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPositionComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-position',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'at',
                          'boundary',
                          'boundaryOffset',
                          'collision',
                          'my',
                          'of',
                          'offset'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoPositionModule = /** @class */ (function () {
      function DxoPositionModule() {
      }
      return DxoPositionModule;
  }());
  /** @nocollapse */ DxoPositionModule.ɵfac = function DxoPositionModule_Factory(t) { return new (t || DxoPositionModule)(); };
  /** @nocollapse */ DxoPositionModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoPositionModule });
  /** @nocollapse */ DxoPositionModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPositionModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoPositionComponent
                      ],
                      exports: [
                          DxoPositionComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoPositionModule, { declarations: [DxoPositionComponent], exports: [DxoPositionComponent] }); })();

  var DxoVectorMapProjectionConfig = /** @class */ (function (_super) {
      __extends(DxoVectorMapProjectionConfig, _super);
      function DxoVectorMapProjectionConfig() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoVectorMapProjectionConfig.prototype, "aspectRatio", {
          get: function () {
              return this._getOption('aspectRatio');
          },
          set: function (value) {
              this._setOption('aspectRatio', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoVectorMapProjectionConfig.prototype, "from", {
          get: function () {
              return this._getOption('from');
          },
          set: function (value) {
              this._setOption('from', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoVectorMapProjectionConfig.prototype, "to", {
          get: function () {
              return this._getOption('to');
          },
          set: function (value) {
              this._setOption('to', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoVectorMapProjectionConfig;
  }(i1.NestedOption));
  /** @nocollapse */ DxoVectorMapProjectionConfig.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoVectorMapProjectionConfig_BaseFactory; return function DxoVectorMapProjectionConfig_Factory(t) { return (ɵDxoVectorMapProjectionConfig_BaseFactory || (ɵDxoVectorMapProjectionConfig_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoVectorMapProjectionConfig)))(t || DxoVectorMapProjectionConfig); }; }();
  /** @nocollapse */ DxoVectorMapProjectionConfig.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoVectorMapProjectionConfig, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoVectorMapProjectionConfig_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoVectorMapProjectionConfig, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoProjectionComponent = /** @class */ (function (_super) {
      __extends(DxoProjectionComponent, _super);
      function DxoProjectionComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoProjectionComponent.prototype, "_optionPath", {
          get: function () {
              return 'projection';
          },
          enumerable: false,
          configurable: true
      });
      DxoProjectionComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoProjectionComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoProjectionComponent;
  }(DxoVectorMapProjectionConfig));
  /** @nocollapse */ DxoProjectionComponent.ɵfac = function DxoProjectionComponent_Factory(t) { return new (t || DxoProjectionComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoProjectionComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoProjectionComponent, selectors: [["dxo-projection"]], inputs: { aspectRatio: "aspectRatio", from: "from", to: "to" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoProjectionComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoProjectionComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-projection',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aspectRatio',
                          'from',
                          'to'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoProjectionModule = /** @class */ (function () {
      function DxoProjectionModule() {
      }
      return DxoProjectionModule;
  }());
  /** @nocollapse */ DxoProjectionModule.ɵfac = function DxoProjectionModule_Factory(t) { return new (t || DxoProjectionModule)(); };
  /** @nocollapse */ DxoProjectionModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoProjectionModule });
  /** @nocollapse */ DxoProjectionModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoProjectionModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoProjectionComponent
                      ],
                      exports: [
                          DxoProjectionComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoProjectionModule, { declarations: [DxoProjectionComponent], exports: [DxoProjectionComponent] }); })();

  var DxoPropertiesPanelComponent = /** @class */ (function (_super) {
      __extends(DxoPropertiesPanelComponent, _super);
      function DxoPropertiesPanelComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoPropertiesPanelComponent.prototype, "tabs", {
          get: function () {
              return this._getOption('tabs');
          },
          set: function (value) {
              this._setOption('tabs', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPropertiesPanelComponent.prototype, "visibility", {
          get: function () {
              return this._getOption('visibility');
          },
          set: function (value) {
              this._setOption('visibility', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPropertiesPanelComponent.prototype, "_optionPath", {
          get: function () {
              return 'propertiesPanel';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoPropertiesPanelComponent.prototype, "tabsChildren", {
          get: function () {
              return this._getOption('tabs');
          },
          set: function (value) {
              this.setChildren('tabs', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoPropertiesPanelComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoPropertiesPanelComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoPropertiesPanelComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoPropertiesPanelComponent.ɵfac = function DxoPropertiesPanelComponent_Factory(t) { return new (t || DxoPropertiesPanelComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoPropertiesPanelComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoPropertiesPanelComponent, selectors: [["dxo-properties-panel"]], contentQueries: function DxoPropertiesPanelComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiTabComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.tabsChildren = _t);
          }
      }, inputs: { tabs: "tabs", visibility: "visibility" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoPropertiesPanelComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPropertiesPanelComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-properties-panel',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { tabs: [{
                  type: i0.Input
              }], visibility: [{
                  type: i0.Input
              }], tabsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiTabComponent; })]
              }] });
  })();
  var DxoPropertiesPanelModule = /** @class */ (function () {
      function DxoPropertiesPanelModule() {
      }
      return DxoPropertiesPanelModule;
  }());
  /** @nocollapse */ DxoPropertiesPanelModule.ɵfac = function DxoPropertiesPanelModule_Factory(t) { return new (t || DxoPropertiesPanelModule)(); };
  /** @nocollapse */ DxoPropertiesPanelModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoPropertiesPanelModule });
  /** @nocollapse */ DxoPropertiesPanelModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoPropertiesPanelModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoPropertiesPanelComponent
                      ],
                      exports: [
                          DxoPropertiesPanelComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoPropertiesPanelModule, { declarations: [DxoPropertiesPanelComponent], exports: [DxoPropertiesPanelComponent] }); })();

  var DxiRangeComponent = /** @class */ (function (_super) {
      __extends(DxiRangeComponent, _super);
      function DxiRangeComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiRangeComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiRangeComponent.prototype, "endValue", {
          get: function () {
              return this._getOption('endValue');
          },
          set: function (value) {
              this._setOption('endValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiRangeComponent.prototype, "startValue", {
          get: function () {
              return this._getOption('startValue');
          },
          set: function (value) {
              this._setOption('startValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiRangeComponent.prototype, "_optionPath", {
          get: function () {
              return 'ranges';
          },
          enumerable: false,
          configurable: true
      });
      DxiRangeComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiRangeComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiRangeComponent.ɵfac = function DxiRangeComponent_Factory(t) { return new (t || DxiRangeComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiRangeComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiRangeComponent, selectors: [["dxi-range"]], inputs: { color: "color", endValue: "endValue", startValue: "startValue" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiRangeComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiRangeComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-range',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], endValue: [{
                  type: i0.Input
              }], startValue: [{
                  type: i0.Input
              }] });
  })();
  var DxiRangeModule = /** @class */ (function () {
      function DxiRangeModule() {
      }
      return DxiRangeModule;
  }());
  /** @nocollapse */ DxiRangeModule.ɵfac = function DxiRangeModule_Factory(t) { return new (t || DxiRangeModule)(); };
  /** @nocollapse */ DxiRangeModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiRangeModule });
  /** @nocollapse */ DxiRangeModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiRangeModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiRangeComponent
                      ],
                      exports: [
                          DxiRangeComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiRangeModule, { declarations: [DxiRangeComponent], exports: [DxiRangeComponent] }); })();

  var DxoRangeContainerComponent = /** @class */ (function (_super) {
      __extends(DxoRangeContainerComponent, _super);
      function DxoRangeContainerComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoRangeContainerComponent.prototype, "backgroundColor", {
          get: function () {
              return this._getOption('backgroundColor');
          },
          set: function (value) {
              this._setOption('backgroundColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRangeContainerComponent.prototype, "offset", {
          get: function () {
              return this._getOption('offset');
          },
          set: function (value) {
              this._setOption('offset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRangeContainerComponent.prototype, "orientation", {
          get: function () {
              return this._getOption('orientation');
          },
          set: function (value) {
              this._setOption('orientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRangeContainerComponent.prototype, "palette", {
          get: function () {
              return this._getOption('palette');
          },
          set: function (value) {
              this._setOption('palette', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRangeContainerComponent.prototype, "paletteExtensionMode", {
          get: function () {
              return this._getOption('paletteExtensionMode');
          },
          set: function (value) {
              this._setOption('paletteExtensionMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRangeContainerComponent.prototype, "ranges", {
          get: function () {
              return this._getOption('ranges');
          },
          set: function (value) {
              this._setOption('ranges', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRangeContainerComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRangeContainerComponent.prototype, "horizontalOrientation", {
          get: function () {
              return this._getOption('horizontalOrientation');
          },
          set: function (value) {
              this._setOption('horizontalOrientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRangeContainerComponent.prototype, "verticalOrientation", {
          get: function () {
              return this._getOption('verticalOrientation');
          },
          set: function (value) {
              this._setOption('verticalOrientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRangeContainerComponent.prototype, "_optionPath", {
          get: function () {
              return 'rangeContainer';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRangeContainerComponent.prototype, "rangesChildren", {
          get: function () {
              return this._getOption('ranges');
          },
          set: function (value) {
              this.setChildren('ranges', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoRangeContainerComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoRangeContainerComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoRangeContainerComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoRangeContainerComponent.ɵfac = function DxoRangeContainerComponent_Factory(t) { return new (t || DxoRangeContainerComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoRangeContainerComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoRangeContainerComponent, selectors: [["dxo-range-container"]], contentQueries: function DxoRangeContainerComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiRangeComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.rangesChildren = _t);
          }
      }, inputs: { backgroundColor: "backgroundColor", offset: "offset", orientation: "orientation", palette: "palette", paletteExtensionMode: "paletteExtensionMode", ranges: "ranges", width: "width", horizontalOrientation: "horizontalOrientation", verticalOrientation: "verticalOrientation" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoRangeContainerComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoRangeContainerComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-range-container',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { backgroundColor: [{
                  type: i0.Input
              }], offset: [{
                  type: i0.Input
              }], orientation: [{
                  type: i0.Input
              }], palette: [{
                  type: i0.Input
              }], paletteExtensionMode: [{
                  type: i0.Input
              }], ranges: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }], horizontalOrientation: [{
                  type: i0.Input
              }], verticalOrientation: [{
                  type: i0.Input
              }], rangesChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiRangeComponent; })]
              }] });
  })();
  var DxoRangeContainerModule = /** @class */ (function () {
      function DxoRangeContainerModule() {
      }
      return DxoRangeContainerModule;
  }());
  /** @nocollapse */ DxoRangeContainerModule.ɵfac = function DxoRangeContainerModule_Factory(t) { return new (t || DxoRangeContainerModule)(); };
  /** @nocollapse */ DxoRangeContainerModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoRangeContainerModule });
  /** @nocollapse */ DxoRangeContainerModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoRangeContainerModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoRangeContainerComponent
                      ],
                      exports: [
                          DxoRangeContainerComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoRangeContainerModule, { declarations: [DxoRangeContainerComponent], exports: [DxoRangeContainerComponent] }); })();

  var DxoRangeareaComponent = /** @class */ (function (_super) {
      __extends(DxoRangeareaComponent, _super);
      function DxoRangeareaComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoRangeareaComponent.prototype, "_optionPath", {
          get: function () {
              return 'rangearea';
          },
          enumerable: false,
          configurable: true
      });
      DxoRangeareaComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoRangeareaComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoRangeareaComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoRangeareaComponent.ɵfac = function DxoRangeareaComponent_Factory(t) { return new (t || DxoRangeareaComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoRangeareaComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoRangeareaComponent, selectors: [["dxo-rangearea"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoRangeareaComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoRangeareaComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-rangearea',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoRangeareaModule = /** @class */ (function () {
      function DxoRangeareaModule() {
      }
      return DxoRangeareaModule;
  }());
  /** @nocollapse */ DxoRangeareaModule.ɵfac = function DxoRangeareaModule_Factory(t) { return new (t || DxoRangeareaModule)(); };
  /** @nocollapse */ DxoRangeareaModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoRangeareaModule });
  /** @nocollapse */ DxoRangeareaModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoRangeareaModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoRangeareaComponent
                      ],
                      exports: [
                          DxoRangeareaComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoRangeareaModule, { declarations: [DxoRangeareaComponent], exports: [DxoRangeareaComponent] }); })();

  var DxoRangebarComponent = /** @class */ (function (_super) {
      __extends(DxoRangebarComponent, _super);
      function DxoRangebarComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoRangebarComponent.prototype, "_optionPath", {
          get: function () {
              return 'rangebar';
          },
          enumerable: false,
          configurable: true
      });
      DxoRangebarComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoRangebarComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoRangebarComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoRangebarComponent.ɵfac = function DxoRangebarComponent_Factory(t) { return new (t || DxoRangebarComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoRangebarComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoRangebarComponent, selectors: [["dxo-rangebar"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoRangebarComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoRangebarComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-rangebar',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoRangebarModule = /** @class */ (function () {
      function DxoRangebarModule() {
      }
      return DxoRangebarModule;
  }());
  /** @nocollapse */ DxoRangebarModule.ɵfac = function DxoRangebarModule_Factory(t) { return new (t || DxoRangebarModule)(); };
  /** @nocollapse */ DxoRangebarModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoRangebarModule });
  /** @nocollapse */ DxoRangebarModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoRangebarModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoRangebarComponent
                      ],
                      exports: [
                          DxoRangebarComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoRangebarModule, { declarations: [DxoRangebarComponent], exports: [DxoRangebarComponent] }); })();

  var DxoReductionComponent = /** @class */ (function (_super) {
      __extends(DxoReductionComponent, _super);
      function DxoReductionComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoReductionComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoReductionComponent.prototype, "level", {
          get: function () {
              return this._getOption('level');
          },
          set: function (value) {
              this._setOption('level', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoReductionComponent.prototype, "_optionPath", {
          get: function () {
              return 'reduction';
          },
          enumerable: false,
          configurable: true
      });
      DxoReductionComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoReductionComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoReductionComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoReductionComponent.ɵfac = function DxoReductionComponent_Factory(t) { return new (t || DxoReductionComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoReductionComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoReductionComponent, selectors: [["dxo-reduction"]], inputs: { color: "color", level: "level" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoReductionComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoReductionComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-reduction',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], level: [{
                  type: i0.Input
              }] });
  })();
  var DxoReductionModule = /** @class */ (function () {
      function DxoReductionModule() {
      }
      return DxoReductionModule;
  }());
  /** @nocollapse */ DxoReductionModule.ɵfac = function DxoReductionModule_Factory(t) { return new (t || DxoReductionModule)(); };
  /** @nocollapse */ DxoReductionModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoReductionModule });
  /** @nocollapse */ DxoReductionModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoReductionModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoReductionComponent
                      ],
                      exports: [
                          DxoReductionComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoReductionModule, { declarations: [DxoReductionComponent], exports: [DxoReductionComponent] }); })();

  var DxoRemoteOperationsComponent = /** @class */ (function (_super) {
      __extends(DxoRemoteOperationsComponent, _super);
      function DxoRemoteOperationsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoRemoteOperationsComponent.prototype, "filtering", {
          get: function () {
              return this._getOption('filtering');
          },
          set: function (value) {
              this._setOption('filtering', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRemoteOperationsComponent.prototype, "grouping", {
          get: function () {
              return this._getOption('grouping');
          },
          set: function (value) {
              this._setOption('grouping', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRemoteOperationsComponent.prototype, "groupPaging", {
          get: function () {
              return this._getOption('groupPaging');
          },
          set: function (value) {
              this._setOption('groupPaging', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRemoteOperationsComponent.prototype, "paging", {
          get: function () {
              return this._getOption('paging');
          },
          set: function (value) {
              this._setOption('paging', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRemoteOperationsComponent.prototype, "sorting", {
          get: function () {
              return this._getOption('sorting');
          },
          set: function (value) {
              this._setOption('sorting', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRemoteOperationsComponent.prototype, "summary", {
          get: function () {
              return this._getOption('summary');
          },
          set: function (value) {
              this._setOption('summary', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRemoteOperationsComponent.prototype, "_optionPath", {
          get: function () {
              return 'remoteOperations';
          },
          enumerable: false,
          configurable: true
      });
      DxoRemoteOperationsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoRemoteOperationsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoRemoteOperationsComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoRemoteOperationsComponent.ɵfac = function DxoRemoteOperationsComponent_Factory(t) { return new (t || DxoRemoteOperationsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoRemoteOperationsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoRemoteOperationsComponent, selectors: [["dxo-remote-operations"]], inputs: { filtering: "filtering", grouping: "grouping", groupPaging: "groupPaging", paging: "paging", sorting: "sorting", summary: "summary" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoRemoteOperationsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoRemoteOperationsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-remote-operations',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { filtering: [{
                  type: i0.Input
              }], grouping: [{
                  type: i0.Input
              }], groupPaging: [{
                  type: i0.Input
              }], paging: [{
                  type: i0.Input
              }], sorting: [{
                  type: i0.Input
              }], summary: [{
                  type: i0.Input
              }] });
  })();
  var DxoRemoteOperationsModule = /** @class */ (function () {
      function DxoRemoteOperationsModule() {
      }
      return DxoRemoteOperationsModule;
  }());
  /** @nocollapse */ DxoRemoteOperationsModule.ɵfac = function DxoRemoteOperationsModule_Factory(t) { return new (t || DxoRemoteOperationsModule)(); };
  /** @nocollapse */ DxoRemoteOperationsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoRemoteOperationsModule });
  /** @nocollapse */ DxoRemoteOperationsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoRemoteOperationsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoRemoteOperationsComponent
                      ],
                      exports: [
                          DxoRemoteOperationsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoRemoteOperationsModule, { declarations: [DxoRemoteOperationsComponent], exports: [DxoRemoteOperationsComponent] }); })();

  var DxoResourceAssignmentsComponent = /** @class */ (function (_super) {
      __extends(DxoResourceAssignmentsComponent, _super);
      function DxoResourceAssignmentsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoResourceAssignmentsComponent.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoResourceAssignmentsComponent.prototype, "keyExpr", {
          get: function () {
              return this._getOption('keyExpr');
          },
          set: function (value) {
              this._setOption('keyExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoResourceAssignmentsComponent.prototype, "resourceIdExpr", {
          get: function () {
              return this._getOption('resourceIdExpr');
          },
          set: function (value) {
              this._setOption('resourceIdExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoResourceAssignmentsComponent.prototype, "taskIdExpr", {
          get: function () {
              return this._getOption('taskIdExpr');
          },
          set: function (value) {
              this._setOption('taskIdExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoResourceAssignmentsComponent.prototype, "_optionPath", {
          get: function () {
              return 'resourceAssignments';
          },
          enumerable: false,
          configurable: true
      });
      DxoResourceAssignmentsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoResourceAssignmentsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoResourceAssignmentsComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoResourceAssignmentsComponent.ɵfac = function DxoResourceAssignmentsComponent_Factory(t) { return new (t || DxoResourceAssignmentsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoResourceAssignmentsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoResourceAssignmentsComponent, selectors: [["dxo-resource-assignments"]], inputs: { dataSource: "dataSource", keyExpr: "keyExpr", resourceIdExpr: "resourceIdExpr", taskIdExpr: "taskIdExpr" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoResourceAssignmentsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoResourceAssignmentsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-resource-assignments',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { dataSource: [{
                  type: i0.Input
              }], keyExpr: [{
                  type: i0.Input
              }], resourceIdExpr: [{
                  type: i0.Input
              }], taskIdExpr: [{
                  type: i0.Input
              }] });
  })();
  var DxoResourceAssignmentsModule = /** @class */ (function () {
      function DxoResourceAssignmentsModule() {
      }
      return DxoResourceAssignmentsModule;
  }());
  /** @nocollapse */ DxoResourceAssignmentsModule.ɵfac = function DxoResourceAssignmentsModule_Factory(t) { return new (t || DxoResourceAssignmentsModule)(); };
  /** @nocollapse */ DxoResourceAssignmentsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoResourceAssignmentsModule });
  /** @nocollapse */ DxoResourceAssignmentsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoResourceAssignmentsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoResourceAssignmentsComponent
                      ],
                      exports: [
                          DxoResourceAssignmentsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoResourceAssignmentsModule, { declarations: [DxoResourceAssignmentsComponent], exports: [DxoResourceAssignmentsComponent] }); })();

  var DxiResourceComponent = /** @class */ (function (_super) {
      __extends(DxiResourceComponent, _super);
      function DxiResourceComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiResourceComponent.prototype, "allowMultiple", {
          get: function () {
              return this._getOption('allowMultiple');
          },
          set: function (value) {
              this._setOption('allowMultiple', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiResourceComponent.prototype, "colorExpr", {
          get: function () {
              return this._getOption('colorExpr');
          },
          set: function (value) {
              this._setOption('colorExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiResourceComponent.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiResourceComponent.prototype, "displayExpr", {
          get: function () {
              return this._getOption('displayExpr');
          },
          set: function (value) {
              this._setOption('displayExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiResourceComponent.prototype, "fieldExpr", {
          get: function () {
              return this._getOption('fieldExpr');
          },
          set: function (value) {
              this._setOption('fieldExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiResourceComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiResourceComponent.prototype, "useColorAsDefault", {
          get: function () {
              return this._getOption('useColorAsDefault');
          },
          set: function (value) {
              this._setOption('useColorAsDefault', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiResourceComponent.prototype, "valueExpr", {
          get: function () {
              return this._getOption('valueExpr');
          },
          set: function (value) {
              this._setOption('valueExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiResourceComponent.prototype, "_optionPath", {
          get: function () {
              return 'resources';
          },
          enumerable: false,
          configurable: true
      });
      DxiResourceComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiResourceComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiResourceComponent.ɵfac = function DxiResourceComponent_Factory(t) { return new (t || DxiResourceComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiResourceComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiResourceComponent, selectors: [["dxi-resource"]], inputs: { allowMultiple: "allowMultiple", colorExpr: "colorExpr", dataSource: "dataSource", displayExpr: "displayExpr", fieldExpr: "fieldExpr", label: "label", useColorAsDefault: "useColorAsDefault", valueExpr: "valueExpr" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiResourceComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiResourceComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-resource',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowMultiple: [{
                  type: i0.Input
              }], colorExpr: [{
                  type: i0.Input
              }], dataSource: [{
                  type: i0.Input
              }], displayExpr: [{
                  type: i0.Input
              }], fieldExpr: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], useColorAsDefault: [{
                  type: i0.Input
              }], valueExpr: [{
                  type: i0.Input
              }] });
  })();
  var DxiResourceModule = /** @class */ (function () {
      function DxiResourceModule() {
      }
      return DxiResourceModule;
  }());
  /** @nocollapse */ DxiResourceModule.ɵfac = function DxiResourceModule_Factory(t) { return new (t || DxiResourceModule)(); };
  /** @nocollapse */ DxiResourceModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiResourceModule });
  /** @nocollapse */ DxiResourceModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiResourceModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiResourceComponent
                      ],
                      exports: [
                          DxiResourceComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiResourceModule, { declarations: [DxiResourceComponent], exports: [DxiResourceComponent] }); })();

  var DxoResourcesComponent = /** @class */ (function (_super) {
      __extends(DxoResourcesComponent, _super);
      function DxoResourcesComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoResourcesComponent.prototype, "colorExpr", {
          get: function () {
              return this._getOption('colorExpr');
          },
          set: function (value) {
              this._setOption('colorExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoResourcesComponent.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoResourcesComponent.prototype, "keyExpr", {
          get: function () {
              return this._getOption('keyExpr');
          },
          set: function (value) {
              this._setOption('keyExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoResourcesComponent.prototype, "textExpr", {
          get: function () {
              return this._getOption('textExpr');
          },
          set: function (value) {
              this._setOption('textExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoResourcesComponent.prototype, "_optionPath", {
          get: function () {
              return 'resources';
          },
          enumerable: false,
          configurable: true
      });
      DxoResourcesComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoResourcesComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoResourcesComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoResourcesComponent.ɵfac = function DxoResourcesComponent_Factory(t) { return new (t || DxoResourcesComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoResourcesComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoResourcesComponent, selectors: [["dxo-resources"]], inputs: { colorExpr: "colorExpr", dataSource: "dataSource", keyExpr: "keyExpr", textExpr: "textExpr" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoResourcesComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoResourcesComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-resources',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { colorExpr: [{
                  type: i0.Input
              }], dataSource: [{
                  type: i0.Input
              }], keyExpr: [{
                  type: i0.Input
              }], textExpr: [{
                  type: i0.Input
              }] });
  })();
  var DxoResourcesModule = /** @class */ (function () {
      function DxoResourcesModule() {
      }
      return DxoResourcesModule;
  }());
  /** @nocollapse */ DxoResourcesModule.ɵfac = function DxoResourcesModule_Factory(t) { return new (t || DxoResourcesModule)(); };
  /** @nocollapse */ DxoResourcesModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoResourcesModule });
  /** @nocollapse */ DxoResourcesModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoResourcesModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoResourcesComponent
                      ],
                      exports: [
                          DxoResourcesComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoResourcesModule, { declarations: [DxoResourcesComponent], exports: [DxoResourcesComponent] }); })();

  var DxiRouteComponent = /** @class */ (function (_super) {
      __extends(DxiRouteComponent, _super);
      function DxiRouteComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiRouteComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiRouteComponent.prototype, "locations", {
          get: function () {
              return this._getOption('locations');
          },
          set: function (value) {
              this._setOption('locations', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiRouteComponent.prototype, "mode", {
          get: function () {
              return this._getOption('mode');
          },
          set: function (value) {
              this._setOption('mode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiRouteComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiRouteComponent.prototype, "weight", {
          get: function () {
              return this._getOption('weight');
          },
          set: function (value) {
              this._setOption('weight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiRouteComponent.prototype, "_optionPath", {
          get: function () {
              return 'routes';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiRouteComponent.prototype, "locationsChildren", {
          get: function () {
              return this._getOption('locations');
          },
          set: function (value) {
              this.setChildren('locations', value);
          },
          enumerable: false,
          configurable: true
      });
      DxiRouteComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiRouteComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiRouteComponent.ɵfac = function DxiRouteComponent_Factory(t) { return new (t || DxiRouteComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiRouteComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiRouteComponent, selectors: [["dxi-route"]], contentQueries: function DxiRouteComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiLocationComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.locationsChildren = _t);
          }
      }, inputs: { color: "color", locations: "locations", mode: "mode", opacity: "opacity", weight: "weight" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiRouteComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiRouteComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-route',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], locations: [{
                  type: i0.Input
              }], mode: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], weight: [{
                  type: i0.Input
              }], locationsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiLocationComponent; })]
              }] });
  })();
  var DxiRouteModule = /** @class */ (function () {
      function DxiRouteModule() {
      }
      return DxiRouteModule;
  }());
  /** @nocollapse */ DxiRouteModule.ɵfac = function DxiRouteModule_Factory(t) { return new (t || DxiRouteModule)(); };
  /** @nocollapse */ DxiRouteModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiRouteModule });
  /** @nocollapse */ DxiRouteModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiRouteModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiRouteComponent
                      ],
                      exports: [
                          DxiRouteComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiRouteModule, { declarations: [DxiRouteComponent], exports: [DxiRouteComponent] }); })();

  var DxoRowDraggingComponent = /** @class */ (function (_super) {
      __extends(DxoRowDraggingComponent, _super);
      function DxoRowDraggingComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoRowDraggingComponent.prototype, "allowDropInsideItem", {
          get: function () {
              return this._getOption('allowDropInsideItem');
          },
          set: function (value) {
              this._setOption('allowDropInsideItem', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "allowReordering", {
          get: function () {
              return this._getOption('allowReordering');
          },
          set: function (value) {
              this._setOption('allowReordering', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "autoScroll", {
          get: function () {
              return this._getOption('autoScroll');
          },
          set: function (value) {
              this._setOption('autoScroll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "boundary", {
          get: function () {
              return this._getOption('boundary');
          },
          set: function (value) {
              this._setOption('boundary', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "container", {
          get: function () {
              return this._getOption('container');
          },
          set: function (value) {
              this._setOption('container', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "cursorOffset", {
          get: function () {
              return this._getOption('cursorOffset');
          },
          set: function (value) {
              this._setOption('cursorOffset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "data", {
          get: function () {
              return this._getOption('data');
          },
          set: function (value) {
              this._setOption('data', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "dragDirection", {
          get: function () {
              return this._getOption('dragDirection');
          },
          set: function (value) {
              this._setOption('dragDirection', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "dragTemplate", {
          get: function () {
              return this._getOption('dragTemplate');
          },
          set: function (value) {
              this._setOption('dragTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "dropFeedbackMode", {
          get: function () {
              return this._getOption('dropFeedbackMode');
          },
          set: function (value) {
              this._setOption('dropFeedbackMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "filter", {
          get: function () {
              return this._getOption('filter');
          },
          set: function (value) {
              this._setOption('filter', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "group", {
          get: function () {
              return this._getOption('group');
          },
          set: function (value) {
              this._setOption('group', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "handle", {
          get: function () {
              return this._getOption('handle');
          },
          set: function (value) {
              this._setOption('handle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "onAdd", {
          get: function () {
              return this._getOption('onAdd');
          },
          set: function (value) {
              this._setOption('onAdd', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "onDragChange", {
          get: function () {
              return this._getOption('onDragChange');
          },
          set: function (value) {
              this._setOption('onDragChange', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "onDragEnd", {
          get: function () {
              return this._getOption('onDragEnd');
          },
          set: function (value) {
              this._setOption('onDragEnd', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "onDragMove", {
          get: function () {
              return this._getOption('onDragMove');
          },
          set: function (value) {
              this._setOption('onDragMove', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "onDragStart", {
          get: function () {
              return this._getOption('onDragStart');
          },
          set: function (value) {
              this._setOption('onDragStart', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "onRemove", {
          get: function () {
              return this._getOption('onRemove');
          },
          set: function (value) {
              this._setOption('onRemove', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "onReorder", {
          get: function () {
              return this._getOption('onReorder');
          },
          set: function (value) {
              this._setOption('onReorder', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "scrollSensitivity", {
          get: function () {
              return this._getOption('scrollSensitivity');
          },
          set: function (value) {
              this._setOption('scrollSensitivity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "scrollSpeed", {
          get: function () {
              return this._getOption('scrollSpeed');
          },
          set: function (value) {
              this._setOption('scrollSpeed', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "showDragIcons", {
          get: function () {
              return this._getOption('showDragIcons');
          },
          set: function (value) {
              this._setOption('showDragIcons', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoRowDraggingComponent.prototype, "_optionPath", {
          get: function () {
              return 'rowDragging';
          },
          enumerable: false,
          configurable: true
      });
      DxoRowDraggingComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoRowDraggingComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoRowDraggingComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoRowDraggingComponent.ɵfac = function DxoRowDraggingComponent_Factory(t) { return new (t || DxoRowDraggingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoRowDraggingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoRowDraggingComponent, selectors: [["dxo-row-dragging"]], inputs: { allowDropInsideItem: "allowDropInsideItem", allowReordering: "allowReordering", autoScroll: "autoScroll", boundary: "boundary", container: "container", cursorOffset: "cursorOffset", data: "data", dragDirection: "dragDirection", dragTemplate: "dragTemplate", dropFeedbackMode: "dropFeedbackMode", filter: "filter", group: "group", handle: "handle", onAdd: "onAdd", onDragChange: "onDragChange", onDragEnd: "onDragEnd", onDragMove: "onDragMove", onDragStart: "onDragStart", onRemove: "onRemove", onReorder: "onReorder", scrollSensitivity: "scrollSensitivity", scrollSpeed: "scrollSpeed", showDragIcons: "showDragIcons" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoRowDraggingComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoRowDraggingComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-row-dragging',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowDropInsideItem: [{
                  type: i0.Input
              }], allowReordering: [{
                  type: i0.Input
              }], autoScroll: [{
                  type: i0.Input
              }], boundary: [{
                  type: i0.Input
              }], container: [{
                  type: i0.Input
              }], cursorOffset: [{
                  type: i0.Input
              }], data: [{
                  type: i0.Input
              }], dragDirection: [{
                  type: i0.Input
              }], dragTemplate: [{
                  type: i0.Input
              }], dropFeedbackMode: [{
                  type: i0.Input
              }], filter: [{
                  type: i0.Input
              }], group: [{
                  type: i0.Input
              }], handle: [{
                  type: i0.Input
              }], onAdd: [{
                  type: i0.Input
              }], onDragChange: [{
                  type: i0.Input
              }], onDragEnd: [{
                  type: i0.Input
              }], onDragMove: [{
                  type: i0.Input
              }], onDragStart: [{
                  type: i0.Input
              }], onRemove: [{
                  type: i0.Input
              }], onReorder: [{
                  type: i0.Input
              }], scrollSensitivity: [{
                  type: i0.Input
              }], scrollSpeed: [{
                  type: i0.Input
              }], showDragIcons: [{
                  type: i0.Input
              }] });
  })();
  var DxoRowDraggingModule = /** @class */ (function () {
      function DxoRowDraggingModule() {
      }
      return DxoRowDraggingModule;
  }());
  /** @nocollapse */ DxoRowDraggingModule.ɵfac = function DxoRowDraggingModule_Factory(t) { return new (t || DxoRowDraggingModule)(); };
  /** @nocollapse */ DxoRowDraggingModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoRowDraggingModule });
  /** @nocollapse */ DxoRowDraggingModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoRowDraggingModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoRowDraggingComponent
                      ],
                      exports: [
                          DxoRowDraggingComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoRowDraggingModule, { declarations: [DxoRowDraggingComponent], exports: [DxoRowDraggingComponent] }); })();

  var DxiRowComponent = /** @class */ (function (_super) {
      __extends(DxiRowComponent, _super);
      function DxiRowComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiRowComponent.prototype, "baseSize", {
          get: function () {
              return this._getOption('baseSize');
          },
          set: function (value) {
              this._setOption('baseSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiRowComponent.prototype, "ratio", {
          get: function () {
              return this._getOption('ratio');
          },
          set: function (value) {
              this._setOption('ratio', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiRowComponent.prototype, "screen", {
          get: function () {
              return this._getOption('screen');
          },
          set: function (value) {
              this._setOption('screen', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiRowComponent.prototype, "shrink", {
          get: function () {
              return this._getOption('shrink');
          },
          set: function (value) {
              this._setOption('shrink', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiRowComponent.prototype, "_optionPath", {
          get: function () {
              return 'rows';
          },
          enumerable: false,
          configurable: true
      });
      DxiRowComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiRowComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiRowComponent.ɵfac = function DxiRowComponent_Factory(t) { return new (t || DxiRowComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiRowComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiRowComponent, selectors: [["dxi-row"]], inputs: { baseSize: "baseSize", ratio: "ratio", screen: "screen", shrink: "shrink" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiRowComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiRowComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-row',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { baseSize: [{
                  type: i0.Input
              }], ratio: [{
                  type: i0.Input
              }], screen: [{
                  type: i0.Input
              }], shrink: [{
                  type: i0.Input
              }] });
  })();
  var DxiRowModule = /** @class */ (function () {
      function DxiRowModule() {
      }
      return DxiRowModule;
  }());
  /** @nocollapse */ DxiRowModule.ɵfac = function DxiRowModule_Factory(t) { return new (t || DxiRowModule)(); };
  /** @nocollapse */ DxiRowModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiRowModule });
  /** @nocollapse */ DxiRowModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiRowModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiRowComponent
                      ],
                      exports: [
                          DxiRowComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiRowModule, { declarations: [DxiRowComponent], exports: [DxiRowComponent] }); })();

  var DxoScaleTypeRangeComponent = /** @class */ (function (_super) {
      __extends(DxoScaleTypeRangeComponent, _super);
      function DxoScaleTypeRangeComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoScaleTypeRangeComponent.prototype, "max", {
          get: function () {
              return this._getOption('max');
          },
          set: function (value) {
              this._setOption('max', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleTypeRangeComponent.prototype, "min", {
          get: function () {
              return this._getOption('min');
          },
          set: function (value) {
              this._setOption('min', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleTypeRangeComponent.prototype, "_optionPath", {
          get: function () {
              return 'scaleTypeRange';
          },
          enumerable: false,
          configurable: true
      });
      DxoScaleTypeRangeComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoScaleTypeRangeComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoScaleTypeRangeComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoScaleTypeRangeComponent.ɵfac = function DxoScaleTypeRangeComponent_Factory(t) { return new (t || DxoScaleTypeRangeComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoScaleTypeRangeComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoScaleTypeRangeComponent, selectors: [["dxo-scale-type-range"]], inputs: { max: "max", min: "min" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoScaleTypeRangeComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoScaleTypeRangeComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-scale-type-range',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { max: [{
                  type: i0.Input
              }], min: [{
                  type: i0.Input
              }] });
  })();
  var DxoScaleTypeRangeModule = /** @class */ (function () {
      function DxoScaleTypeRangeModule() {
      }
      return DxoScaleTypeRangeModule;
  }());
  /** @nocollapse */ DxoScaleTypeRangeModule.ɵfac = function DxoScaleTypeRangeModule_Factory(t) { return new (t || DxoScaleTypeRangeModule)(); };
  /** @nocollapse */ DxoScaleTypeRangeModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoScaleTypeRangeModule });
  /** @nocollapse */ DxoScaleTypeRangeModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoScaleTypeRangeModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoScaleTypeRangeComponent
                      ],
                      exports: [
                          DxoScaleTypeRangeComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoScaleTypeRangeModule, { declarations: [DxoScaleTypeRangeComponent], exports: [DxoScaleTypeRangeComponent] }); })();

  var DxoScaleComponent = /** @class */ (function (_super) {
      __extends(DxoScaleComponent, _super);
      function DxoScaleComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoScaleComponent.prototype, "allowDecimals", {
          get: function () {
              return this._getOption('allowDecimals');
          },
          set: function (value) {
              this._setOption('allowDecimals', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "customMinorTicks", {
          get: function () {
              return this._getOption('customMinorTicks');
          },
          set: function (value) {
              this._setOption('customMinorTicks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "customTicks", {
          get: function () {
              return this._getOption('customTicks');
          },
          set: function (value) {
              this._setOption('customTicks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "endValue", {
          get: function () {
              return this._getOption('endValue');
          },
          set: function (value) {
              this._setOption('endValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "minorTick", {
          get: function () {
              return this._getOption('minorTick');
          },
          set: function (value) {
              this._setOption('minorTick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "minorTickInterval", {
          get: function () {
              return this._getOption('minorTickInterval');
          },
          set: function (value) {
              this._setOption('minorTickInterval', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "orientation", {
          get: function () {
              return this._getOption('orientation');
          },
          set: function (value) {
              this._setOption('orientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "scaleDivisionFactor", {
          get: function () {
              return this._getOption('scaleDivisionFactor');
          },
          set: function (value) {
              this._setOption('scaleDivisionFactor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "startValue", {
          get: function () {
              return this._getOption('startValue');
          },
          set: function (value) {
              this._setOption('startValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "tick", {
          get: function () {
              return this._getOption('tick');
          },
          set: function (value) {
              this._setOption('tick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "tickInterval", {
          get: function () {
              return this._getOption('tickInterval');
          },
          set: function (value) {
              this._setOption('tickInterval', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "horizontalOrientation", {
          get: function () {
              return this._getOption('horizontalOrientation');
          },
          set: function (value) {
              this._setOption('horizontalOrientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "verticalOrientation", {
          get: function () {
              return this._getOption('verticalOrientation');
          },
          set: function (value) {
              this._setOption('verticalOrientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "aggregateByCategory", {
          get: function () {
              return this._getOption('aggregateByCategory');
          },
          set: function (value) {
              this._setOption('aggregateByCategory', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "aggregationGroupWidth", {
          get: function () {
              return this._getOption('aggregationGroupWidth');
          },
          set: function (value) {
              this._setOption('aggregationGroupWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "aggregationInterval", {
          get: function () {
              return this._getOption('aggregationInterval');
          },
          set: function (value) {
              this._setOption('aggregationInterval', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "breaks", {
          get: function () {
              return this._getOption('breaks');
          },
          set: function (value) {
              this._setOption('breaks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "breakStyle", {
          get: function () {
              return this._getOption('breakStyle');
          },
          set: function (value) {
              this._setOption('breakStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "categories", {
          get: function () {
              return this._getOption('categories');
          },
          set: function (value) {
              this._setOption('categories', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "discreteAxisDivisionMode", {
          get: function () {
              return this._getOption('discreteAxisDivisionMode');
          },
          set: function (value) {
              this._setOption('discreteAxisDivisionMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "endOnTick", {
          get: function () {
              return this._getOption('endOnTick');
          },
          set: function (value) {
              this._setOption('endOnTick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "holidays", {
          get: function () {
              return this._getOption('holidays');
          },
          set: function (value) {
              this._setOption('holidays', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "linearThreshold", {
          get: function () {
              return this._getOption('linearThreshold');
          },
          set: function (value) {
              this._setOption('linearThreshold', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "logarithmBase", {
          get: function () {
              return this._getOption('logarithmBase');
          },
          set: function (value) {
              this._setOption('logarithmBase', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "marker", {
          get: function () {
              return this._getOption('marker');
          },
          set: function (value) {
              this._setOption('marker', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "maxRange", {
          get: function () {
              return this._getOption('maxRange');
          },
          set: function (value) {
              this._setOption('maxRange', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "minorTickCount", {
          get: function () {
              return this._getOption('minorTickCount');
          },
          set: function (value) {
              this._setOption('minorTickCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "minRange", {
          get: function () {
              return this._getOption('minRange');
          },
          set: function (value) {
              this._setOption('minRange', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "placeholderHeight", {
          get: function () {
              return this._getOption('placeholderHeight');
          },
          set: function (value) {
              this._setOption('placeholderHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "showCustomBoundaryTicks", {
          get: function () {
              return this._getOption('showCustomBoundaryTicks');
          },
          set: function (value) {
              this._setOption('showCustomBoundaryTicks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "singleWorkdays", {
          get: function () {
              return this._getOption('singleWorkdays');
          },
          set: function (value) {
              this._setOption('singleWorkdays', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "valueType", {
          get: function () {
              return this._getOption('valueType');
          },
          set: function (value) {
              this._setOption('valueType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "workdaysOnly", {
          get: function () {
              return this._getOption('workdaysOnly');
          },
          set: function (value) {
              this._setOption('workdaysOnly', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "workWeek", {
          get: function () {
              return this._getOption('workWeek');
          },
          set: function (value) {
              this._setOption('workWeek', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "_optionPath", {
          get: function () {
              return 'scale';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScaleComponent.prototype, "breaksChildren", {
          get: function () {
              return this._getOption('breaks');
          },
          set: function (value) {
              this.setChildren('breaks', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoScaleComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoScaleComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoScaleComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoScaleComponent.ɵfac = function DxoScaleComponent_Factory(t) { return new (t || DxoScaleComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoScaleComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoScaleComponent, selectors: [["dxo-scale"]], contentQueries: function DxoScaleComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiBreakComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.breaksChildren = _t);
          }
      }, inputs: { allowDecimals: "allowDecimals", customMinorTicks: "customMinorTicks", customTicks: "customTicks", endValue: "endValue", label: "label", minorTick: "minorTick", minorTickInterval: "minorTickInterval", orientation: "orientation", scaleDivisionFactor: "scaleDivisionFactor", startValue: "startValue", tick: "tick", tickInterval: "tickInterval", horizontalOrientation: "horizontalOrientation", verticalOrientation: "verticalOrientation", aggregateByCategory: "aggregateByCategory", aggregationGroupWidth: "aggregationGroupWidth", aggregationInterval: "aggregationInterval", breaks: "breaks", breakStyle: "breakStyle", categories: "categories", discreteAxisDivisionMode: "discreteAxisDivisionMode", endOnTick: "endOnTick", holidays: "holidays", linearThreshold: "linearThreshold", logarithmBase: "logarithmBase", marker: "marker", maxRange: "maxRange", minorTickCount: "minorTickCount", minRange: "minRange", placeholderHeight: "placeholderHeight", showCustomBoundaryTicks: "showCustomBoundaryTicks", singleWorkdays: "singleWorkdays", type: "type", valueType: "valueType", workdaysOnly: "workdaysOnly", workWeek: "workWeek" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoScaleComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoScaleComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-scale',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowDecimals: [{
                  type: i0.Input
              }], customMinorTicks: [{
                  type: i0.Input
              }], customTicks: [{
                  type: i0.Input
              }], endValue: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], minorTick: [{
                  type: i0.Input
              }], minorTickInterval: [{
                  type: i0.Input
              }], orientation: [{
                  type: i0.Input
              }], scaleDivisionFactor: [{
                  type: i0.Input
              }], startValue: [{
                  type: i0.Input
              }], tick: [{
                  type: i0.Input
              }], tickInterval: [{
                  type: i0.Input
              }], horizontalOrientation: [{
                  type: i0.Input
              }], verticalOrientation: [{
                  type: i0.Input
              }], aggregateByCategory: [{
                  type: i0.Input
              }], aggregationGroupWidth: [{
                  type: i0.Input
              }], aggregationInterval: [{
                  type: i0.Input
              }], breaks: [{
                  type: i0.Input
              }], breakStyle: [{
                  type: i0.Input
              }], categories: [{
                  type: i0.Input
              }], discreteAxisDivisionMode: [{
                  type: i0.Input
              }], endOnTick: [{
                  type: i0.Input
              }], holidays: [{
                  type: i0.Input
              }], linearThreshold: [{
                  type: i0.Input
              }], logarithmBase: [{
                  type: i0.Input
              }], marker: [{
                  type: i0.Input
              }], maxRange: [{
                  type: i0.Input
              }], minorTickCount: [{
                  type: i0.Input
              }], minRange: [{
                  type: i0.Input
              }], placeholderHeight: [{
                  type: i0.Input
              }], showCustomBoundaryTicks: [{
                  type: i0.Input
              }], singleWorkdays: [{
                  type: i0.Input
              }], type: [{
                  type: i0.Input
              }], valueType: [{
                  type: i0.Input
              }], workdaysOnly: [{
                  type: i0.Input
              }], workWeek: [{
                  type: i0.Input
              }], breaksChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiBreakComponent; })]
              }] });
  })();
  var DxoScaleModule = /** @class */ (function () {
      function DxoScaleModule() {
      }
      return DxoScaleModule;
  }());
  /** @nocollapse */ DxoScaleModule.ɵfac = function DxoScaleModule_Factory(t) { return new (t || DxoScaleModule)(); };
  /** @nocollapse */ DxoScaleModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoScaleModule });
  /** @nocollapse */ DxoScaleModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoScaleModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoScaleComponent
                      ],
                      exports: [
                          DxoScaleComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoScaleModule, { declarations: [DxoScaleComponent], exports: [DxoScaleComponent] }); })();

  var DxoScatterComponent = /** @class */ (function (_super) {
      __extends(DxoScatterComponent, _super);
      function DxoScatterComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoScatterComponent.prototype, "_optionPath", {
          get: function () {
              return 'scatter';
          },
          enumerable: false,
          configurable: true
      });
      DxoScatterComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoScatterComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoScatterComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoScatterComponent.ɵfac = function DxoScatterComponent_Factory(t) { return new (t || DxoScatterComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoScatterComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoScatterComponent, selectors: [["dxo-scatter"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width", closed: "closed" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoScatterComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoScatterComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-scatter',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width',
                          'closed'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoScatterModule = /** @class */ (function () {
      function DxoScatterModule() {
      }
      return DxoScatterModule;
  }());
  /** @nocollapse */ DxoScatterModule.ɵfac = function DxoScatterModule_Factory(t) { return new (t || DxoScatterModule)(); };
  /** @nocollapse */ DxoScatterModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoScatterModule });
  /** @nocollapse */ DxoScatterModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoScatterModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoScatterComponent
                      ],
                      exports: [
                          DxoScatterComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoScatterModule, { declarations: [DxoScatterComponent], exports: [DxoScatterComponent] }); })();

  var DxoScrollBarComponent = /** @class */ (function (_super) {
      __extends(DxoScrollBarComponent, _super);
      function DxoScrollBarComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoScrollBarComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScrollBarComponent.prototype, "offset", {
          get: function () {
              return this._getOption('offset');
          },
          set: function (value) {
              this._setOption('offset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScrollBarComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScrollBarComponent.prototype, "position", {
          get: function () {
              return this._getOption('position');
          },
          set: function (value) {
              this._setOption('position', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScrollBarComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScrollBarComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoScrollBarComponent.prototype, "_optionPath", {
          get: function () {
              return 'scrollBar';
          },
          enumerable: false,
          configurable: true
      });
      DxoScrollBarComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoScrollBarComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoScrollBarComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoScrollBarComponent.ɵfac = function DxoScrollBarComponent_Factory(t) { return new (t || DxoScrollBarComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoScrollBarComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoScrollBarComponent, selectors: [["dxo-scroll-bar"]], inputs: { color: "color", offset: "offset", opacity: "opacity", position: "position", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoScrollBarComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoScrollBarComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-scroll-bar',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], offset: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], position: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoScrollBarModule = /** @class */ (function () {
      function DxoScrollBarModule() {
      }
      return DxoScrollBarModule;
  }());
  /** @nocollapse */ DxoScrollBarModule.ɵfac = function DxoScrollBarModule_Factory(t) { return new (t || DxoScrollBarModule)(); };
  /** @nocollapse */ DxoScrollBarModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoScrollBarModule });
  /** @nocollapse */ DxoScrollBarModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoScrollBarModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoScrollBarComponent
                      ],
                      exports: [
                          DxoScrollBarComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoScrollBarModule, { declarations: [DxoScrollBarComponent], exports: [DxoScrollBarComponent] }); })();

  var DxoSchedulerScrolling = /** @class */ (function (_super) {
      __extends(DxoSchedulerScrolling, _super);
      function DxoSchedulerScrolling() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoSchedulerScrolling.prototype, "columnRenderingMode", {
          get: function () {
              return this._getOption('columnRenderingMode');
          },
          set: function (value) {
              this._setOption('columnRenderingMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSchedulerScrolling.prototype, "mode", {
          get: function () {
              return this._getOption('mode');
          },
          set: function (value) {
              this._setOption('mode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSchedulerScrolling.prototype, "preloadEnabled", {
          get: function () {
              return this._getOption('preloadEnabled');
          },
          set: function (value) {
              this._setOption('preloadEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSchedulerScrolling.prototype, "renderAsync", {
          get: function () {
              return this._getOption('renderAsync');
          },
          set: function (value) {
              this._setOption('renderAsync', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSchedulerScrolling.prototype, "rowRenderingMode", {
          get: function () {
              return this._getOption('rowRenderingMode');
          },
          set: function (value) {
              this._setOption('rowRenderingMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSchedulerScrolling.prototype, "scrollByContent", {
          get: function () {
              return this._getOption('scrollByContent');
          },
          set: function (value) {
              this._setOption('scrollByContent', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSchedulerScrolling.prototype, "scrollByThumb", {
          get: function () {
              return this._getOption('scrollByThumb');
          },
          set: function (value) {
              this._setOption('scrollByThumb', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSchedulerScrolling.prototype, "showScrollbar", {
          get: function () {
              return this._getOption('showScrollbar');
          },
          set: function (value) {
              this._setOption('showScrollbar', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSchedulerScrolling.prototype, "useNative", {
          get: function () {
              return this._getOption('useNative');
          },
          set: function (value) {
              this._setOption('useNative', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoSchedulerScrolling;
  }(i1.NestedOption));
  /** @nocollapse */ DxoSchedulerScrolling.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoSchedulerScrolling_BaseFactory; return function DxoSchedulerScrolling_Factory(t) { return (ɵDxoSchedulerScrolling_BaseFactory || (ɵDxoSchedulerScrolling_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoSchedulerScrolling)))(t || DxoSchedulerScrolling); }; }();
  /** @nocollapse */ DxoSchedulerScrolling.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSchedulerScrolling, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSchedulerScrolling_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSchedulerScrolling, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoScrollingComponent = /** @class */ (function (_super) {
      __extends(DxoScrollingComponent, _super);
      function DxoScrollingComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoScrollingComponent.prototype, "_optionPath", {
          get: function () {
              return 'scrolling';
          },
          enumerable: false,
          configurable: true
      });
      DxoScrollingComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoScrollingComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoScrollingComponent;
  }(DxoSchedulerScrolling));
  /** @nocollapse */ DxoScrollingComponent.ɵfac = function DxoScrollingComponent_Factory(t) { return new (t || DxoScrollingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoScrollingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoScrollingComponent, selectors: [["dxo-scrolling"]], inputs: { columnRenderingMode: "columnRenderingMode", mode: "mode", preloadEnabled: "preloadEnabled", renderAsync: "renderAsync", rowRenderingMode: "rowRenderingMode", scrollByContent: "scrollByContent", scrollByThumb: "scrollByThumb", showScrollbar: "showScrollbar", useNative: "useNative" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoScrollingComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoScrollingComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-scrolling',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'columnRenderingMode',
                          'mode',
                          'preloadEnabled',
                          'renderAsync',
                          'rowRenderingMode',
                          'scrollByContent',
                          'scrollByThumb',
                          'showScrollbar',
                          'useNative'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoScrollingModule = /** @class */ (function () {
      function DxoScrollingModule() {
      }
      return DxoScrollingModule;
  }());
  /** @nocollapse */ DxoScrollingModule.ɵfac = function DxoScrollingModule_Factory(t) { return new (t || DxoScrollingModule)(); };
  /** @nocollapse */ DxoScrollingModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoScrollingModule });
  /** @nocollapse */ DxoScrollingModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoScrollingModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoScrollingComponent
                      ],
                      exports: [
                          DxoScrollingComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoScrollingModule, { declarations: [DxoScrollingComponent], exports: [DxoScrollingComponent] }); })();

  var DxoTextBoxOptions = /** @class */ (function (_super) {
      __extends(DxoTextBoxOptions, _super);
      function DxoTextBoxOptions() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoTextBoxOptions.prototype, "accessKey", {
          get: function () {
              return this._getOption('accessKey');
          },
          set: function (value) {
              this._setOption('accessKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "activeStateEnabled", {
          get: function () {
              return this._getOption('activeStateEnabled');
          },
          set: function (value) {
              this._setOption('activeStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "buttons", {
          get: function () {
              return this._getOption('buttons');
          },
          set: function (value) {
              this._setOption('buttons', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "elementAttr", {
          get: function () {
              return this._getOption('elementAttr');
          },
          set: function (value) {
              this._setOption('elementAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "focusStateEnabled", {
          get: function () {
              return this._getOption('focusStateEnabled');
          },
          set: function (value) {
              this._setOption('focusStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "hint", {
          get: function () {
              return this._getOption('hint');
          },
          set: function (value) {
              this._setOption('hint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "hoverStateEnabled", {
          get: function () {
              return this._getOption('hoverStateEnabled');
          },
          set: function (value) {
              this._setOption('hoverStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "inputAttr", {
          get: function () {
              return this._getOption('inputAttr');
          },
          set: function (value) {
              this._setOption('inputAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "isDirty", {
          get: function () {
              return this._getOption('isDirty');
          },
          set: function (value) {
              this._setOption('isDirty', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "isValid", {
          get: function () {
              return this._getOption('isValid');
          },
          set: function (value) {
              this._setOption('isValid', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "labelMode", {
          get: function () {
              return this._getOption('labelMode');
          },
          set: function (value) {
              this._setOption('labelMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "mask", {
          get: function () {
              return this._getOption('mask');
          },
          set: function (value) {
              this._setOption('mask', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "maskChar", {
          get: function () {
              return this._getOption('maskChar');
          },
          set: function (value) {
              this._setOption('maskChar', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "maskInvalidMessage", {
          get: function () {
              return this._getOption('maskInvalidMessage');
          },
          set: function (value) {
              this._setOption('maskInvalidMessage', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "maskRules", {
          get: function () {
              return this._getOption('maskRules');
          },
          set: function (value) {
              this._setOption('maskRules', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "maxLength", {
          get: function () {
              return this._getOption('maxLength');
          },
          set: function (value) {
              this._setOption('maxLength', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "mode", {
          get: function () {
              return this._getOption('mode');
          },
          set: function (value) {
              this._setOption('mode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onChange", {
          get: function () {
              return this._getOption('onChange');
          },
          set: function (value) {
              this._setOption('onChange', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onContentReady", {
          get: function () {
              return this._getOption('onContentReady');
          },
          set: function (value) {
              this._setOption('onContentReady', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onCopy", {
          get: function () {
              return this._getOption('onCopy');
          },
          set: function (value) {
              this._setOption('onCopy', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onCut", {
          get: function () {
              return this._getOption('onCut');
          },
          set: function (value) {
              this._setOption('onCut', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onDisposing", {
          get: function () {
              return this._getOption('onDisposing');
          },
          set: function (value) {
              this._setOption('onDisposing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onEnterKey", {
          get: function () {
              return this._getOption('onEnterKey');
          },
          set: function (value) {
              this._setOption('onEnterKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onFocusIn", {
          get: function () {
              return this._getOption('onFocusIn');
          },
          set: function (value) {
              this._setOption('onFocusIn', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onFocusOut", {
          get: function () {
              return this._getOption('onFocusOut');
          },
          set: function (value) {
              this._setOption('onFocusOut', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onInitialized", {
          get: function () {
              return this._getOption('onInitialized');
          },
          set: function (value) {
              this._setOption('onInitialized', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onInput", {
          get: function () {
              return this._getOption('onInput');
          },
          set: function (value) {
              this._setOption('onInput', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onKeyDown", {
          get: function () {
              return this._getOption('onKeyDown');
          },
          set: function (value) {
              this._setOption('onKeyDown', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onKeyUp", {
          get: function () {
              return this._getOption('onKeyUp');
          },
          set: function (value) {
              this._setOption('onKeyUp', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onOptionChanged", {
          get: function () {
              return this._getOption('onOptionChanged');
          },
          set: function (value) {
              this._setOption('onOptionChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onPaste", {
          get: function () {
              return this._getOption('onPaste');
          },
          set: function (value) {
              this._setOption('onPaste', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "onValueChanged", {
          get: function () {
              return this._getOption('onValueChanged');
          },
          set: function (value) {
              this._setOption('onValueChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "placeholder", {
          get: function () {
              return this._getOption('placeholder');
          },
          set: function (value) {
              this._setOption('placeholder', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "readOnly", {
          get: function () {
              return this._getOption('readOnly');
          },
          set: function (value) {
              this._setOption('readOnly', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "rtlEnabled", {
          get: function () {
              return this._getOption('rtlEnabled');
          },
          set: function (value) {
              this._setOption('rtlEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "showClearButton", {
          get: function () {
              return this._getOption('showClearButton');
          },
          set: function (value) {
              this._setOption('showClearButton', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "showMaskMode", {
          get: function () {
              return this._getOption('showMaskMode');
          },
          set: function (value) {
              this._setOption('showMaskMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "spellcheck", {
          get: function () {
              return this._getOption('spellcheck');
          },
          set: function (value) {
              this._setOption('spellcheck', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "stylingMode", {
          get: function () {
              return this._getOption('stylingMode');
          },
          set: function (value) {
              this._setOption('stylingMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "tabIndex", {
          get: function () {
              return this._getOption('tabIndex');
          },
          set: function (value) {
              this._setOption('tabIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "useMaskedValue", {
          get: function () {
              return this._getOption('useMaskedValue');
          },
          set: function (value) {
              this._setOption('useMaskedValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "validationError", {
          get: function () {
              return this._getOption('validationError');
          },
          set: function (value) {
              this._setOption('validationError', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "validationErrors", {
          get: function () {
              return this._getOption('validationErrors');
          },
          set: function (value) {
              this._setOption('validationErrors', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "validationMessageMode", {
          get: function () {
              return this._getOption('validationMessageMode');
          },
          set: function (value) {
              this._setOption('validationMessageMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "validationMessagePosition", {
          get: function () {
              return this._getOption('validationMessagePosition');
          },
          set: function (value) {
              this._setOption('validationMessagePosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "validationStatus", {
          get: function () {
              return this._getOption('validationStatus');
          },
          set: function (value) {
              this._setOption('validationStatus', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "value", {
          get: function () {
              return this._getOption('value');
          },
          set: function (value) {
              this._setOption('value', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "valueChangeEvent", {
          get: function () {
              return this._getOption('valueChangeEvent');
          },
          set: function (value) {
              this._setOption('valueChangeEvent', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextBoxOptions.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoTextBoxOptions;
  }(i1.NestedOption));
  /** @nocollapse */ DxoTextBoxOptions.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoTextBoxOptions_BaseFactory; return function DxoTextBoxOptions_Factory(t) { return (ɵDxoTextBoxOptions_BaseFactory || (ɵDxoTextBoxOptions_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoTextBoxOptions)))(t || DxoTextBoxOptions); }; }();
  /** @nocollapse */ DxoTextBoxOptions.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoTextBoxOptions, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTextBoxOptions_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTextBoxOptions, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoSearchEditorOptionsComponent = /** @class */ (function (_super) {
      __extends(DxoSearchEditorOptionsComponent, _super);
      function DxoSearchEditorOptionsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'textChange' },
              { emit: 'valueChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSearchEditorOptionsComponent.prototype, "_optionPath", {
          get: function () {
              return 'searchEditorOptions';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSearchEditorOptionsComponent.prototype, "buttonsChildren", {
          get: function () {
              return this._getOption('buttons');
          },
          set: function (value) {
              this.setChildren('buttons', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoSearchEditorOptionsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSearchEditorOptionsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSearchEditorOptionsComponent;
  }(DxoTextBoxOptions));
  /** @nocollapse */ DxoSearchEditorOptionsComponent.ɵfac = function DxoSearchEditorOptionsComponent_Factory(t) { return new (t || DxoSearchEditorOptionsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSearchEditorOptionsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSearchEditorOptionsComponent, selectors: [["dxo-search-editor-options"]], contentQueries: function DxoSearchEditorOptionsComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiButtonComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.buttonsChildren = _t);
          }
      }, inputs: { accessKey: "accessKey", activeStateEnabled: "activeStateEnabled", buttons: "buttons", disabled: "disabled", elementAttr: "elementAttr", focusStateEnabled: "focusStateEnabled", height: "height", hint: "hint", hoverStateEnabled: "hoverStateEnabled", inputAttr: "inputAttr", isDirty: "isDirty", isValid: "isValid", label: "label", labelMode: "labelMode", mask: "mask", maskChar: "maskChar", maskInvalidMessage: "maskInvalidMessage", maskRules: "maskRules", maxLength: "maxLength", mode: "mode", name: "name", onChange: "onChange", onContentReady: "onContentReady", onCopy: "onCopy", onCut: "onCut", onDisposing: "onDisposing", onEnterKey: "onEnterKey", onFocusIn: "onFocusIn", onFocusOut: "onFocusOut", onInitialized: "onInitialized", onInput: "onInput", onKeyDown: "onKeyDown", onKeyUp: "onKeyUp", onOptionChanged: "onOptionChanged", onPaste: "onPaste", onValueChanged: "onValueChanged", placeholder: "placeholder", readOnly: "readOnly", rtlEnabled: "rtlEnabled", showClearButton: "showClearButton", showMaskMode: "showMaskMode", spellcheck: "spellcheck", stylingMode: "stylingMode", tabIndex: "tabIndex", text: "text", useMaskedValue: "useMaskedValue", validationError: "validationError", validationErrors: "validationErrors", validationMessageMode: "validationMessageMode", validationMessagePosition: "validationMessagePosition", validationStatus: "validationStatus", value: "value", valueChangeEvent: "valueChangeEvent", visible: "visible", width: "width" }, outputs: { textChange: "textChange", valueChange: "valueChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSearchEditorOptionsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSearchEditorOptionsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-search-editor-options',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'accessKey',
                          'activeStateEnabled',
                          'buttons',
                          'disabled',
                          'elementAttr',
                          'focusStateEnabled',
                          'height',
                          'hint',
                          'hoverStateEnabled',
                          'inputAttr',
                          'isDirty',
                          'isValid',
                          'label',
                          'labelMode',
                          'mask',
                          'maskChar',
                          'maskInvalidMessage',
                          'maskRules',
                          'maxLength',
                          'mode',
                          'name',
                          'onChange',
                          'onContentReady',
                          'onCopy',
                          'onCut',
                          'onDisposing',
                          'onEnterKey',
                          'onFocusIn',
                          'onFocusOut',
                          'onInitialized',
                          'onInput',
                          'onKeyDown',
                          'onKeyUp',
                          'onOptionChanged',
                          'onPaste',
                          'onValueChanged',
                          'placeholder',
                          'readOnly',
                          'rtlEnabled',
                          'showClearButton',
                          'showMaskMode',
                          'spellcheck',
                          'stylingMode',
                          'tabIndex',
                          'text',
                          'useMaskedValue',
                          'validationError',
                          'validationErrors',
                          'validationMessageMode',
                          'validationMessagePosition',
                          'validationStatus',
                          'value',
                          'valueChangeEvent',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { textChange: [{
                  type: i0.Output
              }], valueChange: [{
                  type: i0.Output
              }], buttonsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiButtonComponent; })]
              }] });
  })();
  var DxoSearchEditorOptionsModule = /** @class */ (function () {
      function DxoSearchEditorOptionsModule() {
      }
      return DxoSearchEditorOptionsModule;
  }());
  /** @nocollapse */ DxoSearchEditorOptionsModule.ɵfac = function DxoSearchEditorOptionsModule_Factory(t) { return new (t || DxoSearchEditorOptionsModule)(); };
  /** @nocollapse */ DxoSearchEditorOptionsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSearchEditorOptionsModule });
  /** @nocollapse */ DxoSearchEditorOptionsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSearchEditorOptionsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSearchEditorOptionsComponent
                      ],
                      exports: [
                          DxoSearchEditorOptionsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSearchEditorOptionsModule, { declarations: [DxoSearchEditorOptionsComponent], exports: [DxoSearchEditorOptionsComponent] }); })();

  var DxoSearchPanelComponent = /** @class */ (function (_super) {
      __extends(DxoSearchPanelComponent, _super);
      function DxoSearchPanelComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'textChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSearchPanelComponent.prototype, "highlightCaseSensitive", {
          get: function () {
              return this._getOption('highlightCaseSensitive');
          },
          set: function (value) {
              this._setOption('highlightCaseSensitive', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSearchPanelComponent.prototype, "highlightSearchText", {
          get: function () {
              return this._getOption('highlightSearchText');
          },
          set: function (value) {
              this._setOption('highlightSearchText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSearchPanelComponent.prototype, "placeholder", {
          get: function () {
              return this._getOption('placeholder');
          },
          set: function (value) {
              this._setOption('placeholder', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSearchPanelComponent.prototype, "searchVisibleColumnsOnly", {
          get: function () {
              return this._getOption('searchVisibleColumnsOnly');
          },
          set: function (value) {
              this._setOption('searchVisibleColumnsOnly', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSearchPanelComponent.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSearchPanelComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSearchPanelComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSearchPanelComponent.prototype, "_optionPath", {
          get: function () {
              return 'searchPanel';
          },
          enumerable: false,
          configurable: true
      });
      DxoSearchPanelComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSearchPanelComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSearchPanelComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoSearchPanelComponent.ɵfac = function DxoSearchPanelComponent_Factory(t) { return new (t || DxoSearchPanelComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSearchPanelComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSearchPanelComponent, selectors: [["dxo-search-panel"]], inputs: { highlightCaseSensitive: "highlightCaseSensitive", highlightSearchText: "highlightSearchText", placeholder: "placeholder", searchVisibleColumnsOnly: "searchVisibleColumnsOnly", text: "text", visible: "visible", width: "width" }, outputs: { textChange: "textChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSearchPanelComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSearchPanelComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-search-panel',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { highlightCaseSensitive: [{
                  type: i0.Input
              }], highlightSearchText: [{
                  type: i0.Input
              }], placeholder: [{
                  type: i0.Input
              }], searchVisibleColumnsOnly: [{
                  type: i0.Input
              }], text: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }], textChange: [{
                  type: i0.Output
              }] });
  })();
  var DxoSearchPanelModule = /** @class */ (function () {
      function DxoSearchPanelModule() {
      }
      return DxoSearchPanelModule;
  }());
  /** @nocollapse */ DxoSearchPanelModule.ɵfac = function DxoSearchPanelModule_Factory(t) { return new (t || DxoSearchPanelModule)(); };
  /** @nocollapse */ DxoSearchPanelModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSearchPanelModule });
  /** @nocollapse */ DxoSearchPanelModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSearchPanelModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSearchPanelComponent
                      ],
                      exports: [
                          DxoSearchPanelComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSearchPanelModule, { declarations: [DxoSearchPanelComponent], exports: [DxoSearchPanelComponent] }); })();

  var DxoColumnChooserSearchConfig = /** @class */ (function (_super) {
      __extends(DxoColumnChooserSearchConfig, _super);
      function DxoColumnChooserSearchConfig() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoColumnChooserSearchConfig.prototype, "editorOptions", {
          get: function () {
              return this._getOption('editorOptions');
          },
          set: function (value) {
              this._setOption('editorOptions', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserSearchConfig.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserSearchConfig.prototype, "timeout", {
          get: function () {
              return this._getOption('timeout');
          },
          set: function (value) {
              this._setOption('timeout', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserSearchConfig.prototype, "mode", {
          get: function () {
              return this._getOption('mode');
          },
          set: function (value) {
              this._setOption('mode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserSearchConfig.prototype, "searchExpr", {
          get: function () {
              return this._getOption('searchExpr');
          },
          set: function (value) {
              this._setOption('searchExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoColumnChooserSearchConfig;
  }(i1.NestedOption));
  /** @nocollapse */ DxoColumnChooserSearchConfig.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoColumnChooserSearchConfig_BaseFactory; return function DxoColumnChooserSearchConfig_Factory(t) { return (ɵDxoColumnChooserSearchConfig_BaseFactory || (ɵDxoColumnChooserSearchConfig_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoColumnChooserSearchConfig)))(t || DxoColumnChooserSearchConfig); }; }();
  /** @nocollapse */ DxoColumnChooserSearchConfig.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoColumnChooserSearchConfig, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoColumnChooserSearchConfig_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoColumnChooserSearchConfig, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoSearchComponent = /** @class */ (function (_super) {
      __extends(DxoSearchComponent, _super);
      function DxoSearchComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSearchComponent.prototype, "_optionPath", {
          get: function () {
              return 'search';
          },
          enumerable: false,
          configurable: true
      });
      DxoSearchComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSearchComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSearchComponent;
  }(DxoColumnChooserSearchConfig));
  /** @nocollapse */ DxoSearchComponent.ɵfac = function DxoSearchComponent_Factory(t) { return new (t || DxoSearchComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSearchComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSearchComponent, selectors: [["dxo-search"]], inputs: { editorOptions: "editorOptions", enabled: "enabled", timeout: "timeout", mode: "mode", searchExpr: "searchExpr" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSearchComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSearchComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-search',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'editorOptions',
                          'enabled',
                          'timeout',
                          'mode',
                          'searchExpr'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoSearchModule = /** @class */ (function () {
      function DxoSearchModule() {
      }
      return DxoSearchModule;
  }());
  /** @nocollapse */ DxoSearchModule.ɵfac = function DxoSearchModule_Factory(t) { return new (t || DxoSearchModule)(); };
  /** @nocollapse */ DxoSearchModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSearchModule });
  /** @nocollapse */ DxoSearchModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSearchModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSearchComponent
                      ],
                      exports: [
                          DxoSearchComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSearchModule, { declarations: [DxoSearchComponent], exports: [DxoSearchComponent] }); })();

  var DxoSelectionStyleComponent = /** @class */ (function (_super) {
      __extends(DxoSelectionStyleComponent, _super);
      function DxoSelectionStyleComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSelectionStyleComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSelectionStyleComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSelectionStyleComponent.prototype, "size", {
          get: function () {
              return this._getOption('size');
          },
          set: function (value) {
              this._setOption('size', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSelectionStyleComponent.prototype, "dashStyle", {
          get: function () {
              return this._getOption('dashStyle');
          },
          set: function (value) {
              this._setOption('dashStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSelectionStyleComponent.prototype, "hatching", {
          get: function () {
              return this._getOption('hatching');
          },
          set: function (value) {
              this._setOption('hatching', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSelectionStyleComponent.prototype, "highlight", {
          get: function () {
              return this._getOption('highlight');
          },
          set: function (value) {
              this._setOption('highlight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSelectionStyleComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSelectionStyleComponent.prototype, "_optionPath", {
          get: function () {
              return 'selectionStyle';
          },
          enumerable: false,
          configurable: true
      });
      DxoSelectionStyleComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSelectionStyleComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSelectionStyleComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoSelectionStyleComponent.ɵfac = function DxoSelectionStyleComponent_Factory(t) { return new (t || DxoSelectionStyleComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSelectionStyleComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSelectionStyleComponent, selectors: [["dxo-selection-style"]], inputs: { border: "border", color: "color", size: "size", dashStyle: "dashStyle", hatching: "hatching", highlight: "highlight", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSelectionStyleComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSelectionStyleComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-selection-style',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { border: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], size: [{
                  type: i0.Input
              }], dashStyle: [{
                  type: i0.Input
              }], hatching: [{
                  type: i0.Input
              }], highlight: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoSelectionStyleModule = /** @class */ (function () {
      function DxoSelectionStyleModule() {
      }
      return DxoSelectionStyleModule;
  }());
  /** @nocollapse */ DxoSelectionStyleModule.ɵfac = function DxoSelectionStyleModule_Factory(t) { return new (t || DxoSelectionStyleModule)(); };
  /** @nocollapse */ DxoSelectionStyleModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSelectionStyleModule });
  /** @nocollapse */ DxoSelectionStyleModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSelectionStyleModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSelectionStyleComponent
                      ],
                      exports: [
                          DxoSelectionStyleComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSelectionStyleModule, { declarations: [DxoSelectionStyleComponent], exports: [DxoSelectionStyleComponent] }); })();

  var DxoColumnChooserSelectionConfig = /** @class */ (function (_super) {
      __extends(DxoColumnChooserSelectionConfig, _super);
      function DxoColumnChooserSelectionConfig() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoColumnChooserSelectionConfig.prototype, "allowSelectAll", {
          get: function () {
              return this._getOption('allowSelectAll');
          },
          set: function (value) {
              this._setOption('allowSelectAll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserSelectionConfig.prototype, "recursive", {
          get: function () {
              return this._getOption('recursive');
          },
          set: function (value) {
              this._setOption('recursive', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserSelectionConfig.prototype, "selectByClick", {
          get: function () {
              return this._getOption('selectByClick');
          },
          set: function (value) {
              this._setOption('selectByClick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserSelectionConfig.prototype, "deferred", {
          get: function () {
              return this._getOption('deferred');
          },
          set: function (value) {
              this._setOption('deferred', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserSelectionConfig.prototype, "mode", {
          get: function () {
              return this._getOption('mode');
          },
          set: function (value) {
              this._setOption('mode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserSelectionConfig.prototype, "selectAllMode", {
          get: function () {
              return this._getOption('selectAllMode');
          },
          set: function (value) {
              this._setOption('selectAllMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoColumnChooserSelectionConfig.prototype, "showCheckBoxesMode", {
          get: function () {
              return this._getOption('showCheckBoxesMode');
          },
          set: function (value) {
              this._setOption('showCheckBoxesMode', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoColumnChooserSelectionConfig;
  }(i1.NestedOption));
  /** @nocollapse */ DxoColumnChooserSelectionConfig.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoColumnChooserSelectionConfig_BaseFactory; return function DxoColumnChooserSelectionConfig_Factory(t) { return (ɵDxoColumnChooserSelectionConfig_BaseFactory || (ɵDxoColumnChooserSelectionConfig_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoColumnChooserSelectionConfig)))(t || DxoColumnChooserSelectionConfig); }; }();
  /** @nocollapse */ DxoColumnChooserSelectionConfig.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoColumnChooserSelectionConfig, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoColumnChooserSelectionConfig_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoColumnChooserSelectionConfig, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoSelectionComponent = /** @class */ (function (_super) {
      __extends(DxoSelectionComponent, _super);
      function DxoSelectionComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSelectionComponent.prototype, "_optionPath", {
          get: function () {
              return 'selection';
          },
          enumerable: false,
          configurable: true
      });
      DxoSelectionComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSelectionComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSelectionComponent;
  }(DxoColumnChooserSelectionConfig));
  /** @nocollapse */ DxoSelectionComponent.ɵfac = function DxoSelectionComponent_Factory(t) { return new (t || DxoSelectionComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSelectionComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSelectionComponent, selectors: [["dxo-selection"]], inputs: { allowSelectAll: "allowSelectAll", recursive: "recursive", selectByClick: "selectByClick", deferred: "deferred", mode: "mode", selectAllMode: "selectAllMode", showCheckBoxesMode: "showCheckBoxesMode" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSelectionComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSelectionComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-selection',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'allowSelectAll',
                          'recursive',
                          'selectByClick',
                          'deferred',
                          'mode',
                          'selectAllMode',
                          'showCheckBoxesMode'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoSelectionModule = /** @class */ (function () {
      function DxoSelectionModule() {
      }
      return DxoSelectionModule;
  }());
  /** @nocollapse */ DxoSelectionModule.ɵfac = function DxoSelectionModule_Factory(t) { return new (t || DxoSelectionModule)(); };
  /** @nocollapse */ DxoSelectionModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSelectionModule });
  /** @nocollapse */ DxoSelectionModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSelectionModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSelectionComponent
                      ],
                      exports: [
                          DxoSelectionComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSelectionModule, { declarations: [DxoSelectionComponent], exports: [DxoSelectionComponent] }); })();

  var DxoSeriesTemplateComponent = /** @class */ (function (_super) {
      __extends(DxoSeriesTemplateComponent, _super);
      function DxoSeriesTemplateComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSeriesTemplateComponent.prototype, "customizeSeries", {
          get: function () {
              return this._getOption('customizeSeries');
          },
          set: function (value) {
              this._setOption('customizeSeries', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSeriesTemplateComponent.prototype, "nameField", {
          get: function () {
              return this._getOption('nameField');
          },
          set: function (value) {
              this._setOption('nameField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSeriesTemplateComponent.prototype, "_optionPath", {
          get: function () {
              return 'seriesTemplate';
          },
          enumerable: false,
          configurable: true
      });
      DxoSeriesTemplateComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSeriesTemplateComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSeriesTemplateComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoSeriesTemplateComponent.ɵfac = function DxoSeriesTemplateComponent_Factory(t) { return new (t || DxoSeriesTemplateComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSeriesTemplateComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSeriesTemplateComponent, selectors: [["dxo-series-template"]], inputs: { customizeSeries: "customizeSeries", nameField: "nameField" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSeriesTemplateComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSeriesTemplateComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-series-template',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { customizeSeries: [{
                  type: i0.Input
              }], nameField: [{
                  type: i0.Input
              }] });
  })();
  var DxoSeriesTemplateModule = /** @class */ (function () {
      function DxoSeriesTemplateModule() {
      }
      return DxoSeriesTemplateModule;
  }());
  /** @nocollapse */ DxoSeriesTemplateModule.ɵfac = function DxoSeriesTemplateModule_Factory(t) { return new (t || DxoSeriesTemplateModule)(); };
  /** @nocollapse */ DxoSeriesTemplateModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSeriesTemplateModule });
  /** @nocollapse */ DxoSeriesTemplateModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSeriesTemplateModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSeriesTemplateComponent
                      ],
                      exports: [
                          DxoSeriesTemplateComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSeriesTemplateModule, { declarations: [DxoSeriesTemplateComponent], exports: [DxoSeriesTemplateComponent] }); })();

  var DxoShadowComponent = /** @class */ (function (_super) {
      __extends(DxoShadowComponent, _super);
      function DxoShadowComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoShadowComponent.prototype, "blur", {
          get: function () {
              return this._getOption('blur');
          },
          set: function (value) {
              this._setOption('blur', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoShadowComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoShadowComponent.prototype, "offsetX", {
          get: function () {
              return this._getOption('offsetX');
          },
          set: function (value) {
              this._setOption('offsetX', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoShadowComponent.prototype, "offsetY", {
          get: function () {
              return this._getOption('offsetY');
          },
          set: function (value) {
              this._setOption('offsetY', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoShadowComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoShadowComponent.prototype, "_optionPath", {
          get: function () {
              return 'shadow';
          },
          enumerable: false,
          configurable: true
      });
      DxoShadowComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoShadowComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoShadowComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoShadowComponent.ɵfac = function DxoShadowComponent_Factory(t) { return new (t || DxoShadowComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoShadowComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoShadowComponent, selectors: [["dxo-shadow"]], inputs: { blur: "blur", color: "color", offsetX: "offsetX", offsetY: "offsetY", opacity: "opacity" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoShadowComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoShadowComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-shadow',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { blur: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], offsetX: [{
                  type: i0.Input
              }], offsetY: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }] });
  })();
  var DxoShadowModule = /** @class */ (function () {
      function DxoShadowModule() {
      }
      return DxoShadowModule;
  }());
  /** @nocollapse */ DxoShadowModule.ɵfac = function DxoShadowModule_Factory(t) { return new (t || DxoShadowModule)(); };
  /** @nocollapse */ DxoShadowModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoShadowModule });
  /** @nocollapse */ DxoShadowModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoShadowModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoShadowComponent
                      ],
                      exports: [
                          DxoShadowComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoShadowModule, { declarations: [DxoShadowComponent], exports: [DxoShadowComponent] }); })();

  var DxoShowEventComponent = /** @class */ (function (_super) {
      __extends(DxoShowEventComponent, _super);
      function DxoShowEventComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoShowEventComponent.prototype, "delay", {
          get: function () {
              return this._getOption('delay');
          },
          set: function (value) {
              this._setOption('delay', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoShowEventComponent.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoShowEventComponent.prototype, "_optionPath", {
          get: function () {
              return 'showEvent';
          },
          enumerable: false,
          configurable: true
      });
      DxoShowEventComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoShowEventComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoShowEventComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoShowEventComponent.ɵfac = function DxoShowEventComponent_Factory(t) { return new (t || DxoShowEventComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoShowEventComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoShowEventComponent, selectors: [["dxo-show-event"]], inputs: { delay: "delay", name: "name" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoShowEventComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoShowEventComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-show-event',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { delay: [{
                  type: i0.Input
              }], name: [{
                  type: i0.Input
              }] });
  })();
  var DxoShowEventModule = /** @class */ (function () {
      function DxoShowEventModule() {
      }
      return DxoShowEventModule;
  }());
  /** @nocollapse */ DxoShowEventModule.ɵfac = function DxoShowEventModule_Factory(t) { return new (t || DxoShowEventModule)(); };
  /** @nocollapse */ DxoShowEventModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoShowEventModule });
  /** @nocollapse */ DxoShowEventModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoShowEventModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoShowEventComponent
                      ],
                      exports: [
                          DxoShowEventComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoShowEventModule, { declarations: [DxoShowEventComponent], exports: [DxoShowEventComponent] }); })();

  var DxoShowFirstSubmenuModeComponent = /** @class */ (function (_super) {
      __extends(DxoShowFirstSubmenuModeComponent, _super);
      function DxoShowFirstSubmenuModeComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoShowFirstSubmenuModeComponent.prototype, "delay", {
          get: function () {
              return this._getOption('delay');
          },
          set: function (value) {
              this._setOption('delay', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoShowFirstSubmenuModeComponent.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoShowFirstSubmenuModeComponent.prototype, "_optionPath", {
          get: function () {
              return 'showFirstSubmenuMode';
          },
          enumerable: false,
          configurable: true
      });
      DxoShowFirstSubmenuModeComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoShowFirstSubmenuModeComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoShowFirstSubmenuModeComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoShowFirstSubmenuModeComponent.ɵfac = function DxoShowFirstSubmenuModeComponent_Factory(t) { return new (t || DxoShowFirstSubmenuModeComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoShowFirstSubmenuModeComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoShowFirstSubmenuModeComponent, selectors: [["dxo-show-first-submenu-mode"]], inputs: { delay: "delay", name: "name" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoShowFirstSubmenuModeComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoShowFirstSubmenuModeComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-show-first-submenu-mode',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { delay: [{
                  type: i0.Input
              }], name: [{
                  type: i0.Input
              }] });
  })();
  var DxoShowFirstSubmenuModeModule = /** @class */ (function () {
      function DxoShowFirstSubmenuModeModule() {
      }
      return DxoShowFirstSubmenuModeModule;
  }());
  /** @nocollapse */ DxoShowFirstSubmenuModeModule.ɵfac = function DxoShowFirstSubmenuModeModule_Factory(t) { return new (t || DxoShowFirstSubmenuModeModule)(); };
  /** @nocollapse */ DxoShowFirstSubmenuModeModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoShowFirstSubmenuModeModule });
  /** @nocollapse */ DxoShowFirstSubmenuModeModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoShowFirstSubmenuModeModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoShowFirstSubmenuModeComponent
                      ],
                      exports: [
                          DxoShowFirstSubmenuModeComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoShowFirstSubmenuModeModule, { declarations: [DxoShowFirstSubmenuModeComponent], exports: [DxoShowFirstSubmenuModeComponent] }); })();

  var DxoShowSubmenuModeComponent = /** @class */ (function (_super) {
      __extends(DxoShowSubmenuModeComponent, _super);
      function DxoShowSubmenuModeComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoShowSubmenuModeComponent.prototype, "delay", {
          get: function () {
              return this._getOption('delay');
          },
          set: function (value) {
              this._setOption('delay', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoShowSubmenuModeComponent.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoShowSubmenuModeComponent.prototype, "_optionPath", {
          get: function () {
              return 'showSubmenuMode';
          },
          enumerable: false,
          configurable: true
      });
      DxoShowSubmenuModeComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoShowSubmenuModeComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoShowSubmenuModeComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoShowSubmenuModeComponent.ɵfac = function DxoShowSubmenuModeComponent_Factory(t) { return new (t || DxoShowSubmenuModeComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoShowSubmenuModeComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoShowSubmenuModeComponent, selectors: [["dxo-show-submenu-mode"]], inputs: { delay: "delay", name: "name" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoShowSubmenuModeComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoShowSubmenuModeComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-show-submenu-mode',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { delay: [{
                  type: i0.Input
              }], name: [{
                  type: i0.Input
              }] });
  })();
  var DxoShowSubmenuModeModule = /** @class */ (function () {
      function DxoShowSubmenuModeModule() {
      }
      return DxoShowSubmenuModeModule;
  }());
  /** @nocollapse */ DxoShowSubmenuModeModule.ɵfac = function DxoShowSubmenuModeModule_Factory(t) { return new (t || DxoShowSubmenuModeModule)(); };
  /** @nocollapse */ DxoShowSubmenuModeModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoShowSubmenuModeModule });
  /** @nocollapse */ DxoShowSubmenuModeModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoShowSubmenuModeModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoShowSubmenuModeComponent
                      ],
                      exports: [
                          DxoShowSubmenuModeComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoShowSubmenuModeModule, { declarations: [DxoShowSubmenuModeComponent], exports: [DxoShowSubmenuModeComponent] }); })();

  var DxoShowComponent = /** @class */ (function (_super) {
      __extends(DxoShowComponent, _super);
      function DxoShowComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoShowComponent.prototype, "_optionPath", {
          get: function () {
              return 'show';
          },
          enumerable: false,
          configurable: true
      });
      DxoShowComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoShowComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoShowComponent;
  }(DxoAnimationConfig));
  /** @nocollapse */ DxoShowComponent.ɵfac = function DxoShowComponent_Factory(t) { return new (t || DxoShowComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoShowComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoShowComponent, selectors: [["dxo-show"]], inputs: { complete: "complete", delay: "delay", direction: "direction", duration: "duration", easing: "easing", from: "from", staggerDelay: "staggerDelay", start: "start", to: "to", type: "type" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoShowComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoShowComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-show',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'complete',
                          'delay',
                          'direction',
                          'duration',
                          'easing',
                          'from',
                          'staggerDelay',
                          'start',
                          'to',
                          'type'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoShowModule = /** @class */ (function () {
      function DxoShowModule() {
      }
      return DxoShowModule;
  }());
  /** @nocollapse */ DxoShowModule.ɵfac = function DxoShowModule_Factory(t) { return new (t || DxoShowModule)(); };
  /** @nocollapse */ DxoShowModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoShowModule });
  /** @nocollapse */ DxoShowModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoShowModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoShowComponent
                      ],
                      exports: [
                          DxoShowComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoShowModule, { declarations: [DxoShowComponent], exports: [DxoShowComponent] }); })();

  var DxoShutterComponent = /** @class */ (function (_super) {
      __extends(DxoShutterComponent, _super);
      function DxoShutterComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoShutterComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoShutterComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoShutterComponent.prototype, "_optionPath", {
          get: function () {
              return 'shutter';
          },
          enumerable: false,
          configurable: true
      });
      DxoShutterComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoShutterComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoShutterComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoShutterComponent.ɵfac = function DxoShutterComponent_Factory(t) { return new (t || DxoShutterComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoShutterComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoShutterComponent, selectors: [["dxo-shutter"]], inputs: { color: "color", opacity: "opacity" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoShutterComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoShutterComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-shutter',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }] });
  })();
  var DxoShutterModule = /** @class */ (function () {
      function DxoShutterModule() {
      }
      return DxoShutterModule;
  }());
  /** @nocollapse */ DxoShutterModule.ɵfac = function DxoShutterModule_Factory(t) { return new (t || DxoShutterModule)(); };
  /** @nocollapse */ DxoShutterModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoShutterModule });
  /** @nocollapse */ DxoShutterModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoShutterModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoShutterComponent
                      ],
                      exports: [
                          DxoShutterComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoShutterModule, { declarations: [DxoShutterComponent], exports: [DxoShutterComponent] }); })();

  var DxoSizeComponent = /** @class */ (function (_super) {
      __extends(DxoSizeComponent, _super);
      function DxoSizeComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSizeComponent.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSizeComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSizeComponent.prototype, "_optionPath", {
          get: function () {
              return 'size';
          },
          enumerable: false,
          configurable: true
      });
      DxoSizeComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSizeComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSizeComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoSizeComponent.ɵfac = function DxoSizeComponent_Factory(t) { return new (t || DxoSizeComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSizeComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSizeComponent, selectors: [["dxo-size"]], inputs: { height: "height", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSizeComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSizeComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-size',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { height: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoSizeModule = /** @class */ (function () {
      function DxoSizeModule() {
      }
      return DxoSizeModule;
  }());
  /** @nocollapse */ DxoSizeModule.ɵfac = function DxoSizeModule_Factory(t) { return new (t || DxoSizeModule)(); };
  /** @nocollapse */ DxoSizeModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSizeModule });
  /** @nocollapse */ DxoSizeModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSizeModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSizeComponent
                      ],
                      exports: [
                          DxoSizeComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSizeModule, { declarations: [DxoSizeComponent], exports: [DxoSizeComponent] }); })();

  var DxoSliderHandleComponent = /** @class */ (function (_super) {
      __extends(DxoSliderHandleComponent, _super);
      function DxoSliderHandleComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSliderHandleComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSliderHandleComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSliderHandleComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSliderHandleComponent.prototype, "_optionPath", {
          get: function () {
              return 'sliderHandle';
          },
          enumerable: false,
          configurable: true
      });
      DxoSliderHandleComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSliderHandleComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSliderHandleComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoSliderHandleComponent.ɵfac = function DxoSliderHandleComponent_Factory(t) { return new (t || DxoSliderHandleComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSliderHandleComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSliderHandleComponent, selectors: [["dxo-slider-handle"]], inputs: { color: "color", opacity: "opacity", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSliderHandleComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSliderHandleComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-slider-handle',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoSliderHandleModule = /** @class */ (function () {
      function DxoSliderHandleModule() {
      }
      return DxoSliderHandleModule;
  }());
  /** @nocollapse */ DxoSliderHandleModule.ɵfac = function DxoSliderHandleModule_Factory(t) { return new (t || DxoSliderHandleModule)(); };
  /** @nocollapse */ DxoSliderHandleModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSliderHandleModule });
  /** @nocollapse */ DxoSliderHandleModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSliderHandleModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSliderHandleComponent
                      ],
                      exports: [
                          DxoSliderHandleComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSliderHandleModule, { declarations: [DxoSliderHandleComponent], exports: [DxoSliderHandleComponent] }); })();

  var DxoSliderMarkerComponent = /** @class */ (function (_super) {
      __extends(DxoSliderMarkerComponent, _super);
      function DxoSliderMarkerComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSliderMarkerComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSliderMarkerComponent.prototype, "customizeText", {
          get: function () {
              return this._getOption('customizeText');
          },
          set: function (value) {
              this._setOption('customizeText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSliderMarkerComponent.prototype, "font", {
          get: function () {
              return this._getOption('font');
          },
          set: function (value) {
              this._setOption('font', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSliderMarkerComponent.prototype, "format", {
          get: function () {
              return this._getOption('format');
          },
          set: function (value) {
              this._setOption('format', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSliderMarkerComponent.prototype, "invalidRangeColor", {
          get: function () {
              return this._getOption('invalidRangeColor');
          },
          set: function (value) {
              this._setOption('invalidRangeColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSliderMarkerComponent.prototype, "paddingLeftRight", {
          get: function () {
              return this._getOption('paddingLeftRight');
          },
          set: function (value) {
              this._setOption('paddingLeftRight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSliderMarkerComponent.prototype, "paddingTopBottom", {
          get: function () {
              return this._getOption('paddingTopBottom');
          },
          set: function (value) {
              this._setOption('paddingTopBottom', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSliderMarkerComponent.prototype, "placeholderHeight", {
          get: function () {
              return this._getOption('placeholderHeight');
          },
          set: function (value) {
              this._setOption('placeholderHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSliderMarkerComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSliderMarkerComponent.prototype, "_optionPath", {
          get: function () {
              return 'sliderMarker';
          },
          enumerable: false,
          configurable: true
      });
      DxoSliderMarkerComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSliderMarkerComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSliderMarkerComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoSliderMarkerComponent.ɵfac = function DxoSliderMarkerComponent_Factory(t) { return new (t || DxoSliderMarkerComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSliderMarkerComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSliderMarkerComponent, selectors: [["dxo-slider-marker"]], inputs: { color: "color", customizeText: "customizeText", font: "font", format: "format", invalidRangeColor: "invalidRangeColor", paddingLeftRight: "paddingLeftRight", paddingTopBottom: "paddingTopBottom", placeholderHeight: "placeholderHeight", visible: "visible" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSliderMarkerComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSliderMarkerComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-slider-marker',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], customizeText: [{
                  type: i0.Input
              }], font: [{
                  type: i0.Input
              }], format: [{
                  type: i0.Input
              }], invalidRangeColor: [{
                  type: i0.Input
              }], paddingLeftRight: [{
                  type: i0.Input
              }], paddingTopBottom: [{
                  type: i0.Input
              }], placeholderHeight: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }] });
  })();
  var DxoSliderMarkerModule = /** @class */ (function () {
      function DxoSliderMarkerModule() {
      }
      return DxoSliderMarkerModule;
  }());
  /** @nocollapse */ DxoSliderMarkerModule.ɵfac = function DxoSliderMarkerModule_Factory(t) { return new (t || DxoSliderMarkerModule)(); };
  /** @nocollapse */ DxoSliderMarkerModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSliderMarkerModule });
  /** @nocollapse */ DxoSliderMarkerModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSliderMarkerModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSliderMarkerComponent
                      ],
                      exports: [
                          DxoSliderMarkerComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSliderMarkerModule, { declarations: [DxoSliderMarkerComponent], exports: [DxoSliderMarkerComponent] }); })();

  var DxoSmallValuesGroupingComponent = /** @class */ (function (_super) {
      __extends(DxoSmallValuesGroupingComponent, _super);
      function DxoSmallValuesGroupingComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "groupName", {
          get: function () {
              return this._getOption('groupName');
          },
          set: function (value) {
              this._setOption('groupName', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "mode", {
          get: function () {
              return this._getOption('mode');
          },
          set: function (value) {
              this._setOption('mode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "threshold", {
          get: function () {
              return this._getOption('threshold');
          },
          set: function (value) {
              this._setOption('threshold', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "topCount", {
          get: function () {
              return this._getOption('topCount');
          },
          set: function (value) {
              this._setOption('topCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "_optionPath", {
          get: function () {
              return 'smallValuesGrouping';
          },
          enumerable: false,
          configurable: true
      });
      DxoSmallValuesGroupingComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSmallValuesGroupingComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSmallValuesGroupingComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoSmallValuesGroupingComponent.ɵfac = function DxoSmallValuesGroupingComponent_Factory(t) { return new (t || DxoSmallValuesGroupingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSmallValuesGroupingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSmallValuesGroupingComponent, selectors: [["dxo-small-values-grouping"]], inputs: { groupName: "groupName", mode: "mode", threshold: "threshold", topCount: "topCount" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSmallValuesGroupingComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSmallValuesGroupingComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-small-values-grouping',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { groupName: [{
                  type: i0.Input
              }], mode: [{
                  type: i0.Input
              }], threshold: [{
                  type: i0.Input
              }], topCount: [{
                  type: i0.Input
              }] });
  })();
  var DxoSmallValuesGroupingModule = /** @class */ (function () {
      function DxoSmallValuesGroupingModule() {
      }
      return DxoSmallValuesGroupingModule;
  }());
  /** @nocollapse */ DxoSmallValuesGroupingModule.ɵfac = function DxoSmallValuesGroupingModule_Factory(t) { return new (t || DxoSmallValuesGroupingModule)(); };
  /** @nocollapse */ DxoSmallValuesGroupingModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSmallValuesGroupingModule });
  /** @nocollapse */ DxoSmallValuesGroupingModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSmallValuesGroupingModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSmallValuesGroupingComponent
                      ],
                      exports: [
                          DxoSmallValuesGroupingComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSmallValuesGroupingModule, { declarations: [DxoSmallValuesGroupingComponent], exports: [DxoSmallValuesGroupingComponent] }); })();

  var DxiSortByGroupSummaryInfoComponent = /** @class */ (function (_super) {
      __extends(DxiSortByGroupSummaryInfoComponent, _super);
      function DxiSortByGroupSummaryInfoComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiSortByGroupSummaryInfoComponent.prototype, "groupColumn", {
          get: function () {
              return this._getOption('groupColumn');
          },
          set: function (value) {
              this._setOption('groupColumn', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiSortByGroupSummaryInfoComponent.prototype, "sortOrder", {
          get: function () {
              return this._getOption('sortOrder');
          },
          set: function (value) {
              this._setOption('sortOrder', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiSortByGroupSummaryInfoComponent.prototype, "summaryItem", {
          get: function () {
              return this._getOption('summaryItem');
          },
          set: function (value) {
              this._setOption('summaryItem', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiSortByGroupSummaryInfoComponent.prototype, "_optionPath", {
          get: function () {
              return 'sortByGroupSummaryInfo';
          },
          enumerable: false,
          configurable: true
      });
      DxiSortByGroupSummaryInfoComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiSortByGroupSummaryInfoComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiSortByGroupSummaryInfoComponent.ɵfac = function DxiSortByGroupSummaryInfoComponent_Factory(t) { return new (t || DxiSortByGroupSummaryInfoComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiSortByGroupSummaryInfoComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiSortByGroupSummaryInfoComponent, selectors: [["dxi-sort-by-group-summary-info"]], inputs: { groupColumn: "groupColumn", sortOrder: "sortOrder", summaryItem: "summaryItem" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiSortByGroupSummaryInfoComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiSortByGroupSummaryInfoComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-sort-by-group-summary-info',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { groupColumn: [{
                  type: i0.Input
              }], sortOrder: [{
                  type: i0.Input
              }], summaryItem: [{
                  type: i0.Input
              }] });
  })();
  var DxiSortByGroupSummaryInfoModule = /** @class */ (function () {
      function DxiSortByGroupSummaryInfoModule() {
      }
      return DxiSortByGroupSummaryInfoModule;
  }());
  /** @nocollapse */ DxiSortByGroupSummaryInfoModule.ɵfac = function DxiSortByGroupSummaryInfoModule_Factory(t) { return new (t || DxiSortByGroupSummaryInfoModule)(); };
  /** @nocollapse */ DxiSortByGroupSummaryInfoModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiSortByGroupSummaryInfoModule });
  /** @nocollapse */ DxiSortByGroupSummaryInfoModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiSortByGroupSummaryInfoModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiSortByGroupSummaryInfoComponent
                      ],
                      exports: [
                          DxiSortByGroupSummaryInfoComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiSortByGroupSummaryInfoModule, { declarations: [DxiSortByGroupSummaryInfoComponent], exports: [DxiSortByGroupSummaryInfoComponent] }); })();

  var DxoGanttSorting = /** @class */ (function (_super) {
      __extends(DxoGanttSorting, _super);
      function DxoGanttSorting() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoGanttSorting.prototype, "ascendingText", {
          get: function () {
              return this._getOption('ascendingText');
          },
          set: function (value) {
              this._setOption('ascendingText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttSorting.prototype, "clearText", {
          get: function () {
              return this._getOption('clearText');
          },
          set: function (value) {
              this._setOption('clearText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttSorting.prototype, "descendingText", {
          get: function () {
              return this._getOption('descendingText');
          },
          set: function (value) {
              this._setOption('descendingText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttSorting.prototype, "mode", {
          get: function () {
              return this._getOption('mode');
          },
          set: function (value) {
              this._setOption('mode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttSorting.prototype, "showSortIndexes", {
          get: function () {
              return this._getOption('showSortIndexes');
          },
          set: function (value) {
              this._setOption('showSortIndexes', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoGanttSorting;
  }(i1.NestedOption));
  /** @nocollapse */ DxoGanttSorting.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoGanttSorting_BaseFactory; return function DxoGanttSorting_Factory(t) { return (ɵDxoGanttSorting_BaseFactory || (ɵDxoGanttSorting_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoGanttSorting)))(t || DxoGanttSorting); }; }();
  /** @nocollapse */ DxoGanttSorting.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoGanttSorting, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoGanttSorting_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGanttSorting, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoSortingComponent = /** @class */ (function (_super) {
      __extends(DxoSortingComponent, _super);
      function DxoSortingComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSortingComponent.prototype, "_optionPath", {
          get: function () {
              return 'sorting';
          },
          enumerable: false,
          configurable: true
      });
      DxoSortingComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSortingComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSortingComponent;
  }(DxoGanttSorting));
  /** @nocollapse */ DxoSortingComponent.ɵfac = function DxoSortingComponent_Factory(t) { return new (t || DxoSortingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSortingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSortingComponent, selectors: [["dxo-sorting"]], inputs: { ascendingText: "ascendingText", clearText: "clearText", descendingText: "descendingText", mode: "mode", showSortIndexes: "showSortIndexes" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSortingComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSortingComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-sorting',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'ascendingText',
                          'clearText',
                          'descendingText',
                          'mode',
                          'showSortIndexes'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoSortingModule = /** @class */ (function () {
      function DxoSortingModule() {
      }
      return DxoSortingModule;
  }());
  /** @nocollapse */ DxoSortingModule.ɵfac = function DxoSortingModule_Factory(t) { return new (t || DxoSortingModule)(); };
  /** @nocollapse */ DxoSortingModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSortingModule });
  /** @nocollapse */ DxoSortingModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSortingModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSortingComponent
                      ],
                      exports: [
                          DxoSortingComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSortingModule, { declarations: [DxoSortingComponent], exports: [DxoSortingComponent] }); })();

  var DxoSourceComponent = /** @class */ (function (_super) {
      __extends(DxoSourceComponent, _super);
      function DxoSourceComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSourceComponent.prototype, "grouping", {
          get: function () {
              return this._getOption('grouping');
          },
          set: function (value) {
              this._setOption('grouping', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSourceComponent.prototype, "layer", {
          get: function () {
              return this._getOption('layer');
          },
          set: function (value) {
              this._setOption('layer', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSourceComponent.prototype, "_optionPath", {
          get: function () {
              return 'source';
          },
          enumerable: false,
          configurable: true
      });
      DxoSourceComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSourceComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSourceComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoSourceComponent.ɵfac = function DxoSourceComponent_Factory(t) { return new (t || DxoSourceComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSourceComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSourceComponent, selectors: [["dxo-source"]], inputs: { grouping: "grouping", layer: "layer" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSourceComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSourceComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-source',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { grouping: [{
                  type: i0.Input
              }], layer: [{
                  type: i0.Input
              }] });
  })();
  var DxoSourceModule = /** @class */ (function () {
      function DxoSourceModule() {
      }
      return DxoSourceModule;
  }());
  /** @nocollapse */ DxoSourceModule.ɵfac = function DxoSourceModule_Factory(t) { return new (t || DxoSourceModule)(); };
  /** @nocollapse */ DxoSourceModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSourceModule });
  /** @nocollapse */ DxoSourceModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSourceModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSourceComponent
                      ],
                      exports: [
                          DxoSourceComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSourceModule, { declarations: [DxoSourceComponent], exports: [DxoSourceComponent] }); })();

  var DxoSplineComponent = /** @class */ (function (_super) {
      __extends(DxoSplineComponent, _super);
      function DxoSplineComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSplineComponent.prototype, "_optionPath", {
          get: function () {
              return 'spline';
          },
          enumerable: false,
          configurable: true
      });
      DxoSplineComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSplineComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSplineComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoSplineComponent.ɵfac = function DxoSplineComponent_Factory(t) { return new (t || DxoSplineComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSplineComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSplineComponent, selectors: [["dxo-spline"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSplineComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSplineComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-spline',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoSplineModule = /** @class */ (function () {
      function DxoSplineModule() {
      }
      return DxoSplineModule;
  }());
  /** @nocollapse */ DxoSplineModule.ɵfac = function DxoSplineModule_Factory(t) { return new (t || DxoSplineModule)(); };
  /** @nocollapse */ DxoSplineModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSplineModule });
  /** @nocollapse */ DxoSplineModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSplineModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSplineComponent
                      ],
                      exports: [
                          DxoSplineComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSplineModule, { declarations: [DxoSplineComponent], exports: [DxoSplineComponent] }); })();

  var DxoSplineareaComponent = /** @class */ (function (_super) {
      __extends(DxoSplineareaComponent, _super);
      function DxoSplineareaComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSplineareaComponent.prototype, "_optionPath", {
          get: function () {
              return 'splinearea';
          },
          enumerable: false,
          configurable: true
      });
      DxoSplineareaComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSplineareaComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSplineareaComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoSplineareaComponent.ɵfac = function DxoSplineareaComponent_Factory(t) { return new (t || DxoSplineareaComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSplineareaComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSplineareaComponent, selectors: [["dxo-splinearea"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSplineareaComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSplineareaComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-splinearea',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoSplineareaModule = /** @class */ (function () {
      function DxoSplineareaModule() {
      }
      return DxoSplineareaModule;
  }());
  /** @nocollapse */ DxoSplineareaModule.ɵfac = function DxoSplineareaModule_Factory(t) { return new (t || DxoSplineareaModule)(); };
  /** @nocollapse */ DxoSplineareaModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSplineareaModule });
  /** @nocollapse */ DxoSplineareaModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSplineareaModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSplineareaComponent
                      ],
                      exports: [
                          DxoSplineareaComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSplineareaModule, { declarations: [DxoSplineareaComponent], exports: [DxoSplineareaComponent] }); })();

  var DxoStackedareaComponent = /** @class */ (function (_super) {
      __extends(DxoStackedareaComponent, _super);
      function DxoStackedareaComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoStackedareaComponent.prototype, "_optionPath", {
          get: function () {
              return 'stackedarea';
          },
          enumerable: false,
          configurable: true
      });
      DxoStackedareaComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoStackedareaComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoStackedareaComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoStackedareaComponent.ɵfac = function DxoStackedareaComponent_Factory(t) { return new (t || DxoStackedareaComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoStackedareaComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoStackedareaComponent, selectors: [["dxo-stackedarea"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoStackedareaComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStackedareaComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-stackedarea',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoStackedareaModule = /** @class */ (function () {
      function DxoStackedareaModule() {
      }
      return DxoStackedareaModule;
  }());
  /** @nocollapse */ DxoStackedareaModule.ɵfac = function DxoStackedareaModule_Factory(t) { return new (t || DxoStackedareaModule)(); };
  /** @nocollapse */ DxoStackedareaModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoStackedareaModule });
  /** @nocollapse */ DxoStackedareaModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStackedareaModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoStackedareaComponent
                      ],
                      exports: [
                          DxoStackedareaComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoStackedareaModule, { declarations: [DxoStackedareaComponent], exports: [DxoStackedareaComponent] }); })();

  var DxoStackedbarComponent = /** @class */ (function (_super) {
      __extends(DxoStackedbarComponent, _super);
      function DxoStackedbarComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoStackedbarComponent.prototype, "_optionPath", {
          get: function () {
              return 'stackedbar';
          },
          enumerable: false,
          configurable: true
      });
      DxoStackedbarComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoStackedbarComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoStackedbarComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoStackedbarComponent.ɵfac = function DxoStackedbarComponent_Factory(t) { return new (t || DxoStackedbarComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoStackedbarComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoStackedbarComponent, selectors: [["dxo-stackedbar"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width", closed: "closed" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoStackedbarComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStackedbarComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-stackedbar',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width',
                          'closed'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoStackedbarModule = /** @class */ (function () {
      function DxoStackedbarModule() {
      }
      return DxoStackedbarModule;
  }());
  /** @nocollapse */ DxoStackedbarModule.ɵfac = function DxoStackedbarModule_Factory(t) { return new (t || DxoStackedbarModule)(); };
  /** @nocollapse */ DxoStackedbarModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoStackedbarModule });
  /** @nocollapse */ DxoStackedbarModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStackedbarModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoStackedbarComponent
                      ],
                      exports: [
                          DxoStackedbarComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoStackedbarModule, { declarations: [DxoStackedbarComponent], exports: [DxoStackedbarComponent] }); })();

  var DxoStackedlineComponent = /** @class */ (function (_super) {
      __extends(DxoStackedlineComponent, _super);
      function DxoStackedlineComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoStackedlineComponent.prototype, "_optionPath", {
          get: function () {
              return 'stackedline';
          },
          enumerable: false,
          configurable: true
      });
      DxoStackedlineComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoStackedlineComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoStackedlineComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoStackedlineComponent.ɵfac = function DxoStackedlineComponent_Factory(t) { return new (t || DxoStackedlineComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoStackedlineComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoStackedlineComponent, selectors: [["dxo-stackedline"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoStackedlineComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStackedlineComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-stackedline',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoStackedlineModule = /** @class */ (function () {
      function DxoStackedlineModule() {
      }
      return DxoStackedlineModule;
  }());
  /** @nocollapse */ DxoStackedlineModule.ɵfac = function DxoStackedlineModule_Factory(t) { return new (t || DxoStackedlineModule)(); };
  /** @nocollapse */ DxoStackedlineModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoStackedlineModule });
  /** @nocollapse */ DxoStackedlineModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStackedlineModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoStackedlineComponent
                      ],
                      exports: [
                          DxoStackedlineComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoStackedlineModule, { declarations: [DxoStackedlineComponent], exports: [DxoStackedlineComponent] }); })();

  var DxoStackedsplineComponent = /** @class */ (function (_super) {
      __extends(DxoStackedsplineComponent, _super);
      function DxoStackedsplineComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoStackedsplineComponent.prototype, "_optionPath", {
          get: function () {
              return 'stackedspline';
          },
          enumerable: false,
          configurable: true
      });
      DxoStackedsplineComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoStackedsplineComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoStackedsplineComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoStackedsplineComponent.ɵfac = function DxoStackedsplineComponent_Factory(t) { return new (t || DxoStackedsplineComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoStackedsplineComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoStackedsplineComponent, selectors: [["dxo-stackedspline"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoStackedsplineComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStackedsplineComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-stackedspline',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoStackedsplineModule = /** @class */ (function () {
      function DxoStackedsplineModule() {
      }
      return DxoStackedsplineModule;
  }());
  /** @nocollapse */ DxoStackedsplineModule.ɵfac = function DxoStackedsplineModule_Factory(t) { return new (t || DxoStackedsplineModule)(); };
  /** @nocollapse */ DxoStackedsplineModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoStackedsplineModule });
  /** @nocollapse */ DxoStackedsplineModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStackedsplineModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoStackedsplineComponent
                      ],
                      exports: [
                          DxoStackedsplineComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoStackedsplineModule, { declarations: [DxoStackedsplineComponent], exports: [DxoStackedsplineComponent] }); })();

  var DxoStackedsplineareaComponent = /** @class */ (function (_super) {
      __extends(DxoStackedsplineareaComponent, _super);
      function DxoStackedsplineareaComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoStackedsplineareaComponent.prototype, "_optionPath", {
          get: function () {
              return 'stackedsplinearea';
          },
          enumerable: false,
          configurable: true
      });
      DxoStackedsplineareaComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoStackedsplineareaComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoStackedsplineareaComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoStackedsplineareaComponent.ɵfac = function DxoStackedsplineareaComponent_Factory(t) { return new (t || DxoStackedsplineareaComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoStackedsplineareaComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoStackedsplineareaComponent, selectors: [["dxo-stackedsplinearea"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoStackedsplineareaComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStackedsplineareaComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-stackedsplinearea',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoStackedsplineareaModule = /** @class */ (function () {
      function DxoStackedsplineareaModule() {
      }
      return DxoStackedsplineareaModule;
  }());
  /** @nocollapse */ DxoStackedsplineareaModule.ɵfac = function DxoStackedsplineareaModule_Factory(t) { return new (t || DxoStackedsplineareaModule)(); };
  /** @nocollapse */ DxoStackedsplineareaModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoStackedsplineareaModule });
  /** @nocollapse */ DxoStackedsplineareaModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStackedsplineareaModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoStackedsplineareaComponent
                      ],
                      exports: [
                          DxoStackedsplineareaComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoStackedsplineareaModule, { declarations: [DxoStackedsplineareaComponent], exports: [DxoStackedsplineareaComponent] }); })();

  var DxoStateStoringComponent = /** @class */ (function (_super) {
      __extends(DxoStateStoringComponent, _super);
      function DxoStateStoringComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoStateStoringComponent.prototype, "customLoad", {
          get: function () {
              return this._getOption('customLoad');
          },
          set: function (value) {
              this._setOption('customLoad', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoStateStoringComponent.prototype, "customSave", {
          get: function () {
              return this._getOption('customSave');
          },
          set: function (value) {
              this._setOption('customSave', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoStateStoringComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoStateStoringComponent.prototype, "savingTimeout", {
          get: function () {
              return this._getOption('savingTimeout');
          },
          set: function (value) {
              this._setOption('savingTimeout', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoStateStoringComponent.prototype, "storageKey", {
          get: function () {
              return this._getOption('storageKey');
          },
          set: function (value) {
              this._setOption('storageKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoStateStoringComponent.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoStateStoringComponent.prototype, "_optionPath", {
          get: function () {
              return 'stateStoring';
          },
          enumerable: false,
          configurable: true
      });
      DxoStateStoringComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoStateStoringComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoStateStoringComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoStateStoringComponent.ɵfac = function DxoStateStoringComponent_Factory(t) { return new (t || DxoStateStoringComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoStateStoringComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoStateStoringComponent, selectors: [["dxo-state-storing"]], inputs: { customLoad: "customLoad", customSave: "customSave", enabled: "enabled", savingTimeout: "savingTimeout", storageKey: "storageKey", type: "type" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoStateStoringComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStateStoringComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-state-storing',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { customLoad: [{
                  type: i0.Input
              }], customSave: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }], savingTimeout: [{
                  type: i0.Input
              }], storageKey: [{
                  type: i0.Input
              }], type: [{
                  type: i0.Input
              }] });
  })();
  var DxoStateStoringModule = /** @class */ (function () {
      function DxoStateStoringModule() {
      }
      return DxoStateStoringModule;
  }());
  /** @nocollapse */ DxoStateStoringModule.ɵfac = function DxoStateStoringModule_Factory(t) { return new (t || DxoStateStoringModule)(); };
  /** @nocollapse */ DxoStateStoringModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoStateStoringModule });
  /** @nocollapse */ DxoStateStoringModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStateStoringModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoStateStoringComponent
                      ],
                      exports: [
                          DxoStateStoringComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoStateStoringModule, { declarations: [DxoStateStoringComponent], exports: [DxoStateStoringComponent] }); })();

  var DxoStepareaComponent = /** @class */ (function (_super) {
      __extends(DxoStepareaComponent, _super);
      function DxoStepareaComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoStepareaComponent.prototype, "_optionPath", {
          get: function () {
              return 'steparea';
          },
          enumerable: false,
          configurable: true
      });
      DxoStepareaComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoStepareaComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoStepareaComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoStepareaComponent.ɵfac = function DxoStepareaComponent_Factory(t) { return new (t || DxoStepareaComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoStepareaComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoStepareaComponent, selectors: [["dxo-steparea"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoStepareaComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStepareaComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-steparea',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoStepareaModule = /** @class */ (function () {
      function DxoStepareaModule() {
      }
      return DxoStepareaModule;
  }());
  /** @nocollapse */ DxoStepareaModule.ɵfac = function DxoStepareaModule_Factory(t) { return new (t || DxoStepareaModule)(); };
  /** @nocollapse */ DxoStepareaModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoStepareaModule });
  /** @nocollapse */ DxoStepareaModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStepareaModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoStepareaComponent
                      ],
                      exports: [
                          DxoStepareaComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoStepareaModule, { declarations: [DxoStepareaComponent], exports: [DxoStepareaComponent] }); })();

  var DxoSteplineComponent = /** @class */ (function (_super) {
      __extends(DxoSteplineComponent, _super);
      function DxoSteplineComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSteplineComponent.prototype, "_optionPath", {
          get: function () {
              return 'stepline';
          },
          enumerable: false,
          configurable: true
      });
      DxoSteplineComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSteplineComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSteplineComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoSteplineComponent.ɵfac = function DxoSteplineComponent_Factory(t) { return new (t || DxoSteplineComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSteplineComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSteplineComponent, selectors: [["dxo-stepline"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSteplineComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSteplineComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-stepline',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoSteplineModule = /** @class */ (function () {
      function DxoSteplineModule() {
      }
      return DxoSteplineModule;
  }());
  /** @nocollapse */ DxoSteplineModule.ɵfac = function DxoSteplineModule_Factory(t) { return new (t || DxoSteplineModule)(); };
  /** @nocollapse */ DxoSteplineModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSteplineModule });
  /** @nocollapse */ DxoSteplineModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSteplineModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSteplineComponent
                      ],
                      exports: [
                          DxoSteplineComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSteplineModule, { declarations: [DxoSteplineComponent], exports: [DxoSteplineComponent] }); })();

  var DxoStockComponent = /** @class */ (function (_super) {
      __extends(DxoStockComponent, _super);
      function DxoStockComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoStockComponent.prototype, "_optionPath", {
          get: function () {
              return 'stock';
          },
          enumerable: false,
          configurable: true
      });
      DxoStockComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoStockComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoStockComponent;
  }(DxoChartCommonSeriesSettings));
  /** @nocollapse */ DxoStockComponent.ɵfac = function DxoStockComponent_Factory(t) { return new (t || DxoStockComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoStockComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoStockComponent, selectors: [["dxo-stock"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoStockComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStockComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-stock',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'aggregation',
                          'area',
                          'argumentField',
                          'axis',
                          'bar',
                          'barOverlapGroup',
                          'barPadding',
                          'barWidth',
                          'border',
                          'bubble',
                          'candlestick',
                          'closeValueField',
                          'color',
                          'cornerRadius',
                          'dashStyle',
                          'fullstackedarea',
                          'fullstackedbar',
                          'fullstackedline',
                          'fullstackedspline',
                          'fullstackedsplinearea',
                          'highValueField',
                          'hoverMode',
                          'hoverStyle',
                          'ignoreEmptyPoints',
                          'innerColor',
                          'label',
                          'line',
                          'lowValueField',
                          'maxLabelCount',
                          'minBarSize',
                          'opacity',
                          'openValueField',
                          'pane',
                          'point',
                          'rangearea',
                          'rangebar',
                          'rangeValue1Field',
                          'rangeValue2Field',
                          'reduction',
                          'scatter',
                          'selectionMode',
                          'selectionStyle',
                          'showInLegend',
                          'sizeField',
                          'spline',
                          'splinearea',
                          'stack',
                          'stackedarea',
                          'stackedbar',
                          'stackedline',
                          'stackedspline',
                          'stackedsplinearea',
                          'steparea',
                          'stepline',
                          'stock',
                          'tagField',
                          'type',
                          'valueErrorBar',
                          'valueField',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoStockModule = /** @class */ (function () {
      function DxoStockModule() {
      }
      return DxoStockModule;
  }());
  /** @nocollapse */ DxoStockModule.ɵfac = function DxoStockModule_Factory(t) { return new (t || DxoStockModule)(); };
  /** @nocollapse */ DxoStockModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoStockModule });
  /** @nocollapse */ DxoStockModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStockModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoStockComponent
                      ],
                      exports: [
                          DxoStockComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoStockModule, { declarations: [DxoStockComponent], exports: [DxoStockComponent] }); })();

  var DxoStoreComponent = /** @class */ (function (_super) {
      __extends(DxoStoreComponent, _super);
      function DxoStoreComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoStoreComponent.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoStoreComponent.prototype, "_optionPath", {
          get: function () {
              return 'store';
          },
          enumerable: false,
          configurable: true
      });
      DxoStoreComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoStoreComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoStoreComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoStoreComponent.ɵfac = function DxoStoreComponent_Factory(t) { return new (t || DxoStoreComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoStoreComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoStoreComponent, selectors: [["dxo-store"]], inputs: { type: "type" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoStoreComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStoreComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-store',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { type: [{
                  type: i0.Input
              }] });
  })();
  var DxoStoreModule = /** @class */ (function () {
      function DxoStoreModule() {
      }
      return DxoStoreModule;
  }());
  /** @nocollapse */ DxoStoreModule.ɵfac = function DxoStoreModule_Factory(t) { return new (t || DxoStoreModule)(); };
  /** @nocollapse */ DxoStoreModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoStoreModule });
  /** @nocollapse */ DxoStoreModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStoreModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoStoreComponent
                      ],
                      exports: [
                          DxoStoreComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoStoreModule, { declarations: [DxoStoreComponent], exports: [DxoStoreComponent] }); })();

  var DxiGanttStripLine = /** @class */ (function (_super) {
      __extends(DxiGanttStripLine, _super);
      function DxiGanttStripLine() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxiGanttStripLine.prototype, "cssClass", {
          get: function () {
              return this._getOption('cssClass');
          },
          set: function (value) {
              this._setOption('cssClass', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGanttStripLine.prototype, "end", {
          get: function () {
              return this._getOption('end');
          },
          set: function (value) {
              this._setOption('end', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGanttStripLine.prototype, "start", {
          get: function () {
              return this._getOption('start');
          },
          set: function (value) {
              this._setOption('start', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiGanttStripLine.prototype, "title", {
          get: function () {
              return this._getOption('title');
          },
          set: function (value) {
              this._setOption('title', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxiGanttStripLine;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiGanttStripLine.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxiGanttStripLine_BaseFactory; return function DxiGanttStripLine_Factory(t) { return (ɵDxiGanttStripLine_BaseFactory || (ɵDxiGanttStripLine_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxiGanttStripLine)))(t || DxiGanttStripLine); }; }();
  /** @nocollapse */ DxiGanttStripLine.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiGanttStripLine, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiGanttStripLine_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiGanttStripLine, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxiStripLineComponent = /** @class */ (function (_super) {
      __extends(DxiStripLineComponent, _super);
      function DxiStripLineComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiStripLineComponent.prototype, "_optionPath", {
          get: function () {
              return 'stripLines';
          },
          enumerable: false,
          configurable: true
      });
      DxiStripLineComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiStripLineComponent;
  }(DxiGanttStripLine));
  /** @nocollapse */ DxiStripLineComponent.ɵfac = function DxiStripLineComponent_Factory(t) { return new (t || DxiStripLineComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiStripLineComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiStripLineComponent, selectors: [["dxi-strip-line"]], inputs: { cssClass: "cssClass", end: "end", start: "start", title: "title" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiStripLineComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiStripLineComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-strip-line',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'cssClass',
                          'end',
                          'start',
                          'title'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxiStripLineModule = /** @class */ (function () {
      function DxiStripLineModule() {
      }
      return DxiStripLineModule;
  }());
  /** @nocollapse */ DxiStripLineModule.ɵfac = function DxiStripLineModule_Factory(t) { return new (t || DxiStripLineModule)(); };
  /** @nocollapse */ DxiStripLineModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiStripLineModule });
  /** @nocollapse */ DxiStripLineModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiStripLineModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiStripLineComponent
                      ],
                      exports: [
                          DxiStripLineComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiStripLineModule, { declarations: [DxiStripLineComponent], exports: [DxiStripLineComponent] }); })();

  var DxoStripStyleComponent = /** @class */ (function (_super) {
      __extends(DxoStripStyleComponent, _super);
      function DxoStripStyleComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoStripStyleComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoStripStyleComponent.prototype, "paddingLeftRight", {
          get: function () {
              return this._getOption('paddingLeftRight');
          },
          set: function (value) {
              this._setOption('paddingLeftRight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoStripStyleComponent.prototype, "paddingTopBottom", {
          get: function () {
              return this._getOption('paddingTopBottom');
          },
          set: function (value) {
              this._setOption('paddingTopBottom', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoStripStyleComponent.prototype, "_optionPath", {
          get: function () {
              return 'stripStyle';
          },
          enumerable: false,
          configurable: true
      });
      DxoStripStyleComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoStripStyleComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoStripStyleComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoStripStyleComponent.ɵfac = function DxoStripStyleComponent_Factory(t) { return new (t || DxoStripStyleComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoStripStyleComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoStripStyleComponent, selectors: [["dxo-strip-style"]], inputs: { label: "label", paddingLeftRight: "paddingLeftRight", paddingTopBottom: "paddingTopBottom" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoStripStyleComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStripStyleComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-strip-style',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { label: [{
                  type: i0.Input
              }], paddingLeftRight: [{
                  type: i0.Input
              }], paddingTopBottom: [{
                  type: i0.Input
              }] });
  })();
  var DxoStripStyleModule = /** @class */ (function () {
      function DxoStripStyleModule() {
      }
      return DxoStripStyleModule;
  }());
  /** @nocollapse */ DxoStripStyleModule.ɵfac = function DxoStripStyleModule_Factory(t) { return new (t || DxoStripStyleModule)(); };
  /** @nocollapse */ DxoStripStyleModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoStripStyleModule });
  /** @nocollapse */ DxoStripStyleModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoStripStyleModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoStripStyleComponent
                      ],
                      exports: [
                          DxoStripStyleComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoStripStyleModule, { declarations: [DxoStripStyleComponent], exports: [DxoStripStyleComponent] }); })();

  var DxoSubtitleComponent = /** @class */ (function (_super) {
      __extends(DxoSubtitleComponent, _super);
      function DxoSubtitleComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSubtitleComponent.prototype, "font", {
          get: function () {
              return this._getOption('font');
          },
          set: function (value) {
              this._setOption('font', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSubtitleComponent.prototype, "offset", {
          get: function () {
              return this._getOption('offset');
          },
          set: function (value) {
              this._setOption('offset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSubtitleComponent.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSubtitleComponent.prototype, "textOverflow", {
          get: function () {
              return this._getOption('textOverflow');
          },
          set: function (value) {
              this._setOption('textOverflow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSubtitleComponent.prototype, "wordWrap", {
          get: function () {
              return this._getOption('wordWrap');
          },
          set: function (value) {
              this._setOption('wordWrap', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSubtitleComponent.prototype, "_optionPath", {
          get: function () {
              return 'subtitle';
          },
          enumerable: false,
          configurable: true
      });
      DxoSubtitleComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSubtitleComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSubtitleComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoSubtitleComponent.ɵfac = function DxoSubtitleComponent_Factory(t) { return new (t || DxoSubtitleComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSubtitleComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSubtitleComponent, selectors: [["dxo-subtitle"]], inputs: { font: "font", offset: "offset", text: "text", textOverflow: "textOverflow", wordWrap: "wordWrap" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSubtitleComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSubtitleComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-subtitle',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { font: [{
                  type: i0.Input
              }], offset: [{
                  type: i0.Input
              }], text: [{
                  type: i0.Input
              }], textOverflow: [{
                  type: i0.Input
              }], wordWrap: [{
                  type: i0.Input
              }] });
  })();
  var DxoSubtitleModule = /** @class */ (function () {
      function DxoSubtitleModule() {
      }
      return DxoSubtitleModule;
  }());
  /** @nocollapse */ DxoSubtitleModule.ɵfac = function DxoSubtitleModule_Factory(t) { return new (t || DxoSubtitleModule)(); };
  /** @nocollapse */ DxoSubtitleModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSubtitleModule });
  /** @nocollapse */ DxoSubtitleModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSubtitleModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSubtitleComponent
                      ],
                      exports: [
                          DxoSubtitleComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSubtitleModule, { declarations: [DxoSubtitleComponent], exports: [DxoSubtitleComponent] }); })();

  var DxoGaugeIndicator = /** @class */ (function (_super) {
      __extends(DxoGaugeIndicator, _super);
      function DxoGaugeIndicator() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoGaugeIndicator.prototype, "arrowLength", {
          get: function () {
              return this._getOption('arrowLength');
          },
          set: function (value) {
              this._setOption('arrowLength', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "backgroundColor", {
          get: function () {
              return this._getOption('backgroundColor');
          },
          set: function (value) {
              this._setOption('backgroundColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "baseValue", {
          get: function () {
              return this._getOption('baseValue');
          },
          set: function (value) {
              this._setOption('baseValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "beginAdaptingAtRadius", {
          get: function () {
              return this._getOption('beginAdaptingAtRadius');
          },
          set: function (value) {
              this._setOption('beginAdaptingAtRadius', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "horizontalOrientation", {
          get: function () {
              return this._getOption('horizontalOrientation');
          },
          set: function (value) {
              this._setOption('horizontalOrientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "indentFromCenter", {
          get: function () {
              return this._getOption('indentFromCenter');
          },
          set: function (value) {
              this._setOption('indentFromCenter', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "length", {
          get: function () {
              return this._getOption('length');
          },
          set: function (value) {
              this._setOption('length', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "offset", {
          get: function () {
              return this._getOption('offset');
          },
          set: function (value) {
              this._setOption('offset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "palette", {
          get: function () {
              return this._getOption('palette');
          },
          set: function (value) {
              this._setOption('palette', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "secondColor", {
          get: function () {
              return this._getOption('secondColor');
          },
          set: function (value) {
              this._setOption('secondColor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "secondFraction", {
          get: function () {
              return this._getOption('secondFraction');
          },
          set: function (value) {
              this._setOption('secondFraction', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "size", {
          get: function () {
              return this._getOption('size');
          },
          set: function (value) {
              this._setOption('size', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "spindleGapSize", {
          get: function () {
              return this._getOption('spindleGapSize');
          },
          set: function (value) {
              this._setOption('spindleGapSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "spindleSize", {
          get: function () {
              return this._getOption('spindleSize');
          },
          set: function (value) {
              this._setOption('spindleSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "verticalOrientation", {
          get: function () {
              return this._getOption('verticalOrientation');
          },
          set: function (value) {
              this._setOption('verticalOrientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGaugeIndicator.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoGaugeIndicator;
  }(i1.NestedOption));
  /** @nocollapse */ DxoGaugeIndicator.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoGaugeIndicator_BaseFactory; return function DxoGaugeIndicator_Factory(t) { return (ɵDxoGaugeIndicator_BaseFactory || (ɵDxoGaugeIndicator_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoGaugeIndicator)))(t || DxoGaugeIndicator); }; }();
  /** @nocollapse */ DxoGaugeIndicator.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoGaugeIndicator, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoGaugeIndicator_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGaugeIndicator, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoSubvalueIndicatorComponent = /** @class */ (function (_super) {
      __extends(DxoSubvalueIndicatorComponent, _super);
      function DxoSubvalueIndicatorComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSubvalueIndicatorComponent.prototype, "_optionPath", {
          get: function () {
              return 'subvalueIndicator';
          },
          enumerable: false,
          configurable: true
      });
      DxoSubvalueIndicatorComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSubvalueIndicatorComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSubvalueIndicatorComponent;
  }(DxoGaugeIndicator));
  /** @nocollapse */ DxoSubvalueIndicatorComponent.ɵfac = function DxoSubvalueIndicatorComponent_Factory(t) { return new (t || DxoSubvalueIndicatorComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSubvalueIndicatorComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSubvalueIndicatorComponent, selectors: [["dxo-subvalue-indicator"]], inputs: { arrowLength: "arrowLength", backgroundColor: "backgroundColor", baseValue: "baseValue", beginAdaptingAtRadius: "beginAdaptingAtRadius", color: "color", horizontalOrientation: "horizontalOrientation", indentFromCenter: "indentFromCenter", length: "length", offset: "offset", palette: "palette", secondColor: "secondColor", secondFraction: "secondFraction", size: "size", spindleGapSize: "spindleGapSize", spindleSize: "spindleSize", text: "text", type: "type", verticalOrientation: "verticalOrientation", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSubvalueIndicatorComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSubvalueIndicatorComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-subvalue-indicator',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'arrowLength',
                          'backgroundColor',
                          'baseValue',
                          'beginAdaptingAtRadius',
                          'color',
                          'horizontalOrientation',
                          'indentFromCenter',
                          'length',
                          'offset',
                          'palette',
                          'secondColor',
                          'secondFraction',
                          'size',
                          'spindleGapSize',
                          'spindleSize',
                          'text',
                          'type',
                          'verticalOrientation',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoSubvalueIndicatorModule = /** @class */ (function () {
      function DxoSubvalueIndicatorModule() {
      }
      return DxoSubvalueIndicatorModule;
  }());
  /** @nocollapse */ DxoSubvalueIndicatorModule.ɵfac = function DxoSubvalueIndicatorModule_Factory(t) { return new (t || DxoSubvalueIndicatorModule)(); };
  /** @nocollapse */ DxoSubvalueIndicatorModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSubvalueIndicatorModule });
  /** @nocollapse */ DxoSubvalueIndicatorModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSubvalueIndicatorModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSubvalueIndicatorComponent
                      ],
                      exports: [
                          DxoSubvalueIndicatorComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSubvalueIndicatorModule, { declarations: [DxoSubvalueIndicatorComponent], exports: [DxoSubvalueIndicatorComponent] }); })();

  var DxiTotalItemComponent = /** @class */ (function (_super) {
      __extends(DxiTotalItemComponent, _super);
      function DxiTotalItemComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiTotalItemComponent.prototype, "alignment", {
          get: function () {
              return this._getOption('alignment');
          },
          set: function (value) {
              this._setOption('alignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTotalItemComponent.prototype, "column", {
          get: function () {
              return this._getOption('column');
          },
          set: function (value) {
              this._setOption('column', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTotalItemComponent.prototype, "cssClass", {
          get: function () {
              return this._getOption('cssClass');
          },
          set: function (value) {
              this._setOption('cssClass', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTotalItemComponent.prototype, "customizeText", {
          get: function () {
              return this._getOption('customizeText');
          },
          set: function (value) {
              this._setOption('customizeText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTotalItemComponent.prototype, "displayFormat", {
          get: function () {
              return this._getOption('displayFormat');
          },
          set: function (value) {
              this._setOption('displayFormat', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTotalItemComponent.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTotalItemComponent.prototype, "showInColumn", {
          get: function () {
              return this._getOption('showInColumn');
          },
          set: function (value) {
              this._setOption('showInColumn', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTotalItemComponent.prototype, "skipEmptyValues", {
          get: function () {
              return this._getOption('skipEmptyValues');
          },
          set: function (value) {
              this._setOption('skipEmptyValues', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTotalItemComponent.prototype, "summaryType", {
          get: function () {
              return this._getOption('summaryType');
          },
          set: function (value) {
              this._setOption('summaryType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTotalItemComponent.prototype, "valueFormat", {
          get: function () {
              return this._getOption('valueFormat');
          },
          set: function (value) {
              this._setOption('valueFormat', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiTotalItemComponent.prototype, "_optionPath", {
          get: function () {
              return 'totalItems';
          },
          enumerable: false,
          configurable: true
      });
      DxiTotalItemComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiTotalItemComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiTotalItemComponent.ɵfac = function DxiTotalItemComponent_Factory(t) { return new (t || DxiTotalItemComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiTotalItemComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiTotalItemComponent, selectors: [["dxi-total-item"]], inputs: { alignment: "alignment", column: "column", cssClass: "cssClass", customizeText: "customizeText", displayFormat: "displayFormat", name: "name", showInColumn: "showInColumn", skipEmptyValues: "skipEmptyValues", summaryType: "summaryType", valueFormat: "valueFormat" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiTotalItemComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiTotalItemComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-total-item',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { alignment: [{
                  type: i0.Input
              }], column: [{
                  type: i0.Input
              }], cssClass: [{
                  type: i0.Input
              }], customizeText: [{
                  type: i0.Input
              }], displayFormat: [{
                  type: i0.Input
              }], name: [{
                  type: i0.Input
              }], showInColumn: [{
                  type: i0.Input
              }], skipEmptyValues: [{
                  type: i0.Input
              }], summaryType: [{
                  type: i0.Input
              }], valueFormat: [{
                  type: i0.Input
              }] });
  })();
  var DxiTotalItemModule = /** @class */ (function () {
      function DxiTotalItemModule() {
      }
      return DxiTotalItemModule;
  }());
  /** @nocollapse */ DxiTotalItemModule.ɵfac = function DxiTotalItemModule_Factory(t) { return new (t || DxiTotalItemModule)(); };
  /** @nocollapse */ DxiTotalItemModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiTotalItemModule });
  /** @nocollapse */ DxiTotalItemModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiTotalItemModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiTotalItemComponent
                      ],
                      exports: [
                          DxiTotalItemComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiTotalItemModule, { declarations: [DxiTotalItemComponent], exports: [DxiTotalItemComponent] }); })();

  var DxoSummaryComponent = /** @class */ (function (_super) {
      __extends(DxoSummaryComponent, _super);
      function DxoSummaryComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoSummaryComponent.prototype, "calculateCustomSummary", {
          get: function () {
              return this._getOption('calculateCustomSummary');
          },
          set: function (value) {
              this._setOption('calculateCustomSummary', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSummaryComponent.prototype, "groupItems", {
          get: function () {
              return this._getOption('groupItems');
          },
          set: function (value) {
              this._setOption('groupItems', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSummaryComponent.prototype, "recalculateWhileEditing", {
          get: function () {
              return this._getOption('recalculateWhileEditing');
          },
          set: function (value) {
              this._setOption('recalculateWhileEditing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSummaryComponent.prototype, "skipEmptyValues", {
          get: function () {
              return this._getOption('skipEmptyValues');
          },
          set: function (value) {
              this._setOption('skipEmptyValues', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSummaryComponent.prototype, "texts", {
          get: function () {
              return this._getOption('texts');
          },
          set: function (value) {
              this._setOption('texts', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSummaryComponent.prototype, "totalItems", {
          get: function () {
              return this._getOption('totalItems');
          },
          set: function (value) {
              this._setOption('totalItems', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSummaryComponent.prototype, "_optionPath", {
          get: function () {
              return 'summary';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSummaryComponent.prototype, "groupItemsChildren", {
          get: function () {
              return this._getOption('groupItems');
          },
          set: function (value) {
              this.setChildren('groupItems', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoSummaryComponent.prototype, "totalItemsChildren", {
          get: function () {
              return this._getOption('totalItems');
          },
          set: function (value) {
              this.setChildren('totalItems', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoSummaryComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoSummaryComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoSummaryComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoSummaryComponent.ɵfac = function DxoSummaryComponent_Factory(t) { return new (t || DxoSummaryComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoSummaryComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoSummaryComponent, selectors: [["dxo-summary"]], contentQueries: function DxoSummaryComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiGroupItemComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiTotalItemComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.groupItemsChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.totalItemsChildren = _t);
          }
      }, inputs: { calculateCustomSummary: "calculateCustomSummary", groupItems: "groupItems", recalculateWhileEditing: "recalculateWhileEditing", skipEmptyValues: "skipEmptyValues", texts: "texts", totalItems: "totalItems" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoSummaryComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSummaryComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-summary',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { calculateCustomSummary: [{
                  type: i0.Input
              }], groupItems: [{
                  type: i0.Input
              }], recalculateWhileEditing: [{
                  type: i0.Input
              }], skipEmptyValues: [{
                  type: i0.Input
              }], texts: [{
                  type: i0.Input
              }], totalItems: [{
                  type: i0.Input
              }], groupItemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiGroupItemComponent; })]
              }], totalItemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiTotalItemComponent; })]
              }] });
  })();
  var DxoSummaryModule = /** @class */ (function () {
      function DxoSummaryModule() {
      }
      return DxoSummaryModule;
  }());
  /** @nocollapse */ DxoSummaryModule.ɵfac = function DxoSummaryModule_Factory(t) { return new (t || DxoSummaryModule)(); };
  /** @nocollapse */ DxoSummaryModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoSummaryModule });
  /** @nocollapse */ DxoSummaryModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoSummaryModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoSummaryComponent
                      ],
                      exports: [
                          DxoSummaryComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoSummaryModule, { declarations: [DxoSummaryComponent], exports: [DxoSummaryComponent] }); })();

  var DxoTabPanelOptions = /** @class */ (function (_super) {
      __extends(DxoTabPanelOptions, _super);
      function DxoTabPanelOptions() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoTabPanelOptions.prototype, "accessKey", {
          get: function () {
              return this._getOption('accessKey');
          },
          set: function (value) {
              this._setOption('accessKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "activeStateEnabled", {
          get: function () {
              return this._getOption('activeStateEnabled');
          },
          set: function (value) {
              this._setOption('activeStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "animationEnabled", {
          get: function () {
              return this._getOption('animationEnabled');
          },
          set: function (value) {
              this._setOption('animationEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "deferRendering", {
          get: function () {
              return this._getOption('deferRendering');
          },
          set: function (value) {
              this._setOption('deferRendering', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "elementAttr", {
          get: function () {
              return this._getOption('elementAttr');
          },
          set: function (value) {
              this._setOption('elementAttr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "focusStateEnabled", {
          get: function () {
              return this._getOption('focusStateEnabled');
          },
          set: function (value) {
              this._setOption('focusStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "height", {
          get: function () {
              return this._getOption('height');
          },
          set: function (value) {
              this._setOption('height', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "hint", {
          get: function () {
              return this._getOption('hint');
          },
          set: function (value) {
              this._setOption('hint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "hoverStateEnabled", {
          get: function () {
              return this._getOption('hoverStateEnabled');
          },
          set: function (value) {
              this._setOption('hoverStateEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "iconPosition", {
          get: function () {
              return this._getOption('iconPosition');
          },
          set: function (value) {
              this._setOption('iconPosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "itemHoldTimeout", {
          get: function () {
              return this._getOption('itemHoldTimeout');
          },
          set: function (value) {
              this._setOption('itemHoldTimeout', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "items", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this._setOption('items', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "itemTemplate", {
          get: function () {
              return this._getOption('itemTemplate');
          },
          set: function (value) {
              this._setOption('itemTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "itemTitleTemplate", {
          get: function () {
              return this._getOption('itemTitleTemplate');
          },
          set: function (value) {
              this._setOption('itemTitleTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "loop", {
          get: function () {
              return this._getOption('loop');
          },
          set: function (value) {
              this._setOption('loop', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "noDataText", {
          get: function () {
              return this._getOption('noDataText');
          },
          set: function (value) {
              this._setOption('noDataText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "onContentReady", {
          get: function () {
              return this._getOption('onContentReady');
          },
          set: function (value) {
              this._setOption('onContentReady', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "onDisposing", {
          get: function () {
              return this._getOption('onDisposing');
          },
          set: function (value) {
              this._setOption('onDisposing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "onInitialized", {
          get: function () {
              return this._getOption('onInitialized');
          },
          set: function (value) {
              this._setOption('onInitialized', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "onItemClick", {
          get: function () {
              return this._getOption('onItemClick');
          },
          set: function (value) {
              this._setOption('onItemClick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "onItemContextMenu", {
          get: function () {
              return this._getOption('onItemContextMenu');
          },
          set: function (value) {
              this._setOption('onItemContextMenu', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "onItemHold", {
          get: function () {
              return this._getOption('onItemHold');
          },
          set: function (value) {
              this._setOption('onItemHold', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "onItemRendered", {
          get: function () {
              return this._getOption('onItemRendered');
          },
          set: function (value) {
              this._setOption('onItemRendered', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "onOptionChanged", {
          get: function () {
              return this._getOption('onOptionChanged');
          },
          set: function (value) {
              this._setOption('onOptionChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "onSelectionChanged", {
          get: function () {
              return this._getOption('onSelectionChanged');
          },
          set: function (value) {
              this._setOption('onSelectionChanged', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "onTitleClick", {
          get: function () {
              return this._getOption('onTitleClick');
          },
          set: function (value) {
              this._setOption('onTitleClick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "onTitleHold", {
          get: function () {
              return this._getOption('onTitleHold');
          },
          set: function (value) {
              this._setOption('onTitleHold', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "onTitleRendered", {
          get: function () {
              return this._getOption('onTitleRendered');
          },
          set: function (value) {
              this._setOption('onTitleRendered', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "repaintChangesOnly", {
          get: function () {
              return this._getOption('repaintChangesOnly');
          },
          set: function (value) {
              this._setOption('repaintChangesOnly', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "rtlEnabled", {
          get: function () {
              return this._getOption('rtlEnabled');
          },
          set: function (value) {
              this._setOption('rtlEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "scrollByContent", {
          get: function () {
              return this._getOption('scrollByContent');
          },
          set: function (value) {
              this._setOption('scrollByContent', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "scrollingEnabled", {
          get: function () {
              return this._getOption('scrollingEnabled');
          },
          set: function (value) {
              this._setOption('scrollingEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "selectedIndex", {
          get: function () {
              return this._getOption('selectedIndex');
          },
          set: function (value) {
              this._setOption('selectedIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "selectedItem", {
          get: function () {
              return this._getOption('selectedItem');
          },
          set: function (value) {
              this._setOption('selectedItem', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "showNavButtons", {
          get: function () {
              return this._getOption('showNavButtons');
          },
          set: function (value) {
              this._setOption('showNavButtons', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "stylingMode", {
          get: function () {
              return this._getOption('stylingMode');
          },
          set: function (value) {
              this._setOption('stylingMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "swipeEnabled", {
          get: function () {
              return this._getOption('swipeEnabled');
          },
          set: function (value) {
              this._setOption('swipeEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "tabIndex", {
          get: function () {
              return this._getOption('tabIndex');
          },
          set: function (value) {
              this._setOption('tabIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "tabsPosition", {
          get: function () {
              return this._getOption('tabsPosition');
          },
          set: function (value) {
              this._setOption('tabsPosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptions.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoTabPanelOptions;
  }(i1.NestedOption));
  /** @nocollapse */ DxoTabPanelOptions.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoTabPanelOptions_BaseFactory; return function DxoTabPanelOptions_Factory(t) { return (ɵDxoTabPanelOptions_BaseFactory || (ɵDxoTabPanelOptions_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoTabPanelOptions)))(t || DxoTabPanelOptions); }; }();
  /** @nocollapse */ DxoTabPanelOptions.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoTabPanelOptions, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTabPanelOptions_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTabPanelOptions, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoTabPanelOptionsComponent = /** @class */ (function (_super) {
      __extends(DxoTabPanelOptionsComponent, _super);
      function DxoTabPanelOptionsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'itemsChange' },
              { emit: 'selectedIndexChange' },
              { emit: 'selectedItemChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoTabPanelOptionsComponent.prototype, "_optionPath", {
          get: function () {
              return 'tabPanelOptions';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTabPanelOptionsComponent.prototype, "itemsChildren", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this.setChildren('items', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoTabPanelOptionsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoTabPanelOptionsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoTabPanelOptionsComponent;
  }(DxoTabPanelOptions));
  /** @nocollapse */ DxoTabPanelOptionsComponent.ɵfac = function DxoTabPanelOptionsComponent_Factory(t) { return new (t || DxoTabPanelOptionsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoTabPanelOptionsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoTabPanelOptionsComponent, selectors: [["dxo-tab-panel-options"]], contentQueries: function DxoTabPanelOptionsComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiItemComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
          }
      }, inputs: { accessKey: "accessKey", activeStateEnabled: "activeStateEnabled", animationEnabled: "animationEnabled", dataSource: "dataSource", deferRendering: "deferRendering", disabled: "disabled", elementAttr: "elementAttr", focusStateEnabled: "focusStateEnabled", height: "height", hint: "hint", hoverStateEnabled: "hoverStateEnabled", iconPosition: "iconPosition", itemHoldTimeout: "itemHoldTimeout", items: "items", itemTemplate: "itemTemplate", itemTitleTemplate: "itemTitleTemplate", loop: "loop", noDataText: "noDataText", onContentReady: "onContentReady", onDisposing: "onDisposing", onInitialized: "onInitialized", onItemClick: "onItemClick", onItemContextMenu: "onItemContextMenu", onItemHold: "onItemHold", onItemRendered: "onItemRendered", onOptionChanged: "onOptionChanged", onSelectionChanged: "onSelectionChanged", onTitleClick: "onTitleClick", onTitleHold: "onTitleHold", onTitleRendered: "onTitleRendered", repaintChangesOnly: "repaintChangesOnly", rtlEnabled: "rtlEnabled", scrollByContent: "scrollByContent", scrollingEnabled: "scrollingEnabled", selectedIndex: "selectedIndex", selectedItem: "selectedItem", showNavButtons: "showNavButtons", stylingMode: "stylingMode", swipeEnabled: "swipeEnabled", tabIndex: "tabIndex", tabsPosition: "tabsPosition", visible: "visible", width: "width" }, outputs: { itemsChange: "itemsChange", selectedIndexChange: "selectedIndexChange", selectedItemChange: "selectedItemChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTabPanelOptionsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTabPanelOptionsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-tab-panel-options',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'accessKey',
                          'activeStateEnabled',
                          'animationEnabled',
                          'dataSource',
                          'deferRendering',
                          'disabled',
                          'elementAttr',
                          'focusStateEnabled',
                          'height',
                          'hint',
                          'hoverStateEnabled',
                          'iconPosition',
                          'itemHoldTimeout',
                          'items',
                          'itemTemplate',
                          'itemTitleTemplate',
                          'loop',
                          'noDataText',
                          'onContentReady',
                          'onDisposing',
                          'onInitialized',
                          'onItemClick',
                          'onItemContextMenu',
                          'onItemHold',
                          'onItemRendered',
                          'onOptionChanged',
                          'onSelectionChanged',
                          'onTitleClick',
                          'onTitleHold',
                          'onTitleRendered',
                          'repaintChangesOnly',
                          'rtlEnabled',
                          'scrollByContent',
                          'scrollingEnabled',
                          'selectedIndex',
                          'selectedItem',
                          'showNavButtons',
                          'stylingMode',
                          'swipeEnabled',
                          'tabIndex',
                          'tabsPosition',
                          'visible',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { itemsChange: [{
                  type: i0.Output
              }], selectedIndexChange: [{
                  type: i0.Output
              }], selectedItemChange: [{
                  type: i0.Output
              }], itemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiItemComponent; })]
              }] });
  })();
  var DxoTabPanelOptionsModule = /** @class */ (function () {
      function DxoTabPanelOptionsModule() {
      }
      return DxoTabPanelOptionsModule;
  }());
  /** @nocollapse */ DxoTabPanelOptionsModule.ɵfac = function DxoTabPanelOptionsModule_Factory(t) { return new (t || DxoTabPanelOptionsModule)(); };
  /** @nocollapse */ DxoTabPanelOptionsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoTabPanelOptionsModule });
  /** @nocollapse */ DxoTabPanelOptionsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTabPanelOptionsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoTabPanelOptionsComponent
                      ],
                      exports: [
                          DxoTabPanelOptionsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoTabPanelOptionsModule, { declarations: [DxoTabPanelOptionsComponent], exports: [DxoTabPanelOptionsComponent] }); })();

  var DxoHtmlEditorTableContextMenu = /** @class */ (function (_super) {
      __extends(DxoHtmlEditorTableContextMenu, _super);
      function DxoHtmlEditorTableContextMenu() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoHtmlEditorTableContextMenu.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHtmlEditorTableContextMenu.prototype, "items", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this._setOption('items', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoHtmlEditorTableContextMenu;
  }(i1.NestedOption));
  /** @nocollapse */ DxoHtmlEditorTableContextMenu.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoHtmlEditorTableContextMenu_BaseFactory; return function DxoHtmlEditorTableContextMenu_Factory(t) { return (ɵDxoHtmlEditorTableContextMenu_BaseFactory || (ɵDxoHtmlEditorTableContextMenu_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoHtmlEditorTableContextMenu)))(t || DxoHtmlEditorTableContextMenu); }; }();
  /** @nocollapse */ DxoHtmlEditorTableContextMenu.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoHtmlEditorTableContextMenu, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHtmlEditorTableContextMenu_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHtmlEditorTableContextMenu, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoTableContextMenuComponent = /** @class */ (function (_super) {
      __extends(DxoTableContextMenuComponent, _super);
      function DxoTableContextMenuComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoTableContextMenuComponent.prototype, "_optionPath", {
          get: function () {
              return 'tableContextMenu';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTableContextMenuComponent.prototype, "itemsChildren", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this.setChildren('items', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoTableContextMenuComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoTableContextMenuComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoTableContextMenuComponent;
  }(DxoHtmlEditorTableContextMenu));
  /** @nocollapse */ DxoTableContextMenuComponent.ɵfac = function DxoTableContextMenuComponent_Factory(t) { return new (t || DxoTableContextMenuComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoTableContextMenuComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoTableContextMenuComponent, selectors: [["dxo-table-context-menu"]], contentQueries: function DxoTableContextMenuComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiItemComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
          }
      }, inputs: { enabled: "enabled", items: "items" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTableContextMenuComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTableContextMenuComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-table-context-menu',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'enabled',
                          'items'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { itemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiItemComponent; })]
              }] });
  })();
  var DxoTableContextMenuModule = /** @class */ (function () {
      function DxoTableContextMenuModule() {
      }
      return DxoTableContextMenuModule;
  }());
  /** @nocollapse */ DxoTableContextMenuModule.ɵfac = function DxoTableContextMenuModule_Factory(t) { return new (t || DxoTableContextMenuModule)(); };
  /** @nocollapse */ DxoTableContextMenuModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoTableContextMenuModule });
  /** @nocollapse */ DxoTableContextMenuModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTableContextMenuModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoTableContextMenuComponent
                      ],
                      exports: [
                          DxoTableContextMenuComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoTableContextMenuModule, { declarations: [DxoTableContextMenuComponent], exports: [DxoTableContextMenuComponent] }); })();

  var DxoHtmlEditorTableResizing = /** @class */ (function (_super) {
      __extends(DxoHtmlEditorTableResizing, _super);
      function DxoHtmlEditorTableResizing() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoHtmlEditorTableResizing.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHtmlEditorTableResizing.prototype, "minColumnWidth", {
          get: function () {
              return this._getOption('minColumnWidth');
          },
          set: function (value) {
              this._setOption('minColumnWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHtmlEditorTableResizing.prototype, "minRowHeight", {
          get: function () {
              return this._getOption('minRowHeight');
          },
          set: function (value) {
              this._setOption('minRowHeight', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoHtmlEditorTableResizing;
  }(i1.NestedOption));
  /** @nocollapse */ DxoHtmlEditorTableResizing.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoHtmlEditorTableResizing_BaseFactory; return function DxoHtmlEditorTableResizing_Factory(t) { return (ɵDxoHtmlEditorTableResizing_BaseFactory || (ɵDxoHtmlEditorTableResizing_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoHtmlEditorTableResizing)))(t || DxoHtmlEditorTableResizing); }; }();
  /** @nocollapse */ DxoHtmlEditorTableResizing.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoHtmlEditorTableResizing, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHtmlEditorTableResizing_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHtmlEditorTableResizing, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoTableResizingComponent = /** @class */ (function (_super) {
      __extends(DxoTableResizingComponent, _super);
      function DxoTableResizingComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoTableResizingComponent.prototype, "_optionPath", {
          get: function () {
              return 'tableResizing';
          },
          enumerable: false,
          configurable: true
      });
      DxoTableResizingComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoTableResizingComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoTableResizingComponent;
  }(DxoHtmlEditorTableResizing));
  /** @nocollapse */ DxoTableResizingComponent.ɵfac = function DxoTableResizingComponent_Factory(t) { return new (t || DxoTableResizingComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoTableResizingComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoTableResizingComponent, selectors: [["dxo-table-resizing"]], inputs: { enabled: "enabled", minColumnWidth: "minColumnWidth", minRowHeight: "minRowHeight" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTableResizingComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTableResizingComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-table-resizing',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'enabled',
                          'minColumnWidth',
                          'minRowHeight'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoTableResizingModule = /** @class */ (function () {
      function DxoTableResizingModule() {
      }
      return DxoTableResizingModule;
  }());
  /** @nocollapse */ DxoTableResizingModule.ɵfac = function DxoTableResizingModule_Factory(t) { return new (t || DxoTableResizingModule)(); };
  /** @nocollapse */ DxoTableResizingModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoTableResizingModule });
  /** @nocollapse */ DxoTableResizingModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTableResizingModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoTableResizingComponent
                      ],
                      exports: [
                          DxoTableResizingComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoTableResizingModule, { declarations: [DxoTableResizingComponent], exports: [DxoTableResizingComponent] }); })();

  var DxoTasksComponent = /** @class */ (function (_super) {
      __extends(DxoTasksComponent, _super);
      function DxoTasksComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoTasksComponent.prototype, "colorExpr", {
          get: function () {
              return this._getOption('colorExpr');
          },
          set: function (value) {
              this._setOption('colorExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTasksComponent.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTasksComponent.prototype, "endExpr", {
          get: function () {
              return this._getOption('endExpr');
          },
          set: function (value) {
              this._setOption('endExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTasksComponent.prototype, "keyExpr", {
          get: function () {
              return this._getOption('keyExpr');
          },
          set: function (value) {
              this._setOption('keyExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTasksComponent.prototype, "parentIdExpr", {
          get: function () {
              return this._getOption('parentIdExpr');
          },
          set: function (value) {
              this._setOption('parentIdExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTasksComponent.prototype, "progressExpr", {
          get: function () {
              return this._getOption('progressExpr');
          },
          set: function (value) {
              this._setOption('progressExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTasksComponent.prototype, "startExpr", {
          get: function () {
              return this._getOption('startExpr');
          },
          set: function (value) {
              this._setOption('startExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTasksComponent.prototype, "titleExpr", {
          get: function () {
              return this._getOption('titleExpr');
          },
          set: function (value) {
              this._setOption('titleExpr', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTasksComponent.prototype, "_optionPath", {
          get: function () {
              return 'tasks';
          },
          enumerable: false,
          configurable: true
      });
      DxoTasksComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoTasksComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoTasksComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoTasksComponent.ɵfac = function DxoTasksComponent_Factory(t) { return new (t || DxoTasksComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoTasksComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoTasksComponent, selectors: [["dxo-tasks"]], inputs: { colorExpr: "colorExpr", dataSource: "dataSource", endExpr: "endExpr", keyExpr: "keyExpr", parentIdExpr: "parentIdExpr", progressExpr: "progressExpr", startExpr: "startExpr", titleExpr: "titleExpr" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTasksComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTasksComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-tasks',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { colorExpr: [{
                  type: i0.Input
              }], dataSource: [{
                  type: i0.Input
              }], endExpr: [{
                  type: i0.Input
              }], keyExpr: [{
                  type: i0.Input
              }], parentIdExpr: [{
                  type: i0.Input
              }], progressExpr: [{
                  type: i0.Input
              }], startExpr: [{
                  type: i0.Input
              }], titleExpr: [{
                  type: i0.Input
              }] });
  })();
  var DxoTasksModule = /** @class */ (function () {
      function DxoTasksModule() {
      }
      return DxoTasksModule;
  }());
  /** @nocollapse */ DxoTasksModule.ɵfac = function DxoTasksModule_Factory(t) { return new (t || DxoTasksModule)(); };
  /** @nocollapse */ DxoTasksModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoTasksModule });
  /** @nocollapse */ DxoTasksModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTasksModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoTasksComponent
                      ],
                      exports: [
                          DxoTasksComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoTasksModule, { declarations: [DxoTasksComponent], exports: [DxoTasksComponent] }); })();

  var DxoTextComponent = /** @class */ (function (_super) {
      __extends(DxoTextComponent, _super);
      function DxoTextComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoTextComponent.prototype, "customizeText", {
          get: function () {
              return this._getOption('customizeText');
          },
          set: function (value) {
              this._setOption('customizeText', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextComponent.prototype, "font", {
          get: function () {
              return this._getOption('font');
          },
          set: function (value) {
              this._setOption('font', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextComponent.prototype, "format", {
          get: function () {
              return this._getOption('format');
          },
          set: function (value) {
              this._setOption('format', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextComponent.prototype, "indent", {
          get: function () {
              return this._getOption('indent');
          },
          set: function (value) {
              this._setOption('indent', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTextComponent.prototype, "_optionPath", {
          get: function () {
              return 'text';
          },
          enumerable: false,
          configurable: true
      });
      DxoTextComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoTextComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoTextComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoTextComponent.ɵfac = function DxoTextComponent_Factory(t) { return new (t || DxoTextComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoTextComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoTextComponent, selectors: [["dxo-text"]], inputs: { customizeText: "customizeText", font: "font", format: "format", indent: "indent" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTextComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTextComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-text',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { customizeText: [{
                  type: i0.Input
              }], font: [{
                  type: i0.Input
              }], format: [{
                  type: i0.Input
              }], indent: [{
                  type: i0.Input
              }] });
  })();
  var DxoTextModule = /** @class */ (function () {
      function DxoTextModule() {
      }
      return DxoTextModule;
  }());
  /** @nocollapse */ DxoTextModule.ɵfac = function DxoTextModule_Factory(t) { return new (t || DxoTextModule)(); };
  /** @nocollapse */ DxoTextModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoTextModule });
  /** @nocollapse */ DxoTextModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTextModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoTextComponent
                      ],
                      exports: [
                          DxoTextComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoTextModule, { declarations: [DxoTextComponent], exports: [DxoTextComponent] }); })();

  var DxoGanttHeaderFilterTexts = /** @class */ (function (_super) {
      __extends(DxoGanttHeaderFilterTexts, _super);
      function DxoGanttHeaderFilterTexts() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "fix", {
          get: function () {
              return this._getOption('fix');
          },
          set: function (value) {
              this._setOption('fix', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "leftPosition", {
          get: function () {
              return this._getOption('leftPosition');
          },
          set: function (value) {
              this._setOption('leftPosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "rightPosition", {
          get: function () {
              return this._getOption('rightPosition');
          },
          set: function (value) {
              this._setOption('rightPosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "unfix", {
          get: function () {
              return this._getOption('unfix');
          },
          set: function (value) {
              this._setOption('unfix', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "addRow", {
          get: function () {
              return this._getOption('addRow');
          },
          set: function (value) {
              this._setOption('addRow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "cancelAllChanges", {
          get: function () {
              return this._getOption('cancelAllChanges');
          },
          set: function (value) {
              this._setOption('cancelAllChanges', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "cancelRowChanges", {
          get: function () {
              return this._getOption('cancelRowChanges');
          },
          set: function (value) {
              this._setOption('cancelRowChanges', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "confirmDeleteMessage", {
          get: function () {
              return this._getOption('confirmDeleteMessage');
          },
          set: function (value) {
              this._setOption('confirmDeleteMessage', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "confirmDeleteTitle", {
          get: function () {
              return this._getOption('confirmDeleteTitle');
          },
          set: function (value) {
              this._setOption('confirmDeleteTitle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "deleteRow", {
          get: function () {
              return this._getOption('deleteRow');
          },
          set: function (value) {
              this._setOption('deleteRow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "editRow", {
          get: function () {
              return this._getOption('editRow');
          },
          set: function (value) {
              this._setOption('editRow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "saveAllChanges", {
          get: function () {
              return this._getOption('saveAllChanges');
          },
          set: function (value) {
              this._setOption('saveAllChanges', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "saveRowChanges", {
          get: function () {
              return this._getOption('saveRowChanges');
          },
          set: function (value) {
              this._setOption('saveRowChanges', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "undeleteRow", {
          get: function () {
              return this._getOption('undeleteRow');
          },
          set: function (value) {
              this._setOption('undeleteRow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "validationCancelChanges", {
          get: function () {
              return this._getOption('validationCancelChanges');
          },
          set: function (value) {
              this._setOption('validationCancelChanges', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "exportAll", {
          get: function () {
              return this._getOption('exportAll');
          },
          set: function (value) {
              this._setOption('exportAll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "exportSelectedRows", {
          get: function () {
              return this._getOption('exportSelectedRows');
          },
          set: function (value) {
              this._setOption('exportSelectedRows', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "exportTo", {
          get: function () {
              return this._getOption('exportTo');
          },
          set: function (value) {
              this._setOption('exportTo', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "clearFilter", {
          get: function () {
              return this._getOption('clearFilter');
          },
          set: function (value) {
              this._setOption('clearFilter', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "createFilter", {
          get: function () {
              return this._getOption('createFilter');
          },
          set: function (value) {
              this._setOption('createFilter', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "filterEnabledHint", {
          get: function () {
              return this._getOption('filterEnabledHint');
          },
          set: function (value) {
              this._setOption('filterEnabledHint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "groupByThisColumn", {
          get: function () {
              return this._getOption('groupByThisColumn');
          },
          set: function (value) {
              this._setOption('groupByThisColumn', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "groupContinuedMessage", {
          get: function () {
              return this._getOption('groupContinuedMessage');
          },
          set: function (value) {
              this._setOption('groupContinuedMessage', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "groupContinuesMessage", {
          get: function () {
              return this._getOption('groupContinuesMessage');
          },
          set: function (value) {
              this._setOption('groupContinuesMessage', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "ungroup", {
          get: function () {
              return this._getOption('ungroup');
          },
          set: function (value) {
              this._setOption('ungroup', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "ungroupAll", {
          get: function () {
              return this._getOption('ungroupAll');
          },
          set: function (value) {
              this._setOption('ungroupAll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "cancel", {
          get: function () {
              return this._getOption('cancel');
          },
          set: function (value) {
              this._setOption('cancel', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "emptyValue", {
          get: function () {
              return this._getOption('emptyValue');
          },
          set: function (value) {
              this._setOption('emptyValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "ok", {
          get: function () {
              return this._getOption('ok');
          },
          set: function (value) {
              this._setOption('ok', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "avg", {
          get: function () {
              return this._getOption('avg');
          },
          set: function (value) {
              this._setOption('avg', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "avgOtherColumn", {
          get: function () {
              return this._getOption('avgOtherColumn');
          },
          set: function (value) {
              this._setOption('avgOtherColumn', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "count", {
          get: function () {
              return this._getOption('count');
          },
          set: function (value) {
              this._setOption('count', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "max", {
          get: function () {
              return this._getOption('max');
          },
          set: function (value) {
              this._setOption('max', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "maxOtherColumn", {
          get: function () {
              return this._getOption('maxOtherColumn');
          },
          set: function (value) {
              this._setOption('maxOtherColumn', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "min", {
          get: function () {
              return this._getOption('min');
          },
          set: function (value) {
              this._setOption('min', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "minOtherColumn", {
          get: function () {
              return this._getOption('minOtherColumn');
          },
          set: function (value) {
              this._setOption('minOtherColumn', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "sum", {
          get: function () {
              return this._getOption('sum');
          },
          set: function (value) {
              this._setOption('sum', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "sumOtherColumn", {
          get: function () {
              return this._getOption('sumOtherColumn');
          },
          set: function (value) {
              this._setOption('sumOtherColumn', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "allFields", {
          get: function () {
              return this._getOption('allFields');
          },
          set: function (value) {
              this._setOption('allFields', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "columnFields", {
          get: function () {
              return this._getOption('columnFields');
          },
          set: function (value) {
              this._setOption('columnFields', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "dataFields", {
          get: function () {
              return this._getOption('dataFields');
          },
          set: function (value) {
              this._setOption('dataFields', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "filterFields", {
          get: function () {
              return this._getOption('filterFields');
          },
          set: function (value) {
              this._setOption('filterFields', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "rowFields", {
          get: function () {
              return this._getOption('rowFields');
          },
          set: function (value) {
              this._setOption('rowFields', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "columnFieldArea", {
          get: function () {
              return this._getOption('columnFieldArea');
          },
          set: function (value) {
              this._setOption('columnFieldArea', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "dataFieldArea", {
          get: function () {
              return this._getOption('dataFieldArea');
          },
          set: function (value) {
              this._setOption('dataFieldArea', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "filterFieldArea", {
          get: function () {
              return this._getOption('filterFieldArea');
          },
          set: function (value) {
              this._setOption('filterFieldArea', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "rowFieldArea", {
          get: function () {
              return this._getOption('rowFieldArea');
          },
          set: function (value) {
              this._setOption('rowFieldArea', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "collapseAll", {
          get: function () {
              return this._getOption('collapseAll');
          },
          set: function (value) {
              this._setOption('collapseAll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "dataNotAvailable", {
          get: function () {
              return this._getOption('dataNotAvailable');
          },
          set: function (value) {
              this._setOption('dataNotAvailable', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "expandAll", {
          get: function () {
              return this._getOption('expandAll');
          },
          set: function (value) {
              this._setOption('expandAll', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "exportToExcel", {
          get: function () {
              return this._getOption('exportToExcel');
          },
          set: function (value) {
              this._setOption('exportToExcel', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "grandTotal", {
          get: function () {
              return this._getOption('grandTotal');
          },
          set: function (value) {
              this._setOption('grandTotal', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "noData", {
          get: function () {
              return this._getOption('noData');
          },
          set: function (value) {
              this._setOption('noData', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "removeAllSorting", {
          get: function () {
              return this._getOption('removeAllSorting');
          },
          set: function (value) {
              this._setOption('removeAllSorting', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "showFieldChooser", {
          get: function () {
              return this._getOption('showFieldChooser');
          },
          set: function (value) {
              this._setOption('showFieldChooser', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "sortColumnBySummary", {
          get: function () {
              return this._getOption('sortColumnBySummary');
          },
          set: function (value) {
              this._setOption('sortColumnBySummary', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "sortRowBySummary", {
          get: function () {
              return this._getOption('sortRowBySummary');
          },
          set: function (value) {
              this._setOption('sortRowBySummary', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "total", {
          get: function () {
              return this._getOption('total');
          },
          set: function (value) {
              this._setOption('total', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoGanttHeaderFilterTexts.prototype, "addRowToNode", {
          get: function () {
              return this._getOption('addRowToNode');
          },
          set: function (value) {
              this._setOption('addRowToNode', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoGanttHeaderFilterTexts;
  }(i1.NestedOption));
  /** @nocollapse */ DxoGanttHeaderFilterTexts.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoGanttHeaderFilterTexts_BaseFactory; return function DxoGanttHeaderFilterTexts_Factory(t) { return (ɵDxoGanttHeaderFilterTexts_BaseFactory || (ɵDxoGanttHeaderFilterTexts_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoGanttHeaderFilterTexts)))(t || DxoGanttHeaderFilterTexts); }; }();
  /** @nocollapse */ DxoGanttHeaderFilterTexts.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoGanttHeaderFilterTexts, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoGanttHeaderFilterTexts_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoGanttHeaderFilterTexts, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoTextsComponent = /** @class */ (function (_super) {
      __extends(DxoTextsComponent, _super);
      function DxoTextsComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoTextsComponent.prototype, "_optionPath", {
          get: function () {
              return 'texts';
          },
          enumerable: false,
          configurable: true
      });
      DxoTextsComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoTextsComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoTextsComponent;
  }(DxoGanttHeaderFilterTexts));
  /** @nocollapse */ DxoTextsComponent.ɵfac = function DxoTextsComponent_Factory(t) { return new (t || DxoTextsComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoTextsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoTextsComponent, selectors: [["dxo-texts"]], inputs: { fix: "fix", leftPosition: "leftPosition", rightPosition: "rightPosition", unfix: "unfix", addRow: "addRow", cancelAllChanges: "cancelAllChanges", cancelRowChanges: "cancelRowChanges", confirmDeleteMessage: "confirmDeleteMessage", confirmDeleteTitle: "confirmDeleteTitle", deleteRow: "deleteRow", editRow: "editRow", saveAllChanges: "saveAllChanges", saveRowChanges: "saveRowChanges", undeleteRow: "undeleteRow", validationCancelChanges: "validationCancelChanges", exportAll: "exportAll", exportSelectedRows: "exportSelectedRows", exportTo: "exportTo", clearFilter: "clearFilter", createFilter: "createFilter", filterEnabledHint: "filterEnabledHint", groupByThisColumn: "groupByThisColumn", groupContinuedMessage: "groupContinuedMessage", groupContinuesMessage: "groupContinuesMessage", ungroup: "ungroup", ungroupAll: "ungroupAll", cancel: "cancel", emptyValue: "emptyValue", ok: "ok", avg: "avg", avgOtherColumn: "avgOtherColumn", count: "count", max: "max", maxOtherColumn: "maxOtherColumn", min: "min", minOtherColumn: "minOtherColumn", sum: "sum", sumOtherColumn: "sumOtherColumn", allFields: "allFields", columnFields: "columnFields", dataFields: "dataFields", filterFields: "filterFields", rowFields: "rowFields", columnFieldArea: "columnFieldArea", dataFieldArea: "dataFieldArea", filterFieldArea: "filterFieldArea", rowFieldArea: "rowFieldArea", collapseAll: "collapseAll", dataNotAvailable: "dataNotAvailable", expandAll: "expandAll", exportToExcel: "exportToExcel", grandTotal: "grandTotal", noData: "noData", removeAllSorting: "removeAllSorting", showFieldChooser: "showFieldChooser", sortColumnBySummary: "sortColumnBySummary", sortRowBySummary: "sortRowBySummary", total: "total", addRowToNode: "addRowToNode" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTextsComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTextsComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-texts',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'fix',
                          'leftPosition',
                          'rightPosition',
                          'unfix',
                          'addRow',
                          'cancelAllChanges',
                          'cancelRowChanges',
                          'confirmDeleteMessage',
                          'confirmDeleteTitle',
                          'deleteRow',
                          'editRow',
                          'saveAllChanges',
                          'saveRowChanges',
                          'undeleteRow',
                          'validationCancelChanges',
                          'exportAll',
                          'exportSelectedRows',
                          'exportTo',
                          'clearFilter',
                          'createFilter',
                          'filterEnabledHint',
                          'groupByThisColumn',
                          'groupContinuedMessage',
                          'groupContinuesMessage',
                          'ungroup',
                          'ungroupAll',
                          'cancel',
                          'emptyValue',
                          'ok',
                          'avg',
                          'avgOtherColumn',
                          'count',
                          'max',
                          'maxOtherColumn',
                          'min',
                          'minOtherColumn',
                          'sum',
                          'sumOtherColumn',
                          'allFields',
                          'columnFields',
                          'dataFields',
                          'filterFields',
                          'rowFields',
                          'columnFieldArea',
                          'dataFieldArea',
                          'filterFieldArea',
                          'rowFieldArea',
                          'collapseAll',
                          'dataNotAvailable',
                          'expandAll',
                          'exportToExcel',
                          'grandTotal',
                          'noData',
                          'removeAllSorting',
                          'showFieldChooser',
                          'sortColumnBySummary',
                          'sortRowBySummary',
                          'total',
                          'addRowToNode'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoTextsModule = /** @class */ (function () {
      function DxoTextsModule() {
      }
      return DxoTextsModule;
  }());
  /** @nocollapse */ DxoTextsModule.ɵfac = function DxoTextsModule_Factory(t) { return new (t || DxoTextsModule)(); };
  /** @nocollapse */ DxoTextsModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoTextsModule });
  /** @nocollapse */ DxoTextsModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTextsModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoTextsComponent
                      ],
                      exports: [
                          DxoTextsComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoTextsModule, { declarations: [DxoTextsComponent], exports: [DxoTextsComponent] }); })();

  var DxoTickIntervalComponent = /** @class */ (function (_super) {
      __extends(DxoTickIntervalComponent, _super);
      function DxoTickIntervalComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoTickIntervalComponent.prototype, "days", {
          get: function () {
              return this._getOption('days');
          },
          set: function (value) {
              this._setOption('days', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickIntervalComponent.prototype, "hours", {
          get: function () {
              return this._getOption('hours');
          },
          set: function (value) {
              this._setOption('hours', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickIntervalComponent.prototype, "milliseconds", {
          get: function () {
              return this._getOption('milliseconds');
          },
          set: function (value) {
              this._setOption('milliseconds', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickIntervalComponent.prototype, "minutes", {
          get: function () {
              return this._getOption('minutes');
          },
          set: function (value) {
              this._setOption('minutes', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickIntervalComponent.prototype, "months", {
          get: function () {
              return this._getOption('months');
          },
          set: function (value) {
              this._setOption('months', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickIntervalComponent.prototype, "quarters", {
          get: function () {
              return this._getOption('quarters');
          },
          set: function (value) {
              this._setOption('quarters', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickIntervalComponent.prototype, "seconds", {
          get: function () {
              return this._getOption('seconds');
          },
          set: function (value) {
              this._setOption('seconds', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickIntervalComponent.prototype, "weeks", {
          get: function () {
              return this._getOption('weeks');
          },
          set: function (value) {
              this._setOption('weeks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickIntervalComponent.prototype, "years", {
          get: function () {
              return this._getOption('years');
          },
          set: function (value) {
              this._setOption('years', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickIntervalComponent.prototype, "_optionPath", {
          get: function () {
              return 'tickInterval';
          },
          enumerable: false,
          configurable: true
      });
      DxoTickIntervalComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoTickIntervalComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoTickIntervalComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoTickIntervalComponent.ɵfac = function DxoTickIntervalComponent_Factory(t) { return new (t || DxoTickIntervalComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoTickIntervalComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoTickIntervalComponent, selectors: [["dxo-tick-interval"]], inputs: { days: "days", hours: "hours", milliseconds: "milliseconds", minutes: "minutes", months: "months", quarters: "quarters", seconds: "seconds", weeks: "weeks", years: "years" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTickIntervalComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTickIntervalComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-tick-interval',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { days: [{
                  type: i0.Input
              }], hours: [{
                  type: i0.Input
              }], milliseconds: [{
                  type: i0.Input
              }], minutes: [{
                  type: i0.Input
              }], months: [{
                  type: i0.Input
              }], quarters: [{
                  type: i0.Input
              }], seconds: [{
                  type: i0.Input
              }], weeks: [{
                  type: i0.Input
              }], years: [{
                  type: i0.Input
              }] });
  })();
  var DxoTickIntervalModule = /** @class */ (function () {
      function DxoTickIntervalModule() {
      }
      return DxoTickIntervalModule;
  }());
  /** @nocollapse */ DxoTickIntervalModule.ɵfac = function DxoTickIntervalModule_Factory(t) { return new (t || DxoTickIntervalModule)(); };
  /** @nocollapse */ DxoTickIntervalModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoTickIntervalModule });
  /** @nocollapse */ DxoTickIntervalModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTickIntervalModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoTickIntervalComponent
                      ],
                      exports: [
                          DxoTickIntervalComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoTickIntervalModule, { declarations: [DxoTickIntervalComponent], exports: [DxoTickIntervalComponent] }); })();

  var DxoTickComponent = /** @class */ (function (_super) {
      __extends(DxoTickComponent, _super);
      function DxoTickComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoTickComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickComponent.prototype, "length", {
          get: function () {
              return this._getOption('length');
          },
          set: function (value) {
              this._setOption('length', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickComponent.prototype, "shift", {
          get: function () {
              return this._getOption('shift');
          },
          set: function (value) {
              this._setOption('shift', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTickComponent.prototype, "_optionPath", {
          get: function () {
              return 'tick';
          },
          enumerable: false,
          configurable: true
      });
      DxoTickComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoTickComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoTickComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoTickComponent.ɵfac = function DxoTickComponent_Factory(t) { return new (t || DxoTickComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoTickComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoTickComponent, selectors: [["dxo-tick"]], inputs: { color: "color", length: "length", opacity: "opacity", shift: "shift", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTickComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTickComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-tick',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], length: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], shift: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoTickModule = /** @class */ (function () {
      function DxoTickModule() {
      }
      return DxoTickModule;
  }());
  /** @nocollapse */ DxoTickModule.ɵfac = function DxoTickModule_Factory(t) { return new (t || DxoTickModule)(); };
  /** @nocollapse */ DxoTickModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoTickModule });
  /** @nocollapse */ DxoTickModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTickModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoTickComponent
                      ],
                      exports: [
                          DxoTickComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoTickModule, { declarations: [DxoTickComponent], exports: [DxoTickComponent] }); })();

  var DxoTileComponent = /** @class */ (function (_super) {
      __extends(DxoTileComponent, _super);
      function DxoTileComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoTileComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTileComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTileComponent.prototype, "hoverStyle", {
          get: function () {
              return this._getOption('hoverStyle');
          },
          set: function (value) {
              this._setOption('hoverStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTileComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTileComponent.prototype, "selectionStyle", {
          get: function () {
              return this._getOption('selectionStyle');
          },
          set: function (value) {
              this._setOption('selectionStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTileComponent.prototype, "_optionPath", {
          get: function () {
              return 'tile';
          },
          enumerable: false,
          configurable: true
      });
      DxoTileComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoTileComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoTileComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoTileComponent.ɵfac = function DxoTileComponent_Factory(t) { return new (t || DxoTileComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoTileComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoTileComponent, selectors: [["dxo-tile"]], inputs: { border: "border", color: "color", hoverStyle: "hoverStyle", label: "label", selectionStyle: "selectionStyle" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTileComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTileComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-tile',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { border: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], hoverStyle: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], selectionStyle: [{
                  type: i0.Input
              }] });
  })();
  var DxoTileModule = /** @class */ (function () {
      function DxoTileModule() {
      }
      return DxoTileModule;
  }());
  /** @nocollapse */ DxoTileModule.ɵfac = function DxoTileModule_Factory(t) { return new (t || DxoTileModule)(); };
  /** @nocollapse */ DxoTileModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoTileModule });
  /** @nocollapse */ DxoTileModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTileModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoTileComponent
                      ],
                      exports: [
                          DxoTileComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoTileModule, { declarations: [DxoTileComponent], exports: [DxoTileComponent] }); })();

  var DxoTitleComponent = /** @class */ (function (_super) {
      __extends(DxoTitleComponent, _super);
      function DxoTitleComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoTitleComponent.prototype, "font", {
          get: function () {
              return this._getOption('font');
          },
          set: function (value) {
              this._setOption('font', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTitleComponent.prototype, "horizontalAlignment", {
          get: function () {
              return this._getOption('horizontalAlignment');
          },
          set: function (value) {
              this._setOption('horizontalAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTitleComponent.prototype, "margin", {
          get: function () {
              return this._getOption('margin');
          },
          set: function (value) {
              this._setOption('margin', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTitleComponent.prototype, "placeholderSize", {
          get: function () {
              return this._getOption('placeholderSize');
          },
          set: function (value) {
              this._setOption('placeholderSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTitleComponent.prototype, "subtitle", {
          get: function () {
              return this._getOption('subtitle');
          },
          set: function (value) {
              this._setOption('subtitle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTitleComponent.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTitleComponent.prototype, "verticalAlignment", {
          get: function () {
              return this._getOption('verticalAlignment');
          },
          set: function (value) {
              this._setOption('verticalAlignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTitleComponent.prototype, "textOverflow", {
          get: function () {
              return this._getOption('textOverflow');
          },
          set: function (value) {
              this._setOption('textOverflow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTitleComponent.prototype, "wordWrap", {
          get: function () {
              return this._getOption('wordWrap');
          },
          set: function (value) {
              this._setOption('wordWrap', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTitleComponent.prototype, "alignment", {
          get: function () {
              return this._getOption('alignment');
          },
          set: function (value) {
              this._setOption('alignment', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTitleComponent.prototype, "_optionPath", {
          get: function () {
              return 'title';
          },
          enumerable: false,
          configurable: true
      });
      DxoTitleComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoTitleComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoTitleComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoTitleComponent.ɵfac = function DxoTitleComponent_Factory(t) { return new (t || DxoTitleComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoTitleComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoTitleComponent, selectors: [["dxo-title"]], inputs: { font: "font", horizontalAlignment: "horizontalAlignment", margin: "margin", placeholderSize: "placeholderSize", subtitle: "subtitle", text: "text", verticalAlignment: "verticalAlignment", textOverflow: "textOverflow", wordWrap: "wordWrap", alignment: "alignment" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTitleComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTitleComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-title',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { font: [{
                  type: i0.Input
              }], horizontalAlignment: [{
                  type: i0.Input
              }], margin: [{
                  type: i0.Input
              }], placeholderSize: [{
                  type: i0.Input
              }], subtitle: [{
                  type: i0.Input
              }], text: [{
                  type: i0.Input
              }], verticalAlignment: [{
                  type: i0.Input
              }], textOverflow: [{
                  type: i0.Input
              }], wordWrap: [{
                  type: i0.Input
              }], alignment: [{
                  type: i0.Input
              }] });
  })();
  var DxoTitleModule = /** @class */ (function () {
      function DxoTitleModule() {
      }
      return DxoTitleModule;
  }());
  /** @nocollapse */ DxoTitleModule.ɵfac = function DxoTitleModule_Factory(t) { return new (t || DxoTitleModule)(); };
  /** @nocollapse */ DxoTitleModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoTitleModule });
  /** @nocollapse */ DxoTitleModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTitleModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoTitleComponent
                      ],
                      exports: [
                          DxoTitleComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoTitleModule, { declarations: [DxoTitleComponent], exports: [DxoTitleComponent] }); })();

  var DxoToComponent = /** @class */ (function (_super) {
      __extends(DxoToComponent, _super);
      function DxoToComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoToComponent.prototype, "_optionPath", {
          get: function () {
              return 'to';
          },
          enumerable: false,
          configurable: true
      });
      DxoToComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoToComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoToComponent;
  }(DxoAnimationState));
  /** @nocollapse */ DxoToComponent.ɵfac = function DxoToComponent_Factory(t) { return new (t || DxoToComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoToComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoToComponent, selectors: [["dxo-to"]], inputs: { left: "left", opacity: "opacity", position: "position", scale: "scale", top: "top" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoToComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoToComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-to',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'left',
                          'opacity',
                          'position',
                          'scale',
                          'top'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoToModule = /** @class */ (function () {
      function DxoToModule() {
      }
      return DxoToModule;
  }());
  /** @nocollapse */ DxoToModule.ɵfac = function DxoToModule_Factory(t) { return new (t || DxoToModule)(); };
  /** @nocollapse */ DxoToModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoToModule });
  /** @nocollapse */ DxoToModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoToModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoToComponent
                      ],
                      exports: [
                          DxoToComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoToModule, { declarations: [DxoToComponent], exports: [DxoToComponent] }); })();

  var DxoDataGridToolbar = /** @class */ (function (_super) {
      __extends(DxoDataGridToolbar, _super);
      function DxoDataGridToolbar() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoDataGridToolbar.prototype, "disabled", {
          get: function () {
              return this._getOption('disabled');
          },
          set: function (value) {
              this._setOption('disabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDataGridToolbar.prototype, "items", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this._setOption('items', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDataGridToolbar.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDataGridToolbar.prototype, "fileSelectionItems", {
          get: function () {
              return this._getOption('fileSelectionItems');
          },
          set: function (value) {
              this._setOption('fileSelectionItems', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDataGridToolbar.prototype, "container", {
          get: function () {
              return this._getOption('container');
          },
          set: function (value) {
              this._setOption('container', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoDataGridToolbar.prototype, "multiline", {
          get: function () {
              return this._getOption('multiline');
          },
          set: function (value) {
              this._setOption('multiline', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoDataGridToolbar;
  }(i1.NestedOption));
  /** @nocollapse */ DxoDataGridToolbar.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoDataGridToolbar_BaseFactory; return function DxoDataGridToolbar_Factory(t) { return (ɵDxoDataGridToolbar_BaseFactory || (ɵDxoDataGridToolbar_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoDataGridToolbar)))(t || DxoDataGridToolbar); }; }();
  /** @nocollapse */ DxoDataGridToolbar.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoDataGridToolbar, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoDataGridToolbar_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoDataGridToolbar, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoToolbarComponent = /** @class */ (function (_super) {
      __extends(DxoToolbarComponent, _super);
      function DxoToolbarComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoToolbarComponent.prototype, "_optionPath", {
          get: function () {
              return 'toolbar';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoToolbarComponent.prototype, "itemsChildren", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this.setChildren('items', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoToolbarComponent.prototype, "fileSelectionItemsChildren", {
          get: function () {
              return this._getOption('fileSelectionItems');
          },
          set: function (value) {
              this.setChildren('fileSelectionItems', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoToolbarComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoToolbarComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoToolbarComponent;
  }(DxoDataGridToolbar));
  /** @nocollapse */ DxoToolbarComponent.ɵfac = function DxoToolbarComponent_Factory(t) { return new (t || DxoToolbarComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoToolbarComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoToolbarComponent, selectors: [["dxo-toolbar"]], contentQueries: function DxoToolbarComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiItemComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiFileSelectionItemComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.fileSelectionItemsChildren = _t);
          }
      }, inputs: { disabled: "disabled", items: "items", visible: "visible", fileSelectionItems: "fileSelectionItems", container: "container", multiline: "multiline" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoToolbarComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoToolbarComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-toolbar',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'disabled',
                          'items',
                          'visible',
                          'fileSelectionItems',
                          'container',
                          'multiline'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { itemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiItemComponent; })]
              }], fileSelectionItemsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiFileSelectionItemComponent; })]
              }] });
  })();
  var DxoToolbarModule = /** @class */ (function () {
      function DxoToolbarModule() {
      }
      return DxoToolbarModule;
  }());
  /** @nocollapse */ DxoToolbarModule.ɵfac = function DxoToolbarModule_Factory(t) { return new (t || DxoToolbarModule)(); };
  /** @nocollapse */ DxoToolbarModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoToolbarModule });
  /** @nocollapse */ DxoToolbarModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoToolbarModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoToolbarComponent
                      ],
                      exports: [
                          DxoToolbarComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoToolbarModule, { declarations: [DxoToolbarComponent], exports: [DxoToolbarComponent] }); })();

  var DxoToolboxComponent = /** @class */ (function (_super) {
      __extends(DxoToolboxComponent, _super);
      function DxoToolboxComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoToolboxComponent.prototype, "groups", {
          get: function () {
              return this._getOption('groups');
          },
          set: function (value) {
              this._setOption('groups', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoToolboxComponent.prototype, "shapeIconsPerRow", {
          get: function () {
              return this._getOption('shapeIconsPerRow');
          },
          set: function (value) {
              this._setOption('shapeIconsPerRow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoToolboxComponent.prototype, "showSearch", {
          get: function () {
              return this._getOption('showSearch');
          },
          set: function (value) {
              this._setOption('showSearch', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoToolboxComponent.prototype, "visibility", {
          get: function () {
              return this._getOption('visibility');
          },
          set: function (value) {
              this._setOption('visibility', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoToolboxComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoToolboxComponent.prototype, "_optionPath", {
          get: function () {
              return 'toolbox';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoToolboxComponent.prototype, "groupsChildren", {
          get: function () {
              return this._getOption('groups');
          },
          set: function (value) {
              this.setChildren('groups', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoToolboxComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoToolboxComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoToolboxComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoToolboxComponent.ɵfac = function DxoToolboxComponent_Factory(t) { return new (t || DxoToolboxComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoToolboxComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoToolboxComponent, selectors: [["dxo-toolbox"]], contentQueries: function DxoToolboxComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiGroupComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.groupsChildren = _t);
          }
      }, inputs: { groups: "groups", shapeIconsPerRow: "shapeIconsPerRow", showSearch: "showSearch", visibility: "visibility", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoToolboxComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoToolboxComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-toolbox',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { groups: [{
                  type: i0.Input
              }], shapeIconsPerRow: [{
                  type: i0.Input
              }], showSearch: [{
                  type: i0.Input
              }], visibility: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }], groupsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiGroupComponent; })]
              }] });
  })();
  var DxoToolboxModule = /** @class */ (function () {
      function DxoToolboxModule() {
      }
      return DxoToolboxModule;
  }());
  /** @nocollapse */ DxoToolboxModule.ɵfac = function DxoToolboxModule_Factory(t) { return new (t || DxoToolboxModule)(); };
  /** @nocollapse */ DxoToolboxModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoToolboxModule });
  /** @nocollapse */ DxoToolboxModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoToolboxModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoToolboxComponent
                      ],
                      exports: [
                          DxoToolboxComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoToolboxModule, { declarations: [DxoToolboxComponent], exports: [DxoToolboxComponent] }); })();

  var DxoTooltipComponent = /** @class */ (function (_super) {
      __extends(DxoTooltipComponent, _super);
      function DxoTooltipComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoTooltipComponent.prototype, "arrowLength", {
          get: function () {
              return this._getOption('arrowLength');
          },
          set: function (value) {
              this._setOption('arrowLength', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "border", {
          get: function () {
              return this._getOption('border');
          },
          set: function (value) {
              this._setOption('border', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "container", {
          get: function () {
              return this._getOption('container');
          },
          set: function (value) {
              this._setOption('container', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "contentTemplate", {
          get: function () {
              return this._getOption('contentTemplate');
          },
          set: function (value) {
              this._setOption('contentTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "cornerRadius", {
          get: function () {
              return this._getOption('cornerRadius');
          },
          set: function (value) {
              this._setOption('cornerRadius', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "customizeTooltip", {
          get: function () {
              return this._getOption('customizeTooltip');
          },
          set: function (value) {
              this._setOption('customizeTooltip', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "enabled", {
          get: function () {
              return this._getOption('enabled');
          },
          set: function (value) {
              this._setOption('enabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "font", {
          get: function () {
              return this._getOption('font');
          },
          set: function (value) {
              this._setOption('font', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "format", {
          get: function () {
              return this._getOption('format');
          },
          set: function (value) {
              this._setOption('format', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "interactive", {
          get: function () {
              return this._getOption('interactive');
          },
          set: function (value) {
              this._setOption('interactive', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "paddingLeftRight", {
          get: function () {
              return this._getOption('paddingLeftRight');
          },
          set: function (value) {
              this._setOption('paddingLeftRight', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "paddingTopBottom", {
          get: function () {
              return this._getOption('paddingTopBottom');
          },
          set: function (value) {
              this._setOption('paddingTopBottom', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "shadow", {
          get: function () {
              return this._getOption('shadow');
          },
          set: function (value) {
              this._setOption('shadow', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "zIndex", {
          get: function () {
              return this._getOption('zIndex');
          },
          set: function (value) {
              this._setOption('zIndex', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "argumentFormat", {
          get: function () {
              return this._getOption('argumentFormat');
          },
          set: function (value) {
              this._setOption('argumentFormat', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "location", {
          get: function () {
              return this._getOption('location');
          },
          set: function (value) {
              this._setOption('location', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "shared", {
          get: function () {
              return this._getOption('shared');
          },
          set: function (value) {
              this._setOption('shared', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "isShown", {
          get: function () {
              return this._getOption('isShown');
          },
          set: function (value) {
              this._setOption('isShown', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "text", {
          get: function () {
              return this._getOption('text');
          },
          set: function (value) {
              this._setOption('text', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "position", {
          get: function () {
              return this._getOption('position');
          },
          set: function (value) {
              this._setOption('position', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "showMode", {
          get: function () {
              return this._getOption('showMode');
          },
          set: function (value) {
              this._setOption('showMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "customizeLinkTooltip", {
          get: function () {
              return this._getOption('customizeLinkTooltip');
          },
          set: function (value) {
              this._setOption('customizeLinkTooltip', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "customizeNodeTooltip", {
          get: function () {
              return this._getOption('customizeNodeTooltip');
          },
          set: function (value) {
              this._setOption('customizeNodeTooltip', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "linkTooltipTemplate", {
          get: function () {
              return this._getOption('linkTooltipTemplate');
          },
          set: function (value) {
              this._setOption('linkTooltipTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "nodeTooltipTemplate", {
          get: function () {
              return this._getOption('nodeTooltipTemplate');
          },
          set: function (value) {
              this._setOption('nodeTooltipTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoTooltipComponent.prototype, "_optionPath", {
          get: function () {
              return 'tooltip';
          },
          enumerable: false,
          configurable: true
      });
      DxoTooltipComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoTooltipComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoTooltipComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoTooltipComponent.ɵfac = function DxoTooltipComponent_Factory(t) { return new (t || DxoTooltipComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoTooltipComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoTooltipComponent, selectors: [["dxo-tooltip"]], inputs: { arrowLength: "arrowLength", border: "border", color: "color", container: "container", contentTemplate: "contentTemplate", cornerRadius: "cornerRadius", customizeTooltip: "customizeTooltip", enabled: "enabled", font: "font", format: "format", interactive: "interactive", opacity: "opacity", paddingLeftRight: "paddingLeftRight", paddingTopBottom: "paddingTopBottom", shadow: "shadow", zIndex: "zIndex", argumentFormat: "argumentFormat", location: "location", shared: "shared", isShown: "isShown", text: "text", position: "position", showMode: "showMode", customizeLinkTooltip: "customizeLinkTooltip", customizeNodeTooltip: "customizeNodeTooltip", linkTooltipTemplate: "linkTooltipTemplate", nodeTooltipTemplate: "nodeTooltipTemplate" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTooltipComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTooltipComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-tooltip',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { arrowLength: [{
                  type: i0.Input
              }], border: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], container: [{
                  type: i0.Input
              }], contentTemplate: [{
                  type: i0.Input
              }], cornerRadius: [{
                  type: i0.Input
              }], customizeTooltip: [{
                  type: i0.Input
              }], enabled: [{
                  type: i0.Input
              }], font: [{
                  type: i0.Input
              }], format: [{
                  type: i0.Input
              }], interactive: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], paddingLeftRight: [{
                  type: i0.Input
              }], paddingTopBottom: [{
                  type: i0.Input
              }], shadow: [{
                  type: i0.Input
              }], zIndex: [{
                  type: i0.Input
              }], argumentFormat: [{
                  type: i0.Input
              }], location: [{
                  type: i0.Input
              }], shared: [{
                  type: i0.Input
              }], isShown: [{
                  type: i0.Input
              }], text: [{
                  type: i0.Input
              }], position: [{
                  type: i0.Input
              }], showMode: [{
                  type: i0.Input
              }], customizeLinkTooltip: [{
                  type: i0.Input
              }], customizeNodeTooltip: [{
                  type: i0.Input
              }], linkTooltipTemplate: [{
                  type: i0.Input
              }], nodeTooltipTemplate: [{
                  type: i0.Input
              }] });
  })();
  var DxoTooltipModule = /** @class */ (function () {
      function DxoTooltipModule() {
      }
      return DxoTooltipModule;
  }());
  /** @nocollapse */ DxoTooltipModule.ɵfac = function DxoTooltipModule_Factory(t) { return new (t || DxoTooltipModule)(); };
  /** @nocollapse */ DxoTooltipModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoTooltipModule });
  /** @nocollapse */ DxoTooltipModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoTooltipModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoTooltipComponent
                      ],
                      exports: [
                          DxoTooltipComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoTooltipModule, { declarations: [DxoTooltipComponent], exports: [DxoTooltipComponent] }); })();

  var DxoUploadComponent = /** @class */ (function (_super) {
      __extends(DxoUploadComponent, _super);
      function DxoUploadComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoUploadComponent.prototype, "chunkSize", {
          get: function () {
              return this._getOption('chunkSize');
          },
          set: function (value) {
              this._setOption('chunkSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoUploadComponent.prototype, "maxFileSize", {
          get: function () {
              return this._getOption('maxFileSize');
          },
          set: function (value) {
              this._setOption('maxFileSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoUploadComponent.prototype, "_optionPath", {
          get: function () {
              return 'upload';
          },
          enumerable: false,
          configurable: true
      });
      DxoUploadComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoUploadComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoUploadComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoUploadComponent.ɵfac = function DxoUploadComponent_Factory(t) { return new (t || DxoUploadComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoUploadComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoUploadComponent, selectors: [["dxo-upload"]], inputs: { chunkSize: "chunkSize", maxFileSize: "maxFileSize" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoUploadComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoUploadComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-upload',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { chunkSize: [{
                  type: i0.Input
              }], maxFileSize: [{
                  type: i0.Input
              }] });
  })();
  var DxoUploadModule = /** @class */ (function () {
      function DxoUploadModule() {
      }
      return DxoUploadModule;
  }());
  /** @nocollapse */ DxoUploadModule.ɵfac = function DxoUploadModule_Factory(t) { return new (t || DxoUploadModule)(); };
  /** @nocollapse */ DxoUploadModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoUploadModule });
  /** @nocollapse */ DxoUploadModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoUploadModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoUploadComponent
                      ],
                      exports: [
                          DxoUploadComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoUploadModule, { declarations: [DxoUploadComponent], exports: [DxoUploadComponent] }); })();

  var DxoUrlComponent = /** @class */ (function (_super) {
      __extends(DxoUrlComponent, _super);
      function DxoUrlComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoUrlComponent.prototype, "rangeMaxPoint", {
          get: function () {
              return this._getOption('rangeMaxPoint');
          },
          set: function (value) {
              this._setOption('rangeMaxPoint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoUrlComponent.prototype, "rangeMinPoint", {
          get: function () {
              return this._getOption('rangeMinPoint');
          },
          set: function (value) {
              this._setOption('rangeMinPoint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoUrlComponent.prototype, "_optionPath", {
          get: function () {
              return 'url';
          },
          enumerable: false,
          configurable: true
      });
      DxoUrlComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoUrlComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoUrlComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoUrlComponent.ɵfac = function DxoUrlComponent_Factory(t) { return new (t || DxoUrlComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoUrlComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoUrlComponent, selectors: [["dxo-url"]], inputs: { rangeMaxPoint: "rangeMaxPoint", rangeMinPoint: "rangeMinPoint" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoUrlComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoUrlComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-url',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { rangeMaxPoint: [{
                  type: i0.Input
              }], rangeMinPoint: [{
                  type: i0.Input
              }] });
  })();
  var DxoUrlModule = /** @class */ (function () {
      function DxoUrlModule() {
      }
      return DxoUrlModule;
  }());
  /** @nocollapse */ DxoUrlModule.ɵfac = function DxoUrlModule_Factory(t) { return new (t || DxoUrlModule)(); };
  /** @nocollapse */ DxoUrlModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoUrlModule });
  /** @nocollapse */ DxoUrlModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoUrlModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoUrlComponent
                      ],
                      exports: [
                          DxoUrlComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoUrlModule, { declarations: [DxoUrlComponent], exports: [DxoUrlComponent] }); })();

  var DxoValidationComponent = /** @class */ (function (_super) {
      __extends(DxoValidationComponent, _super);
      function DxoValidationComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoValidationComponent.prototype, "autoUpdateParentTasks", {
          get: function () {
              return this._getOption('autoUpdateParentTasks');
          },
          set: function (value) {
              this._setOption('autoUpdateParentTasks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValidationComponent.prototype, "enablePredecessorGap", {
          get: function () {
              return this._getOption('enablePredecessorGap');
          },
          set: function (value) {
              this._setOption('enablePredecessorGap', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValidationComponent.prototype, "validateDependencies", {
          get: function () {
              return this._getOption('validateDependencies');
          },
          set: function (value) {
              this._setOption('validateDependencies', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValidationComponent.prototype, "_optionPath", {
          get: function () {
              return 'validation';
          },
          enumerable: false,
          configurable: true
      });
      DxoValidationComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoValidationComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoValidationComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoValidationComponent.ɵfac = function DxoValidationComponent_Factory(t) { return new (t || DxoValidationComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoValidationComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoValidationComponent, selectors: [["dxo-validation"]], inputs: { autoUpdateParentTasks: "autoUpdateParentTasks", enablePredecessorGap: "enablePredecessorGap", validateDependencies: "validateDependencies" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoValidationComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoValidationComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-validation',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { autoUpdateParentTasks: [{
                  type: i0.Input
              }], enablePredecessorGap: [{
                  type: i0.Input
              }], validateDependencies: [{
                  type: i0.Input
              }] });
  })();
  var DxoValidationModule = /** @class */ (function () {
      function DxoValidationModule() {
      }
      return DxoValidationModule;
  }());
  /** @nocollapse */ DxoValidationModule.ɵfac = function DxoValidationModule_Factory(t) { return new (t || DxoValidationModule)(); };
  /** @nocollapse */ DxoValidationModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoValidationModule });
  /** @nocollapse */ DxoValidationModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoValidationModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoValidationComponent
                      ],
                      exports: [
                          DxoValidationComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoValidationModule, { declarations: [DxoValidationComponent], exports: [DxoValidationComponent] }); })();

  var DxiValueAxisComponent = /** @class */ (function (_super) {
      __extends(DxiValueAxisComponent, _super);
      function DxiValueAxisComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'categoriesChange' },
              { emit: 'visualRangeChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiValueAxisComponent.prototype, "aggregatedPointsPosition", {
          get: function () {
              return this._getOption('aggregatedPointsPosition');
          },
          set: function (value) {
              this._setOption('aggregatedPointsPosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "allowDecimals", {
          get: function () {
              return this._getOption('allowDecimals');
          },
          set: function (value) {
              this._setOption('allowDecimals', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "autoBreaksEnabled", {
          get: function () {
              return this._getOption('autoBreaksEnabled');
          },
          set: function (value) {
              this._setOption('autoBreaksEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "axisDivisionFactor", {
          get: function () {
              return this._getOption('axisDivisionFactor');
          },
          set: function (value) {
              this._setOption('axisDivisionFactor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "breaks", {
          get: function () {
              return this._getOption('breaks');
          },
          set: function (value) {
              this._setOption('breaks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "breakStyle", {
          get: function () {
              return this._getOption('breakStyle');
          },
          set: function (value) {
              this._setOption('breakStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "categories", {
          get: function () {
              return this._getOption('categories');
          },
          set: function (value) {
              this._setOption('categories', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "constantLines", {
          get: function () {
              return this._getOption('constantLines');
          },
          set: function (value) {
              this._setOption('constantLines', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "constantLineStyle", {
          get: function () {
              return this._getOption('constantLineStyle');
          },
          set: function (value) {
              this._setOption('constantLineStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "customPosition", {
          get: function () {
              return this._getOption('customPosition');
          },
          set: function (value) {
              this._setOption('customPosition', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "discreteAxisDivisionMode", {
          get: function () {
              return this._getOption('discreteAxisDivisionMode');
          },
          set: function (value) {
              this._setOption('discreteAxisDivisionMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "endOnTick", {
          get: function () {
              return this._getOption('endOnTick');
          },
          set: function (value) {
              this._setOption('endOnTick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "grid", {
          get: function () {
              return this._getOption('grid');
          },
          set: function (value) {
              this._setOption('grid', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "inverted", {
          get: function () {
              return this._getOption('inverted');
          },
          set: function (value) {
              this._setOption('inverted', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "linearThreshold", {
          get: function () {
              return this._getOption('linearThreshold');
          },
          set: function (value) {
              this._setOption('linearThreshold', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "logarithmBase", {
          get: function () {
              return this._getOption('logarithmBase');
          },
          set: function (value) {
              this._setOption('logarithmBase', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "maxAutoBreakCount", {
          get: function () {
              return this._getOption('maxAutoBreakCount');
          },
          set: function (value) {
              this._setOption('maxAutoBreakCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "maxValueMargin", {
          get: function () {
              return this._getOption('maxValueMargin');
          },
          set: function (value) {
              this._setOption('maxValueMargin', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "minorGrid", {
          get: function () {
              return this._getOption('minorGrid');
          },
          set: function (value) {
              this._setOption('minorGrid', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "minorTick", {
          get: function () {
              return this._getOption('minorTick');
          },
          set: function (value) {
              this._setOption('minorTick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "minorTickCount", {
          get: function () {
              return this._getOption('minorTickCount');
          },
          set: function (value) {
              this._setOption('minorTickCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "minorTickInterval", {
          get: function () {
              return this._getOption('minorTickInterval');
          },
          set: function (value) {
              this._setOption('minorTickInterval', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "minValueMargin", {
          get: function () {
              return this._getOption('minValueMargin');
          },
          set: function (value) {
              this._setOption('minValueMargin', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "minVisualRangeLength", {
          get: function () {
              return this._getOption('minVisualRangeLength');
          },
          set: function (value) {
              this._setOption('minVisualRangeLength', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "multipleAxesSpacing", {
          get: function () {
              return this._getOption('multipleAxesSpacing');
          },
          set: function (value) {
              this._setOption('multipleAxesSpacing', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "offset", {
          get: function () {
              return this._getOption('offset');
          },
          set: function (value) {
              this._setOption('offset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "pane", {
          get: function () {
              return this._getOption('pane');
          },
          set: function (value) {
              this._setOption('pane', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "placeholderSize", {
          get: function () {
              return this._getOption('placeholderSize');
          },
          set: function (value) {
              this._setOption('placeholderSize', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "position", {
          get: function () {
              return this._getOption('position');
          },
          set: function (value) {
              this._setOption('position', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "showZero", {
          get: function () {
              return this._getOption('showZero');
          },
          set: function (value) {
              this._setOption('showZero', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "strips", {
          get: function () {
              return this._getOption('strips');
          },
          set: function (value) {
              this._setOption('strips', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "stripStyle", {
          get: function () {
              return this._getOption('stripStyle');
          },
          set: function (value) {
              this._setOption('stripStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "synchronizedValue", {
          get: function () {
              return this._getOption('synchronizedValue');
          },
          set: function (value) {
              this._setOption('synchronizedValue', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "tick", {
          get: function () {
              return this._getOption('tick');
          },
          set: function (value) {
              this._setOption('tick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "tickInterval", {
          get: function () {
              return this._getOption('tickInterval');
          },
          set: function (value) {
              this._setOption('tickInterval', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "title", {
          get: function () {
              return this._getOption('title');
          },
          set: function (value) {
              this._setOption('title', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "valueMarginsEnabled", {
          get: function () {
              return this._getOption('valueMarginsEnabled');
          },
          set: function (value) {
              this._setOption('valueMarginsEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "valueType", {
          get: function () {
              return this._getOption('valueType');
          },
          set: function (value) {
              this._setOption('valueType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "visualRange", {
          get: function () {
              return this._getOption('visualRange');
          },
          set: function (value) {
              this._setOption('visualRange', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "visualRangeUpdateMode", {
          get: function () {
              return this._getOption('visualRangeUpdateMode');
          },
          set: function (value) {
              this._setOption('visualRangeUpdateMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "wholeRange", {
          get: function () {
              return this._getOption('wholeRange');
          },
          set: function (value) {
              this._setOption('wholeRange', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "_optionPath", {
          get: function () {
              return 'valueAxis';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "breaksChildren", {
          get: function () {
              return this._getOption('breaks');
          },
          set: function (value) {
              this.setChildren('breaks', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "constantLinesChildren", {
          get: function () {
              return this._getOption('constantLines');
          },
          set: function (value) {
              this.setChildren('constantLines', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiValueAxisComponent.prototype, "stripsChildren", {
          get: function () {
              return this._getOption('strips');
          },
          set: function (value) {
              this.setChildren('strips', value);
          },
          enumerable: false,
          configurable: true
      });
      DxiValueAxisComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiValueAxisComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiValueAxisComponent.ɵfac = function DxiValueAxisComponent_Factory(t) { return new (t || DxiValueAxisComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiValueAxisComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiValueAxisComponent, selectors: [["dxi-value-axis"]], contentQueries: function DxiValueAxisComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiBreakComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiConstantLineComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiStripComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.breaksChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.constantLinesChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.stripsChildren = _t);
          }
      }, inputs: { aggregatedPointsPosition: "aggregatedPointsPosition", allowDecimals: "allowDecimals", autoBreaksEnabled: "autoBreaksEnabled", axisDivisionFactor: "axisDivisionFactor", breaks: "breaks", breakStyle: "breakStyle", categories: "categories", color: "color", constantLines: "constantLines", constantLineStyle: "constantLineStyle", customPosition: "customPosition", discreteAxisDivisionMode: "discreteAxisDivisionMode", endOnTick: "endOnTick", grid: "grid", inverted: "inverted", label: "label", linearThreshold: "linearThreshold", logarithmBase: "logarithmBase", maxAutoBreakCount: "maxAutoBreakCount", maxValueMargin: "maxValueMargin", minorGrid: "minorGrid", minorTick: "minorTick", minorTickCount: "minorTickCount", minorTickInterval: "minorTickInterval", minValueMargin: "minValueMargin", minVisualRangeLength: "minVisualRangeLength", multipleAxesSpacing: "multipleAxesSpacing", name: "name", offset: "offset", opacity: "opacity", pane: "pane", placeholderSize: "placeholderSize", position: "position", showZero: "showZero", strips: "strips", stripStyle: "stripStyle", synchronizedValue: "synchronizedValue", tick: "tick", tickInterval: "tickInterval", title: "title", type: "type", valueMarginsEnabled: "valueMarginsEnabled", valueType: "valueType", visible: "visible", visualRange: "visualRange", visualRangeUpdateMode: "visualRangeUpdateMode", wholeRange: "wholeRange", width: "width" }, outputs: { categoriesChange: "categoriesChange", visualRangeChange: "visualRangeChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiValueAxisComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiValueAxisComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-value-axis',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { aggregatedPointsPosition: [{
                  type: i0.Input
              }], allowDecimals: [{
                  type: i0.Input
              }], autoBreaksEnabled: [{
                  type: i0.Input
              }], axisDivisionFactor: [{
                  type: i0.Input
              }], breaks: [{
                  type: i0.Input
              }], breakStyle: [{
                  type: i0.Input
              }], categories: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], constantLines: [{
                  type: i0.Input
              }], constantLineStyle: [{
                  type: i0.Input
              }], customPosition: [{
                  type: i0.Input
              }], discreteAxisDivisionMode: [{
                  type: i0.Input
              }], endOnTick: [{
                  type: i0.Input
              }], grid: [{
                  type: i0.Input
              }], inverted: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], linearThreshold: [{
                  type: i0.Input
              }], logarithmBase: [{
                  type: i0.Input
              }], maxAutoBreakCount: [{
                  type: i0.Input
              }], maxValueMargin: [{
                  type: i0.Input
              }], minorGrid: [{
                  type: i0.Input
              }], minorTick: [{
                  type: i0.Input
              }], minorTickCount: [{
                  type: i0.Input
              }], minorTickInterval: [{
                  type: i0.Input
              }], minValueMargin: [{
                  type: i0.Input
              }], minVisualRangeLength: [{
                  type: i0.Input
              }], multipleAxesSpacing: [{
                  type: i0.Input
              }], name: [{
                  type: i0.Input
              }], offset: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], pane: [{
                  type: i0.Input
              }], placeholderSize: [{
                  type: i0.Input
              }], position: [{
                  type: i0.Input
              }], showZero: [{
                  type: i0.Input
              }], strips: [{
                  type: i0.Input
              }], stripStyle: [{
                  type: i0.Input
              }], synchronizedValue: [{
                  type: i0.Input
              }], tick: [{
                  type: i0.Input
              }], tickInterval: [{
                  type: i0.Input
              }], title: [{
                  type: i0.Input
              }], type: [{
                  type: i0.Input
              }], valueMarginsEnabled: [{
                  type: i0.Input
              }], valueType: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], visualRange: [{
                  type: i0.Input
              }], visualRangeUpdateMode: [{
                  type: i0.Input
              }], wholeRange: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }], categoriesChange: [{
                  type: i0.Output
              }], visualRangeChange: [{
                  type: i0.Output
              }], breaksChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiBreakComponent; })]
              }], constantLinesChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiConstantLineComponent; })]
              }], stripsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiStripComponent; })]
              }] });
  })();
  var DxiValueAxisModule = /** @class */ (function () {
      function DxiValueAxisModule() {
      }
      return DxiValueAxisModule;
  }());
  /** @nocollapse */ DxiValueAxisModule.ɵfac = function DxiValueAxisModule_Factory(t) { return new (t || DxiValueAxisModule)(); };
  /** @nocollapse */ DxiValueAxisModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiValueAxisModule });
  /** @nocollapse */ DxiValueAxisModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiValueAxisModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiValueAxisComponent
                      ],
                      exports: [
                          DxiValueAxisComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiValueAxisModule, { declarations: [DxiValueAxisComponent], exports: [DxiValueAxisComponent] }); })();

  var DxoValueAxisComponent = /** @class */ (function (_super) {
      __extends(DxoValueAxisComponent, _super);
      function DxoValueAxisComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'visualRangeChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoValueAxisComponent.prototype, "allowDecimals", {
          get: function () {
              return this._getOption('allowDecimals');
          },
          set: function (value) {
              this._setOption('allowDecimals', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "axisDivisionFactor", {
          get: function () {
              return this._getOption('axisDivisionFactor');
          },
          set: function (value) {
              this._setOption('axisDivisionFactor', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "categories", {
          get: function () {
              return this._getOption('categories');
          },
          set: function (value) {
              this._setOption('categories', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "constantLines", {
          get: function () {
              return this._getOption('constantLines');
          },
          set: function (value) {
              this._setOption('constantLines', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "constantLineStyle", {
          get: function () {
              return this._getOption('constantLineStyle');
          },
          set: function (value) {
              this._setOption('constantLineStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "discreteAxisDivisionMode", {
          get: function () {
              return this._getOption('discreteAxisDivisionMode');
          },
          set: function (value) {
              this._setOption('discreteAxisDivisionMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "endOnTick", {
          get: function () {
              return this._getOption('endOnTick');
          },
          set: function (value) {
              this._setOption('endOnTick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "grid", {
          get: function () {
              return this._getOption('grid');
          },
          set: function (value) {
              this._setOption('grid', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "inverted", {
          get: function () {
              return this._getOption('inverted');
          },
          set: function (value) {
              this._setOption('inverted', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "linearThreshold", {
          get: function () {
              return this._getOption('linearThreshold');
          },
          set: function (value) {
              this._setOption('linearThreshold', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "logarithmBase", {
          get: function () {
              return this._getOption('logarithmBase');
          },
          set: function (value) {
              this._setOption('logarithmBase', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "maxValueMargin", {
          get: function () {
              return this._getOption('maxValueMargin');
          },
          set: function (value) {
              this._setOption('maxValueMargin', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "minorGrid", {
          get: function () {
              return this._getOption('minorGrid');
          },
          set: function (value) {
              this._setOption('minorGrid', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "minorTick", {
          get: function () {
              return this._getOption('minorTick');
          },
          set: function (value) {
              this._setOption('minorTick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "minorTickCount", {
          get: function () {
              return this._getOption('minorTickCount');
          },
          set: function (value) {
              this._setOption('minorTickCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "minorTickInterval", {
          get: function () {
              return this._getOption('minorTickInterval');
          },
          set: function (value) {
              this._setOption('minorTickInterval', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "minValueMargin", {
          get: function () {
              return this._getOption('minValueMargin');
          },
          set: function (value) {
              this._setOption('minValueMargin', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "minVisualRangeLength", {
          get: function () {
              return this._getOption('minVisualRangeLength');
          },
          set: function (value) {
              this._setOption('minVisualRangeLength', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "showZero", {
          get: function () {
              return this._getOption('showZero');
          },
          set: function (value) {
              this._setOption('showZero', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "strips", {
          get: function () {
              return this._getOption('strips');
          },
          set: function (value) {
              this._setOption('strips', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "stripStyle", {
          get: function () {
              return this._getOption('stripStyle');
          },
          set: function (value) {
              this._setOption('stripStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "tick", {
          get: function () {
              return this._getOption('tick');
          },
          set: function (value) {
              this._setOption('tick', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "tickInterval", {
          get: function () {
              return this._getOption('tickInterval');
          },
          set: function (value) {
              this._setOption('tickInterval', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "valueMarginsEnabled", {
          get: function () {
              return this._getOption('valueMarginsEnabled');
          },
          set: function (value) {
              this._setOption('valueMarginsEnabled', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "valueType", {
          get: function () {
              return this._getOption('valueType');
          },
          set: function (value) {
              this._setOption('valueType', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "visualRange", {
          get: function () {
              return this._getOption('visualRange');
          },
          set: function (value) {
              this._setOption('visualRange', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "visualRangeUpdateMode", {
          get: function () {
              return this._getOption('visualRangeUpdateMode');
          },
          set: function (value) {
              this._setOption('visualRangeUpdateMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "wholeRange", {
          get: function () {
              return this._getOption('wholeRange');
          },
          set: function (value) {
              this._setOption('wholeRange', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "max", {
          get: function () {
              return this._getOption('max');
          },
          set: function (value) {
              this._setOption('max', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "min", {
          get: function () {
              return this._getOption('min');
          },
          set: function (value) {
              this._setOption('min', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "_optionPath", {
          get: function () {
              return 'valueAxis';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "constantLinesChildren", {
          get: function () {
              return this._getOption('constantLines');
          },
          set: function (value) {
              this.setChildren('constantLines', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueAxisComponent.prototype, "stripsChildren", {
          get: function () {
              return this._getOption('strips');
          },
          set: function (value) {
              this.setChildren('strips', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoValueAxisComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoValueAxisComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoValueAxisComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoValueAxisComponent.ɵfac = function DxoValueAxisComponent_Factory(t) { return new (t || DxoValueAxisComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoValueAxisComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoValueAxisComponent, selectors: [["dxo-value-axis"]], contentQueries: function DxoValueAxisComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiConstantLineComponent, 4);
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiStripComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.constantLinesChildren = _t);
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.stripsChildren = _t);
          }
      }, inputs: { allowDecimals: "allowDecimals", axisDivisionFactor: "axisDivisionFactor", categories: "categories", color: "color", constantLines: "constantLines", constantLineStyle: "constantLineStyle", discreteAxisDivisionMode: "discreteAxisDivisionMode", endOnTick: "endOnTick", grid: "grid", inverted: "inverted", label: "label", linearThreshold: "linearThreshold", logarithmBase: "logarithmBase", maxValueMargin: "maxValueMargin", minorGrid: "minorGrid", minorTick: "minorTick", minorTickCount: "minorTickCount", minorTickInterval: "minorTickInterval", minValueMargin: "minValueMargin", minVisualRangeLength: "minVisualRangeLength", opacity: "opacity", showZero: "showZero", strips: "strips", stripStyle: "stripStyle", tick: "tick", tickInterval: "tickInterval", type: "type", valueMarginsEnabled: "valueMarginsEnabled", valueType: "valueType", visible: "visible", visualRange: "visualRange", visualRangeUpdateMode: "visualRangeUpdateMode", wholeRange: "wholeRange", width: "width", max: "max", min: "min" }, outputs: { visualRangeChange: "visualRangeChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoValueAxisComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoValueAxisComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-value-axis',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowDecimals: [{
                  type: i0.Input
              }], axisDivisionFactor: [{
                  type: i0.Input
              }], categories: [{
                  type: i0.Input
              }], color: [{
                  type: i0.Input
              }], constantLines: [{
                  type: i0.Input
              }], constantLineStyle: [{
                  type: i0.Input
              }], discreteAxisDivisionMode: [{
                  type: i0.Input
              }], endOnTick: [{
                  type: i0.Input
              }], grid: [{
                  type: i0.Input
              }], inverted: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], linearThreshold: [{
                  type: i0.Input
              }], logarithmBase: [{
                  type: i0.Input
              }], maxValueMargin: [{
                  type: i0.Input
              }], minorGrid: [{
                  type: i0.Input
              }], minorTick: [{
                  type: i0.Input
              }], minorTickCount: [{
                  type: i0.Input
              }], minorTickInterval: [{
                  type: i0.Input
              }], minValueMargin: [{
                  type: i0.Input
              }], minVisualRangeLength: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], showZero: [{
                  type: i0.Input
              }], strips: [{
                  type: i0.Input
              }], stripStyle: [{
                  type: i0.Input
              }], tick: [{
                  type: i0.Input
              }], tickInterval: [{
                  type: i0.Input
              }], type: [{
                  type: i0.Input
              }], valueMarginsEnabled: [{
                  type: i0.Input
              }], valueType: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], visualRange: [{
                  type: i0.Input
              }], visualRangeUpdateMode: [{
                  type: i0.Input
              }], wholeRange: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }], max: [{
                  type: i0.Input
              }], min: [{
                  type: i0.Input
              }], visualRangeChange: [{
                  type: i0.Output
              }], constantLinesChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiConstantLineComponent; })]
              }], stripsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiStripComponent; })]
              }] });
  })();
  var DxoValueAxisModule = /** @class */ (function () {
      function DxoValueAxisModule() {
      }
      return DxoValueAxisModule;
  }());
  /** @nocollapse */ DxoValueAxisModule.ɵfac = function DxoValueAxisModule_Factory(t) { return new (t || DxoValueAxisModule)(); };
  /** @nocollapse */ DxoValueAxisModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoValueAxisModule });
  /** @nocollapse */ DxoValueAxisModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoValueAxisModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoValueAxisComponent
                      ],
                      exports: [
                          DxoValueAxisComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoValueAxisModule, { declarations: [DxoValueAxisComponent], exports: [DxoValueAxisComponent] }); })();

  var DxoValueErrorBarComponent = /** @class */ (function (_super) {
      __extends(DxoValueErrorBarComponent, _super);
      function DxoValueErrorBarComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoValueErrorBarComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueErrorBarComponent.prototype, "displayMode", {
          get: function () {
              return this._getOption('displayMode');
          },
          set: function (value) {
              this._setOption('displayMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueErrorBarComponent.prototype, "edgeLength", {
          get: function () {
              return this._getOption('edgeLength');
          },
          set: function (value) {
              this._setOption('edgeLength', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueErrorBarComponent.prototype, "highValueField", {
          get: function () {
              return this._getOption('highValueField');
          },
          set: function (value) {
              this._setOption('highValueField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueErrorBarComponent.prototype, "lineWidth", {
          get: function () {
              return this._getOption('lineWidth');
          },
          set: function (value) {
              this._setOption('lineWidth', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueErrorBarComponent.prototype, "lowValueField", {
          get: function () {
              return this._getOption('lowValueField');
          },
          set: function (value) {
              this._setOption('lowValueField', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueErrorBarComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueErrorBarComponent.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueErrorBarComponent.prototype, "value", {
          get: function () {
              return this._getOption('value');
          },
          set: function (value) {
              this._setOption('value', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoValueErrorBarComponent.prototype, "_optionPath", {
          get: function () {
              return 'valueErrorBar';
          },
          enumerable: false,
          configurable: true
      });
      DxoValueErrorBarComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoValueErrorBarComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoValueErrorBarComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoValueErrorBarComponent.ɵfac = function DxoValueErrorBarComponent_Factory(t) { return new (t || DxoValueErrorBarComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoValueErrorBarComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoValueErrorBarComponent, selectors: [["dxo-value-error-bar"]], inputs: { color: "color", displayMode: "displayMode", edgeLength: "edgeLength", highValueField: "highValueField", lineWidth: "lineWidth", lowValueField: "lowValueField", opacity: "opacity", type: "type", value: "value" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoValueErrorBarComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoValueErrorBarComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-value-error-bar',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], displayMode: [{
                  type: i0.Input
              }], edgeLength: [{
                  type: i0.Input
              }], highValueField: [{
                  type: i0.Input
              }], lineWidth: [{
                  type: i0.Input
              }], lowValueField: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], type: [{
                  type: i0.Input
              }], value: [{
                  type: i0.Input
              }] });
  })();
  var DxoValueErrorBarModule = /** @class */ (function () {
      function DxoValueErrorBarModule() {
      }
      return DxoValueErrorBarModule;
  }());
  /** @nocollapse */ DxoValueErrorBarModule.ɵfac = function DxoValueErrorBarModule_Factory(t) { return new (t || DxoValueErrorBarModule)(); };
  /** @nocollapse */ DxoValueErrorBarModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoValueErrorBarModule });
  /** @nocollapse */ DxoValueErrorBarModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoValueErrorBarModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoValueErrorBarComponent
                      ],
                      exports: [
                          DxoValueErrorBarComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoValueErrorBarModule, { declarations: [DxoValueErrorBarComponent], exports: [DxoValueErrorBarComponent] }); })();

  var DxoValueFormatComponent = /** @class */ (function (_super) {
      __extends(DxoValueFormatComponent, _super);
      function DxoValueFormatComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoValueFormatComponent.prototype, "_optionPath", {
          get: function () {
              return 'valueFormat';
          },
          enumerable: false,
          configurable: true
      });
      DxoValueFormatComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoValueFormatComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoValueFormatComponent;
  }(DxoFormat));
  /** @nocollapse */ DxoValueFormatComponent.ɵfac = function DxoValueFormatComponent_Factory(t) { return new (t || DxoValueFormatComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoValueFormatComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoValueFormatComponent, selectors: [["dxo-value-format"]], inputs: { currency: "currency", formatter: "formatter", parser: "parser", precision: "precision", type: "type", useCurrencyAccountingStyle: "useCurrencyAccountingStyle" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoValueFormatComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoValueFormatComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-value-format',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'currency',
                          'formatter',
                          'parser',
                          'precision',
                          'type',
                          'useCurrencyAccountingStyle'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoValueFormatModule = /** @class */ (function () {
      function DxoValueFormatModule() {
      }
      return DxoValueFormatModule;
  }());
  /** @nocollapse */ DxoValueFormatModule.ɵfac = function DxoValueFormatModule_Factory(t) { return new (t || DxoValueFormatModule)(); };
  /** @nocollapse */ DxoValueFormatModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoValueFormatModule });
  /** @nocollapse */ DxoValueFormatModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoValueFormatModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoValueFormatComponent
                      ],
                      exports: [
                          DxoValueFormatComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoValueFormatModule, { declarations: [DxoValueFormatComponent], exports: [DxoValueFormatComponent] }); })();

  var DxoValueIndicatorComponent = /** @class */ (function (_super) {
      __extends(DxoValueIndicatorComponent, _super);
      function DxoValueIndicatorComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoValueIndicatorComponent.prototype, "_optionPath", {
          get: function () {
              return 'valueIndicator';
          },
          enumerable: false,
          configurable: true
      });
      DxoValueIndicatorComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoValueIndicatorComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoValueIndicatorComponent;
  }(DxoGaugeIndicator));
  /** @nocollapse */ DxoValueIndicatorComponent.ɵfac = function DxoValueIndicatorComponent_Factory(t) { return new (t || DxoValueIndicatorComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoValueIndicatorComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoValueIndicatorComponent, selectors: [["dxo-value-indicator"]], inputs: { arrowLength: "arrowLength", backgroundColor: "backgroundColor", baseValue: "baseValue", beginAdaptingAtRadius: "beginAdaptingAtRadius", color: "color", horizontalOrientation: "horizontalOrientation", indentFromCenter: "indentFromCenter", length: "length", offset: "offset", palette: "palette", secondColor: "secondColor", secondFraction: "secondFraction", size: "size", spindleGapSize: "spindleGapSize", spindleSize: "spindleSize", text: "text", type: "type", verticalOrientation: "verticalOrientation", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoValueIndicatorComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoValueIndicatorComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-value-indicator',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'arrowLength',
                          'backgroundColor',
                          'baseValue',
                          'beginAdaptingAtRadius',
                          'color',
                          'horizontalOrientation',
                          'indentFromCenter',
                          'length',
                          'offset',
                          'palette',
                          'secondColor',
                          'secondFraction',
                          'size',
                          'spindleGapSize',
                          'spindleSize',
                          'text',
                          'type',
                          'verticalOrientation',
                          'width'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoValueIndicatorModule = /** @class */ (function () {
      function DxoValueIndicatorModule() {
      }
      return DxoValueIndicatorModule;
  }());
  /** @nocollapse */ DxoValueIndicatorModule.ɵfac = function DxoValueIndicatorModule_Factory(t) { return new (t || DxoValueIndicatorModule)(); };
  /** @nocollapse */ DxoValueIndicatorModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoValueIndicatorModule });
  /** @nocollapse */ DxoValueIndicatorModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoValueIndicatorModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoValueIndicatorComponent
                      ],
                      exports: [
                          DxoValueIndicatorComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoValueIndicatorModule, { declarations: [DxoValueIndicatorComponent], exports: [DxoValueIndicatorComponent] }); })();

  var DxoHtmlEditorVariables = /** @class */ (function (_super) {
      __extends(DxoHtmlEditorVariables, _super);
      function DxoHtmlEditorVariables() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(DxoHtmlEditorVariables.prototype, "dataSource", {
          get: function () {
              return this._getOption('dataSource');
          },
          set: function (value) {
              this._setOption('dataSource', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoHtmlEditorVariables.prototype, "escapeChar", {
          get: function () {
              return this._getOption('escapeChar');
          },
          set: function (value) {
              this._setOption('escapeChar', value);
          },
          enumerable: false,
          configurable: true
      });
      return DxoHtmlEditorVariables;
  }(i1.NestedOption));
  /** @nocollapse */ DxoHtmlEditorVariables.ɵfac = /** @pureOrBreakMyCode */ function () { var ɵDxoHtmlEditorVariables_BaseFactory; return function DxoHtmlEditorVariables_Factory(t) { return (ɵDxoHtmlEditorVariables_BaseFactory || (ɵDxoHtmlEditorVariables_BaseFactory = i0__namespace.ɵɵgetInheritedFactory(DxoHtmlEditorVariables)))(t || DxoHtmlEditorVariables); }; }();
  /** @nocollapse */ DxoHtmlEditorVariables.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoHtmlEditorVariables, selectors: [["ng-component"]], features: [i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoHtmlEditorVariables_Template(rf, ctx) { }, encapsulation: 2 });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoHtmlEditorVariables, [{
              type: i0.Component,
              args: [{
                      template: ''
                  }]
          }], null, null);
  })();

  var DxoVariablesComponent = /** @class */ (function (_super) {
      __extends(DxoVariablesComponent, _super);
      function DxoVariablesComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoVariablesComponent.prototype, "_optionPath", {
          get: function () {
              return 'variables';
          },
          enumerable: false,
          configurable: true
      });
      DxoVariablesComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoVariablesComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoVariablesComponent;
  }(DxoHtmlEditorVariables));
  /** @nocollapse */ DxoVariablesComponent.ɵfac = function DxoVariablesComponent_Factory(t) { return new (t || DxoVariablesComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoVariablesComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoVariablesComponent, selectors: [["dxo-variables"]], inputs: { dataSource: "dataSource", escapeChar: "escapeChar" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoVariablesComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoVariablesComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-variables',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost],
                      inputs: [
                          'dataSource',
                          'escapeChar'
                      ]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, null);
  })();
  var DxoVariablesModule = /** @class */ (function () {
      function DxoVariablesModule() {
      }
      return DxoVariablesModule;
  }());
  /** @nocollapse */ DxoVariablesModule.ɵfac = function DxoVariablesModule_Factory(t) { return new (t || DxoVariablesModule)(); };
  /** @nocollapse */ DxoVariablesModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoVariablesModule });
  /** @nocollapse */ DxoVariablesModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoVariablesModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoVariablesComponent
                      ],
                      exports: [
                          DxoVariablesComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoVariablesModule, { declarations: [DxoVariablesComponent], exports: [DxoVariablesComponent] }); })();

  var DxoVerticalLineComponent = /** @class */ (function (_super) {
      __extends(DxoVerticalLineComponent, _super);
      function DxoVerticalLineComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoVerticalLineComponent.prototype, "color", {
          get: function () {
              return this._getOption('color');
          },
          set: function (value) {
              this._setOption('color', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoVerticalLineComponent.prototype, "dashStyle", {
          get: function () {
              return this._getOption('dashStyle');
          },
          set: function (value) {
              this._setOption('dashStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoVerticalLineComponent.prototype, "label", {
          get: function () {
              return this._getOption('label');
          },
          set: function (value) {
              this._setOption('label', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoVerticalLineComponent.prototype, "opacity", {
          get: function () {
              return this._getOption('opacity');
          },
          set: function (value) {
              this._setOption('opacity', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoVerticalLineComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoVerticalLineComponent.prototype, "width", {
          get: function () {
              return this._getOption('width');
          },
          set: function (value) {
              this._setOption('width', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoVerticalLineComponent.prototype, "_optionPath", {
          get: function () {
              return 'verticalLine';
          },
          enumerable: false,
          configurable: true
      });
      DxoVerticalLineComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoVerticalLineComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoVerticalLineComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoVerticalLineComponent.ɵfac = function DxoVerticalLineComponent_Factory(t) { return new (t || DxoVerticalLineComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoVerticalLineComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoVerticalLineComponent, selectors: [["dxo-vertical-line"]], inputs: { color: "color", dashStyle: "dashStyle", label: "label", opacity: "opacity", visible: "visible", width: "width" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoVerticalLineComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoVerticalLineComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-vertical-line',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { color: [{
                  type: i0.Input
              }], dashStyle: [{
                  type: i0.Input
              }], label: [{
                  type: i0.Input
              }], opacity: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], width: [{
                  type: i0.Input
              }] });
  })();
  var DxoVerticalLineModule = /** @class */ (function () {
      function DxoVerticalLineModule() {
      }
      return DxoVerticalLineModule;
  }());
  /** @nocollapse */ DxoVerticalLineModule.ɵfac = function DxoVerticalLineModule_Factory(t) { return new (t || DxoVerticalLineModule)(); };
  /** @nocollapse */ DxoVerticalLineModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoVerticalLineModule });
  /** @nocollapse */ DxoVerticalLineModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoVerticalLineModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoVerticalLineComponent
                      ],
                      exports: [
                          DxoVerticalLineComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoVerticalLineModule, { declarations: [DxoVerticalLineComponent], exports: [DxoVerticalLineComponent] }); })();

  var DxiViewComponent = /** @class */ (function (_super) {
      __extends(DxiViewComponent, _super);
      function DxiViewComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxiViewComponent.prototype, "agendaDuration", {
          get: function () {
              return this._getOption('agendaDuration');
          },
          set: function (value) {
              this._setOption('agendaDuration', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "allDayPanelMode", {
          get: function () {
              return this._getOption('allDayPanelMode');
          },
          set: function (value) {
              this._setOption('allDayPanelMode', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "appointmentCollectorTemplate", {
          get: function () {
              return this._getOption('appointmentCollectorTemplate');
          },
          set: function (value) {
              this._setOption('appointmentCollectorTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "appointmentTemplate", {
          get: function () {
              return this._getOption('appointmentTemplate');
          },
          set: function (value) {
              this._setOption('appointmentTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "appointmentTooltipTemplate", {
          get: function () {
              return this._getOption('appointmentTooltipTemplate');
          },
          set: function (value) {
              this._setOption('appointmentTooltipTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "cellDuration", {
          get: function () {
              return this._getOption('cellDuration');
          },
          set: function (value) {
              this._setOption('cellDuration', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "dataCellTemplate", {
          get: function () {
              return this._getOption('dataCellTemplate');
          },
          set: function (value) {
              this._setOption('dataCellTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "dateCellTemplate", {
          get: function () {
              return this._getOption('dateCellTemplate');
          },
          set: function (value) {
              this._setOption('dateCellTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "dropDownAppointmentTemplate", {
          get: function () {
              return this._getOption('dropDownAppointmentTemplate');
          },
          set: function (value) {
              this._setOption('dropDownAppointmentTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "endDayHour", {
          get: function () {
              return this._getOption('endDayHour');
          },
          set: function (value) {
              this._setOption('endDayHour', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "firstDayOfWeek", {
          get: function () {
              return this._getOption('firstDayOfWeek');
          },
          set: function (value) {
              this._setOption('firstDayOfWeek', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "groupByDate", {
          get: function () {
              return this._getOption('groupByDate');
          },
          set: function (value) {
              this._setOption('groupByDate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "groupOrientation", {
          get: function () {
              return this._getOption('groupOrientation');
          },
          set: function (value) {
              this._setOption('groupOrientation', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "groups", {
          get: function () {
              return this._getOption('groups');
          },
          set: function (value) {
              this._setOption('groups', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "intervalCount", {
          get: function () {
              return this._getOption('intervalCount');
          },
          set: function (value) {
              this._setOption('intervalCount', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "maxAppointmentsPerCell", {
          get: function () {
              return this._getOption('maxAppointmentsPerCell');
          },
          set: function (value) {
              this._setOption('maxAppointmentsPerCell', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "name", {
          get: function () {
              return this._getOption('name');
          },
          set: function (value) {
              this._setOption('name', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "offset", {
          get: function () {
              return this._getOption('offset');
          },
          set: function (value) {
              this._setOption('offset', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "resourceCellTemplate", {
          get: function () {
              return this._getOption('resourceCellTemplate');
          },
          set: function (value) {
              this._setOption('resourceCellTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "scrolling", {
          get: function () {
              return this._getOption('scrolling');
          },
          set: function (value) {
              this._setOption('scrolling', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "startDate", {
          get: function () {
              return this._getOption('startDate');
          },
          set: function (value) {
              this._setOption('startDate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "startDayHour", {
          get: function () {
              return this._getOption('startDayHour');
          },
          set: function (value) {
              this._setOption('startDayHour', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "timeCellTemplate", {
          get: function () {
              return this._getOption('timeCellTemplate');
          },
          set: function (value) {
              this._setOption('timeCellTemplate', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "type", {
          get: function () {
              return this._getOption('type');
          },
          set: function (value) {
              this._setOption('type', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxiViewComponent.prototype, "_optionPath", {
          get: function () {
              return 'views';
          },
          enumerable: false,
          configurable: true
      });
      DxiViewComponent.prototype.ngOnDestroy = function () {
          this._deleteRemovedOptions(this._fullOptionPath());
      };
      return DxiViewComponent;
  }(i1.CollectionNestedOption));
  /** @nocollapse */ DxiViewComponent.ɵfac = function DxiViewComponent_Factory(t) { return new (t || DxiViewComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxiViewComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxiViewComponent, selectors: [["dxi-view"]], inputs: { agendaDuration: "agendaDuration", allDayPanelMode: "allDayPanelMode", appointmentCollectorTemplate: "appointmentCollectorTemplate", appointmentTemplate: "appointmentTemplate", appointmentTooltipTemplate: "appointmentTooltipTemplate", cellDuration: "cellDuration", dataCellTemplate: "dataCellTemplate", dateCellTemplate: "dateCellTemplate", dropDownAppointmentTemplate: "dropDownAppointmentTemplate", endDayHour: "endDayHour", firstDayOfWeek: "firstDayOfWeek", groupByDate: "groupByDate", groupOrientation: "groupOrientation", groups: "groups", intervalCount: "intervalCount", maxAppointmentsPerCell: "maxAppointmentsPerCell", name: "name", offset: "offset", resourceCellTemplate: "resourceCellTemplate", scrolling: "scrolling", startDate: "startDate", startDayHour: "startDayHour", timeCellTemplate: "timeCellTemplate", type: "type" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiViewComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiViewComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxi-view',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { agendaDuration: [{
                  type: i0.Input
              }], allDayPanelMode: [{
                  type: i0.Input
              }], appointmentCollectorTemplate: [{
                  type: i0.Input
              }], appointmentTemplate: [{
                  type: i0.Input
              }], appointmentTooltipTemplate: [{
                  type: i0.Input
              }], cellDuration: [{
                  type: i0.Input
              }], dataCellTemplate: [{
                  type: i0.Input
              }], dateCellTemplate: [{
                  type: i0.Input
              }], dropDownAppointmentTemplate: [{
                  type: i0.Input
              }], endDayHour: [{
                  type: i0.Input
              }], firstDayOfWeek: [{
                  type: i0.Input
              }], groupByDate: [{
                  type: i0.Input
              }], groupOrientation: [{
                  type: i0.Input
              }], groups: [{
                  type: i0.Input
              }], intervalCount: [{
                  type: i0.Input
              }], maxAppointmentsPerCell: [{
                  type: i0.Input
              }], name: [{
                  type: i0.Input
              }], offset: [{
                  type: i0.Input
              }], resourceCellTemplate: [{
                  type: i0.Input
              }], scrolling: [{
                  type: i0.Input
              }], startDate: [{
                  type: i0.Input
              }], startDayHour: [{
                  type: i0.Input
              }], timeCellTemplate: [{
                  type: i0.Input
              }], type: [{
                  type: i0.Input
              }] });
  })();
  var DxiViewModule = /** @class */ (function () {
      function DxiViewModule() {
      }
      return DxiViewModule;
  }());
  /** @nocollapse */ DxiViewModule.ɵfac = function DxiViewModule_Factory(t) { return new (t || DxiViewModule)(); };
  /** @nocollapse */ DxiViewModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxiViewModule });
  /** @nocollapse */ DxiViewModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxiViewModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxiViewComponent
                      ],
                      exports: [
                          DxiViewComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxiViewModule, { declarations: [DxiViewComponent], exports: [DxiViewComponent] }); })();

  var DxoViewToolbarComponent = /** @class */ (function (_super) {
      __extends(DxoViewToolbarComponent, _super);
      function DxoViewToolbarComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoViewToolbarComponent.prototype, "commands", {
          get: function () {
              return this._getOption('commands');
          },
          set: function (value) {
              this._setOption('commands', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoViewToolbarComponent.prototype, "visible", {
          get: function () {
              return this._getOption('visible');
          },
          set: function (value) {
              this._setOption('visible', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoViewToolbarComponent.prototype, "_optionPath", {
          get: function () {
              return 'viewToolbar';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoViewToolbarComponent.prototype, "commandsChildren", {
          get: function () {
              return this._getOption('commands');
          },
          set: function (value) {
              this.setChildren('commands', value);
          },
          enumerable: false,
          configurable: true
      });
      DxoViewToolbarComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoViewToolbarComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoViewToolbarComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoViewToolbarComponent.ɵfac = function DxoViewToolbarComponent_Factory(t) { return new (t || DxoViewToolbarComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoViewToolbarComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoViewToolbarComponent, selectors: [["dxo-view-toolbar"]], contentQueries: function DxoViewToolbarComponent_ContentQueries(rf, ctx, dirIndex) {
          if (rf & 1) {
              i0__namespace.ɵɵcontentQuery(dirIndex, DxiCommandComponent, 4);
          }
          if (rf & 2) {
              var _t = void 0;
              i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.commandsChildren = _t);
          }
      }, inputs: { commands: "commands", visible: "visible" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoViewToolbarComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoViewToolbarComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-view-toolbar',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { commands: [{
                  type: i0.Input
              }], visible: [{
                  type: i0.Input
              }], commandsChildren: [{
                  type: i0.ContentChildren,
                  args: [i0.forwardRef(function () { return DxiCommandComponent; })]
              }] });
  })();
  var DxoViewToolbarModule = /** @class */ (function () {
      function DxoViewToolbarModule() {
      }
      return DxoViewToolbarModule;
  }());
  /** @nocollapse */ DxoViewToolbarModule.ɵfac = function DxoViewToolbarModule_Factory(t) { return new (t || DxoViewToolbarModule)(); };
  /** @nocollapse */ DxoViewToolbarModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoViewToolbarModule });
  /** @nocollapse */ DxoViewToolbarModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoViewToolbarModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoViewToolbarComponent
                      ],
                      exports: [
                          DxoViewToolbarComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoViewToolbarModule, { declarations: [DxoViewToolbarComponent], exports: [DxoViewToolbarComponent] }); })();

  var DxoWidthComponent = /** @class */ (function (_super) {
      __extends(DxoWidthComponent, _super);
      function DxoWidthComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoWidthComponent.prototype, "rangeMaxPoint", {
          get: function () {
              return this._getOption('rangeMaxPoint');
          },
          set: function (value) {
              this._setOption('rangeMaxPoint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoWidthComponent.prototype, "rangeMinPoint", {
          get: function () {
              return this._getOption('rangeMinPoint');
          },
          set: function (value) {
              this._setOption('rangeMinPoint', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoWidthComponent.prototype, "end", {
          get: function () {
              return this._getOption('end');
          },
          set: function (value) {
              this._setOption('end', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoWidthComponent.prototype, "start", {
          get: function () {
              return this._getOption('start');
          },
          set: function (value) {
              this._setOption('start', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoWidthComponent.prototype, "_optionPath", {
          get: function () {
              return 'width';
          },
          enumerable: false,
          configurable: true
      });
      DxoWidthComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoWidthComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoWidthComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoWidthComponent.ɵfac = function DxoWidthComponent_Factory(t) { return new (t || DxoWidthComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoWidthComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoWidthComponent, selectors: [["dxo-width"]], inputs: { rangeMaxPoint: "rangeMaxPoint", rangeMinPoint: "rangeMinPoint", end: "end", start: "start" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoWidthComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoWidthComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-width',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { rangeMaxPoint: [{
                  type: i0.Input
              }], rangeMinPoint: [{
                  type: i0.Input
              }], end: [{
                  type: i0.Input
              }], start: [{
                  type: i0.Input
              }] });
  })();
  var DxoWidthModule = /** @class */ (function () {
      function DxoWidthModule() {
      }
      return DxoWidthModule;
  }());
  /** @nocollapse */ DxoWidthModule.ɵfac = function DxoWidthModule_Factory(t) { return new (t || DxoWidthModule)(); };
  /** @nocollapse */ DxoWidthModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoWidthModule });
  /** @nocollapse */ DxoWidthModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoWidthModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoWidthComponent
                      ],
                      exports: [
                          DxoWidthComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoWidthModule, { declarations: [DxoWidthComponent], exports: [DxoWidthComponent] }); })();

  var DxoZoomAndPanComponent = /** @class */ (function (_super) {
      __extends(DxoZoomAndPanComponent, _super);
      function DxoZoomAndPanComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoZoomAndPanComponent.prototype, "allowMouseWheel", {
          get: function () {
              return this._getOption('allowMouseWheel');
          },
          set: function (value) {
              this._setOption('allowMouseWheel', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoZoomAndPanComponent.prototype, "allowTouchGestures", {
          get: function () {
              return this._getOption('allowTouchGestures');
          },
          set: function (value) {
              this._setOption('allowTouchGestures', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoZoomAndPanComponent.prototype, "argumentAxis", {
          get: function () {
              return this._getOption('argumentAxis');
          },
          set: function (value) {
              this._setOption('argumentAxis', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoZoomAndPanComponent.prototype, "dragBoxStyle", {
          get: function () {
              return this._getOption('dragBoxStyle');
          },
          set: function (value) {
              this._setOption('dragBoxStyle', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoZoomAndPanComponent.prototype, "dragToZoom", {
          get: function () {
              return this._getOption('dragToZoom');
          },
          set: function (value) {
              this._setOption('dragToZoom', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoZoomAndPanComponent.prototype, "panKey", {
          get: function () {
              return this._getOption('panKey');
          },
          set: function (value) {
              this._setOption('panKey', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoZoomAndPanComponent.prototype, "valueAxis", {
          get: function () {
              return this._getOption('valueAxis');
          },
          set: function (value) {
              this._setOption('valueAxis', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoZoomAndPanComponent.prototype, "_optionPath", {
          get: function () {
              return 'zoomAndPan';
          },
          enumerable: false,
          configurable: true
      });
      DxoZoomAndPanComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoZoomAndPanComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoZoomAndPanComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoZoomAndPanComponent.ɵfac = function DxoZoomAndPanComponent_Factory(t) { return new (t || DxoZoomAndPanComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoZoomAndPanComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoZoomAndPanComponent, selectors: [["dxo-zoom-and-pan"]], inputs: { allowMouseWheel: "allowMouseWheel", allowTouchGestures: "allowTouchGestures", argumentAxis: "argumentAxis", dragBoxStyle: "dragBoxStyle", dragToZoom: "dragToZoom", panKey: "panKey", valueAxis: "valueAxis" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoZoomAndPanComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoZoomAndPanComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-zoom-and-pan',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { allowMouseWheel: [{
                  type: i0.Input
              }], allowTouchGestures: [{
                  type: i0.Input
              }], argumentAxis: [{
                  type: i0.Input
              }], dragBoxStyle: [{
                  type: i0.Input
              }], dragToZoom: [{
                  type: i0.Input
              }], panKey: [{
                  type: i0.Input
              }], valueAxis: [{
                  type: i0.Input
              }] });
  })();
  var DxoZoomAndPanModule = /** @class */ (function () {
      function DxoZoomAndPanModule() {
      }
      return DxoZoomAndPanModule;
  }());
  /** @nocollapse */ DxoZoomAndPanModule.ɵfac = function DxoZoomAndPanModule_Factory(t) { return new (t || DxoZoomAndPanModule)(); };
  /** @nocollapse */ DxoZoomAndPanModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoZoomAndPanModule });
  /** @nocollapse */ DxoZoomAndPanModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoZoomAndPanModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoZoomAndPanComponent
                      ],
                      exports: [
                          DxoZoomAndPanComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoZoomAndPanModule, { declarations: [DxoZoomAndPanComponent], exports: [DxoZoomAndPanComponent] }); })();

  var DxoZoomLevelComponent = /** @class */ (function (_super) {
      __extends(DxoZoomLevelComponent, _super);
      function DxoZoomLevelComponent(parentOptionHost, optionHost) {
          var _this = _super.call(this) || this;
          _this._createEventEmitters([
              { emit: 'valueChange' }
          ]);
          parentOptionHost.setNestedOption(_this);
          optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
          return _this;
      }
      Object.defineProperty(DxoZoomLevelComponent.prototype, "items", {
          get: function () {
              return this._getOption('items');
          },
          set: function (value) {
              this._setOption('items', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoZoomLevelComponent.prototype, "value", {
          get: function () {
              return this._getOption('value');
          },
          set: function (value) {
              this._setOption('value', value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(DxoZoomLevelComponent.prototype, "_optionPath", {
          get: function () {
              return 'zoomLevel';
          },
          enumerable: false,
          configurable: true
      });
      DxoZoomLevelComponent.prototype.ngOnInit = function () {
          this._addRecreatedComponent();
      };
      DxoZoomLevelComponent.prototype.ngOnDestroy = function () {
          this._addRemovedOption(this._getOptionPath());
      };
      return DxoZoomLevelComponent;
  }(i1.NestedOption));
  /** @nocollapse */ DxoZoomLevelComponent.ɵfac = function DxoZoomLevelComponent_Factory(t) { return new (t || DxoZoomLevelComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 5), i0__namespace.ɵɵdirectiveInject(i1__namespace.NestedOptionHost, 1)); };
  /** @nocollapse */ DxoZoomLevelComponent.ɵcmp = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineComponent({ type: DxoZoomLevelComponent, selectors: [["dxo-zoom-level"]], inputs: { items: "items", value: "value" }, outputs: { valueChange: "valueChange" }, features: [i0__namespace.ɵɵProvidersFeature([i1.NestedOptionHost]), i0__namespace.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoZoomLevelComponent_Template(rf, ctx) { }, styles: [""] });
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoZoomLevelComponent, [{
              type: i0.Component,
              args: [{
                      selector: 'dxo-zoom-level',
                      template: '',
                      styles: [''],
                      providers: [i1.NestedOptionHost]
                  }]
          }], function () {
          return [{ type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.SkipSelf
                      }, {
                          type: i0.Host
                      }] }, { type: i1__namespace.NestedOptionHost, decorators: [{
                          type: i0.Host
                      }] }];
      }, { items: [{
                  type: i0.Input
              }], value: [{
                  type: i0.Input
              }], valueChange: [{
                  type: i0.Output
              }] });
  })();
  var DxoZoomLevelModule = /** @class */ (function () {
      function DxoZoomLevelModule() {
      }
      return DxoZoomLevelModule;
  }());
  /** @nocollapse */ DxoZoomLevelModule.ɵfac = function DxoZoomLevelModule_Factory(t) { return new (t || DxoZoomLevelModule)(); };
  /** @nocollapse */ DxoZoomLevelModule.ɵmod = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineNgModule({ type: DxoZoomLevelModule });
  /** @nocollapse */ DxoZoomLevelModule.ɵinj = /** @pureOrBreakMyCode */ i0__namespace.ɵɵdefineInjector({});
  (function () {
      (typeof ngDevMode === "undefined" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DxoZoomLevelModule, [{
              type: i0.NgModule,
              args: [{
                      declarations: [
                          DxoZoomLevelComponent
                      ],
                      exports: [
                          DxoZoomLevelComponent
                      ],
                  }]
          }], null, null);
  })();
  (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DxoZoomLevelModule, { declarations: [DxoZoomLevelComponent], exports: [DxoZoomLevelComponent] }); })();

  /*!
   * devextreme-angular
   * Version: 23.2.4
   * Build date: Mon Jan 29 2024
   *
   * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
   *
   * This software may be modified and distributed under the terms
   * of the MIT license. See the LICENSE file in the root of the project for details.
   *
   * https://github.com/DevExpress/devextreme-angular
   */

  /**
   * Generated bundle index. Do not edit.
   */

  exports.DxiAnnotationComponent = DxiAnnotationComponent;
  exports.DxiAnnotationModule = DxiAnnotationModule;
  exports.DxiBreakComponent = DxiBreakComponent;
  exports.DxiBreakModule = DxiBreakModule;
  exports.DxiButtonComponent = DxiButtonComponent;
  exports.DxiButtonModule = DxiButtonModule;
  exports.DxiCenterComponent = DxiCenterComponent;
  exports.DxiCenterModule = DxiCenterModule;
  exports.DxiChangeComponent = DxiChangeComponent;
  exports.DxiChangeModule = DxiChangeModule;
  exports.DxiColComponent = DxiColComponent;
  exports.DxiColModule = DxiColModule;
  exports.DxiColumnComponent = DxiColumnComponent;
  exports.DxiColumnModule = DxiColumnModule;
  exports.DxiCommandComponent = DxiCommandComponent;
  exports.DxiCommandModule = DxiCommandModule;
  exports.DxiConnectionPointComponent = DxiConnectionPointComponent;
  exports.DxiConnectionPointModule = DxiConnectionPointModule;
  exports.DxiConstantLineComponent = DxiConstantLineComponent;
  exports.DxiConstantLineModule = DxiConstantLineModule;
  exports.DxiCustomOperationComponent = DxiCustomOperationComponent;
  exports.DxiCustomOperationModule = DxiCustomOperationModule;
  exports.DxiCustomShapeComponent = DxiCustomShapeComponent;
  exports.DxiCustomShapeModule = DxiCustomShapeModule;
  exports.DxiFieldComponent = DxiFieldComponent;
  exports.DxiFieldModule = DxiFieldModule;
  exports.DxiFileSelectionItemComponent = DxiFileSelectionItemComponent;
  exports.DxiFileSelectionItemModule = DxiFileSelectionItemModule;
  exports.DxiGroupComponent = DxiGroupComponent;
  exports.DxiGroupItemComponent = DxiGroupItemComponent;
  exports.DxiGroupItemModule = DxiGroupItemModule;
  exports.DxiGroupModule = DxiGroupModule;
  exports.DxiItemComponent = DxiItemComponent;
  exports.DxiItemModule = DxiItemModule;
  exports.DxiLayerComponent = DxiLayerComponent;
  exports.DxiLayerModule = DxiLayerModule;
  exports.DxiLegendComponent = DxiLegendComponent;
  exports.DxiLegendModule = DxiLegendModule;
  exports.DxiLocationComponent = DxiLocationComponent;
  exports.DxiLocationModule = DxiLocationModule;
  exports.DxiMarkerComponent = DxiMarkerComponent;
  exports.DxiMarkerModule = DxiMarkerModule;
  exports.DxiMentionComponent = DxiMentionComponent;
  exports.DxiMentionModule = DxiMentionModule;
  exports.DxiMenuItemComponent = DxiMenuItemComponent;
  exports.DxiMenuItemModule = DxiMenuItemModule;
  exports.DxiPaneComponent = DxiPaneComponent;
  exports.DxiPaneModule = DxiPaneModule;
  exports.DxiRangeComponent = DxiRangeComponent;
  exports.DxiRangeModule = DxiRangeModule;
  exports.DxiResourceComponent = DxiResourceComponent;
  exports.DxiResourceModule = DxiResourceModule;
  exports.DxiRouteComponent = DxiRouteComponent;
  exports.DxiRouteModule = DxiRouteModule;
  exports.DxiRowComponent = DxiRowComponent;
  exports.DxiRowModule = DxiRowModule;
  exports.DxiSeriesComponent = DxiSeriesComponent;
  exports.DxiSeriesModule = DxiSeriesModule;
  exports.DxiSortByGroupSummaryInfoComponent = DxiSortByGroupSummaryInfoComponent;
  exports.DxiSortByGroupSummaryInfoModule = DxiSortByGroupSummaryInfoModule;
  exports.DxiStripComponent = DxiStripComponent;
  exports.DxiStripLineComponent = DxiStripLineComponent;
  exports.DxiStripLineModule = DxiStripLineModule;
  exports.DxiStripModule = DxiStripModule;
  exports.DxiTabComponent = DxiTabComponent;
  exports.DxiTabModule = DxiTabModule;
  exports.DxiToolbarItemComponent = DxiToolbarItemComponent;
  exports.DxiToolbarItemModule = DxiToolbarItemModule;
  exports.DxiTotalItemComponent = DxiTotalItemComponent;
  exports.DxiTotalItemModule = DxiTotalItemModule;
  exports.DxiValidationRuleComponent = DxiValidationRuleComponent;
  exports.DxiValidationRuleModule = DxiValidationRuleModule;
  exports.DxiValueAxisComponent = DxiValueAxisComponent;
  exports.DxiValueAxisModule = DxiValueAxisModule;
  exports.DxiViewComponent = DxiViewComponent;
  exports.DxiViewModule = DxiViewModule;
  exports.DxoAdapterComponent = DxoAdapterComponent;
  exports.DxoAdapterModule = DxoAdapterModule;
  exports.DxoAdaptiveLayoutComponent = DxoAdaptiveLayoutComponent;
  exports.DxoAdaptiveLayoutModule = DxoAdaptiveLayoutModule;
  exports.DxoAggregationComponent = DxoAggregationComponent;
  exports.DxoAggregationIntervalComponent = DxoAggregationIntervalComponent;
  exports.DxoAggregationIntervalModule = DxoAggregationIntervalModule;
  exports.DxoAggregationModule = DxoAggregationModule;
  exports.DxoAnimationComponent = DxoAnimationComponent;
  exports.DxoAnimationModule = DxoAnimationModule;
  exports.DxoApiKeyComponent = DxoApiKeyComponent;
  exports.DxoApiKeyModule = DxoApiKeyModule;
  exports.DxoAppointmentDraggingComponent = DxoAppointmentDraggingComponent;
  exports.DxoAppointmentDraggingModule = DxoAppointmentDraggingModule;
  exports.DxoAreaComponent = DxoAreaComponent;
  exports.DxoAreaModule = DxoAreaModule;
  exports.DxoArgumentAxisComponent = DxoArgumentAxisComponent;
  exports.DxoArgumentAxisModule = DxoArgumentAxisModule;
  exports.DxoArgumentFormatComponent = DxoArgumentFormatComponent;
  exports.DxoArgumentFormatModule = DxoArgumentFormatModule;
  exports.DxoAtComponent = DxoAtComponent;
  exports.DxoAtModule = DxoAtModule;
  exports.DxoAutoLayoutComponent = DxoAutoLayoutComponent;
  exports.DxoAutoLayoutModule = DxoAutoLayoutModule;
  exports.DxoBackgroundColorComponent = DxoBackgroundColorComponent;
  exports.DxoBackgroundColorModule = DxoBackgroundColorModule;
  exports.DxoBackgroundComponent = DxoBackgroundComponent;
  exports.DxoBackgroundModule = DxoBackgroundModule;
  exports.DxoBarComponent = DxoBarComponent;
  exports.DxoBarModule = DxoBarModule;
  exports.DxoBehaviorComponent = DxoBehaviorComponent;
  exports.DxoBehaviorModule = DxoBehaviorModule;
  exports.DxoBorderComponent = DxoBorderComponent;
  exports.DxoBorderModule = DxoBorderModule;
  exports.DxoBoundaryOffsetComponent = DxoBoundaryOffsetComponent;
  exports.DxoBoundaryOffsetModule = DxoBoundaryOffsetModule;
  exports.DxoBoxComponent = DxoBoxComponent;
  exports.DxoBoxModule = DxoBoxModule;
  exports.DxoBreakStyleComponent = DxoBreakStyleComponent;
  exports.DxoBreakStyleModule = DxoBreakStyleModule;
  exports.DxoBubbleComponent = DxoBubbleComponent;
  exports.DxoBubbleModule = DxoBubbleModule;
  exports.DxoButtonOptionsComponent = DxoButtonOptionsComponent;
  exports.DxoButtonOptionsModule = DxoButtonOptionsModule;
  exports.DxoCalendarOptionsComponent = DxoCalendarOptionsComponent;
  exports.DxoCalendarOptionsModule = DxoCalendarOptionsModule;
  exports.DxoCandlestickComponent = DxoCandlestickComponent;
  exports.DxoCandlestickModule = DxoCandlestickModule;
  exports.DxoChartComponent = DxoChartComponent;
  exports.DxoChartModule = DxoChartModule;
  exports.DxoColCountByScreenComponent = DxoColCountByScreenComponent;
  exports.DxoColCountByScreenModule = DxoColCountByScreenModule;
  exports.DxoCollisionComponent = DxoCollisionComponent;
  exports.DxoCollisionModule = DxoCollisionModule;
  exports.DxoColorComponent = DxoColorComponent;
  exports.DxoColorModule = DxoColorModule;
  exports.DxoColorizerComponent = DxoColorizerComponent;
  exports.DxoColorizerModule = DxoColorizerModule;
  exports.DxoColumnChooserComponent = DxoColumnChooserComponent;
  exports.DxoColumnChooserModule = DxoColumnChooserModule;
  exports.DxoColumnFixingComponent = DxoColumnFixingComponent;
  exports.DxoColumnFixingModule = DxoColumnFixingModule;
  exports.DxoCommonAnnotationSettingsComponent = DxoCommonAnnotationSettingsComponent;
  exports.DxoCommonAnnotationSettingsModule = DxoCommonAnnotationSettingsModule;
  exports.DxoCommonAxisSettingsComponent = DxoCommonAxisSettingsComponent;
  exports.DxoCommonAxisSettingsModule = DxoCommonAxisSettingsModule;
  exports.DxoCommonPaneSettingsComponent = DxoCommonPaneSettingsComponent;
  exports.DxoCommonPaneSettingsModule = DxoCommonPaneSettingsModule;
  exports.DxoCommonSeriesSettingsComponent = DxoCommonSeriesSettingsComponent;
  exports.DxoCommonSeriesSettingsModule = DxoCommonSeriesSettingsModule;
  exports.DxoConnectorComponent = DxoConnectorComponent;
  exports.DxoConnectorModule = DxoConnectorModule;
  exports.DxoConstantLineStyleComponent = DxoConstantLineStyleComponent;
  exports.DxoConstantLineStyleModule = DxoConstantLineStyleModule;
  exports.DxoContextMenuComponent = DxoContextMenuComponent;
  exports.DxoContextMenuModule = DxoContextMenuModule;
  exports.DxoContextToolboxComponent = DxoContextToolboxComponent;
  exports.DxoContextToolboxModule = DxoContextToolboxModule;
  exports.DxoControlBarComponent = DxoControlBarComponent;
  exports.DxoControlBarModule = DxoControlBarModule;
  exports.DxoCrosshairComponent = DxoCrosshairComponent;
  exports.DxoCrosshairModule = DxoCrosshairModule;
  exports.DxoCursorOffsetComponent = DxoCursorOffsetComponent;
  exports.DxoCursorOffsetModule = DxoCursorOffsetModule;
  exports.DxoDataPrepareSettingsComponent = DxoDataPrepareSettingsComponent;
  exports.DxoDataPrepareSettingsModule = DxoDataPrepareSettingsModule;
  exports.DxoDataSourceComponent = DxoDataSourceComponent;
  exports.DxoDataSourceModule = DxoDataSourceModule;
  exports.DxoDefaultItemPropertiesComponent = DxoDefaultItemPropertiesComponent;
  exports.DxoDefaultItemPropertiesModule = DxoDefaultItemPropertiesModule;
  exports.DxoDelayComponent = DxoDelayComponent;
  exports.DxoDelayModule = DxoDelayModule;
  exports.DxoDependenciesComponent = DxoDependenciesComponent;
  exports.DxoDependenciesModule = DxoDependenciesModule;
  exports.DxoDetailsComponent = DxoDetailsComponent;
  exports.DxoDetailsModule = DxoDetailsModule;
  exports.DxoDisplayFormatComponent = DxoDisplayFormatComponent;
  exports.DxoDisplayFormatModule = DxoDisplayFormatModule;
  exports.DxoDragBoxStyleComponent = DxoDragBoxStyleComponent;
  exports.DxoDragBoxStyleModule = DxoDragBoxStyleModule;
  exports.DxoDropDownOptionsComponent = DxoDropDownOptionsComponent;
  exports.DxoDropDownOptionsModule = DxoDropDownOptionsModule;
  exports.DxoEdgesComponent = DxoEdgesComponent;
  exports.DxoEdgesModule = DxoEdgesModule;
  exports.DxoEditingComponent = DxoEditingComponent;
  exports.DxoEditingModule = DxoEditingModule;
  exports.DxoExportComponent = DxoExportComponent;
  exports.DxoExportModule = DxoExportModule;
  exports.DxoFieldChooserComponent = DxoFieldChooserComponent;
  exports.DxoFieldChooserModule = DxoFieldChooserModule;
  exports.DxoFieldPanelComponent = DxoFieldPanelComponent;
  exports.DxoFieldPanelModule = DxoFieldPanelModule;
  exports.DxoFileUploaderOptionsComponent = DxoFileUploaderOptionsComponent;
  exports.DxoFileUploaderOptionsModule = DxoFileUploaderOptionsModule;
  exports.DxoFilterBuilderComponent = DxoFilterBuilderComponent;
  exports.DxoFilterBuilderModule = DxoFilterBuilderModule;
  exports.DxoFilterBuilderPopupComponent = DxoFilterBuilderPopupComponent;
  exports.DxoFilterBuilderPopupModule = DxoFilterBuilderPopupModule;
  exports.DxoFilterOperationDescriptionsComponent = DxoFilterOperationDescriptionsComponent;
  exports.DxoFilterOperationDescriptionsModule = DxoFilterOperationDescriptionsModule;
  exports.DxoFilterPanelComponent = DxoFilterPanelComponent;
  exports.DxoFilterPanelModule = DxoFilterPanelModule;
  exports.DxoFilterRowComponent = DxoFilterRowComponent;
  exports.DxoFilterRowModule = DxoFilterRowModule;
  exports.DxoFontComponent = DxoFontComponent;
  exports.DxoFontModule = DxoFontModule;
  exports.DxoFormComponent = DxoFormComponent;
  exports.DxoFormItemComponent = DxoFormItemComponent;
  exports.DxoFormItemModule = DxoFormItemModule;
  exports.DxoFormModule = DxoFormModule;
  exports.DxoFormatComponent = DxoFormatComponent;
  exports.DxoFormatModule = DxoFormatModule;
  exports.DxoFromComponent = DxoFromComponent;
  exports.DxoFromModule = DxoFromModule;
  exports.DxoFullstackedareaComponent = DxoFullstackedareaComponent;
  exports.DxoFullstackedareaModule = DxoFullstackedareaModule;
  exports.DxoFullstackedbarComponent = DxoFullstackedbarComponent;
  exports.DxoFullstackedbarModule = DxoFullstackedbarModule;
  exports.DxoFullstackedlineComponent = DxoFullstackedlineComponent;
  exports.DxoFullstackedlineModule = DxoFullstackedlineModule;
  exports.DxoFullstackedsplineComponent = DxoFullstackedsplineComponent;
  exports.DxoFullstackedsplineModule = DxoFullstackedsplineModule;
  exports.DxoFullstackedsplineareaComponent = DxoFullstackedsplineareaComponent;
  exports.DxoFullstackedsplineareaModule = DxoFullstackedsplineareaModule;
  exports.DxoGeometryComponent = DxoGeometryComponent;
  exports.DxoGeometryModule = DxoGeometryModule;
  exports.DxoGridComponent = DxoGridComponent;
  exports.DxoGridModule = DxoGridModule;
  exports.DxoGridSizeComponent = DxoGridSizeComponent;
  exports.DxoGridSizeModule = DxoGridSizeModule;
  exports.DxoGroupComponent = DxoGroupComponent;
  exports.DxoGroupModule = DxoGroupModule;
  exports.DxoGroupOperationDescriptionsComponent = DxoGroupOperationDescriptionsComponent;
  exports.DxoGroupOperationDescriptionsModule = DxoGroupOperationDescriptionsModule;
  exports.DxoGroupPanelComponent = DxoGroupPanelComponent;
  exports.DxoGroupPanelModule = DxoGroupPanelModule;
  exports.DxoGroupingComponent = DxoGroupingComponent;
  exports.DxoGroupingModule = DxoGroupingModule;
  exports.DxoHatchingComponent = DxoHatchingComponent;
  exports.DxoHatchingModule = DxoHatchingModule;
  exports.DxoHeaderFilterComponent = DxoHeaderFilterComponent;
  exports.DxoHeaderFilterModule = DxoHeaderFilterModule;
  exports.DxoHeightComponent = DxoHeightComponent;
  exports.DxoHeightModule = DxoHeightModule;
  exports.DxoHideComponent = DxoHideComponent;
  exports.DxoHideEventComponent = DxoHideEventComponent;
  exports.DxoHideEventModule = DxoHideEventModule;
  exports.DxoHideModule = DxoHideModule;
  exports.DxoHistoryToolbarComponent = DxoHistoryToolbarComponent;
  exports.DxoHistoryToolbarModule = DxoHistoryToolbarModule;
  exports.DxoHorizontalLineComponent = DxoHorizontalLineComponent;
  exports.DxoHorizontalLineModule = DxoHorizontalLineModule;
  exports.DxoHoverStyleComponent = DxoHoverStyleComponent;
  exports.DxoHoverStyleModule = DxoHoverStyleModule;
  exports.DxoImageComponent = DxoImageComponent;
  exports.DxoImageModule = DxoImageModule;
  exports.DxoImageUploadComponent = DxoImageUploadComponent;
  exports.DxoImageUploadModule = DxoImageUploadModule;
  exports.DxoIndentComponent = DxoIndentComponent;
  exports.DxoIndentModule = DxoIndentModule;
  exports.DxoItemComponent = DxoItemComponent;
  exports.DxoItemDraggingComponent = DxoItemDraggingComponent;
  exports.DxoItemDraggingModule = DxoItemDraggingModule;
  exports.DxoItemModule = DxoItemModule;
  exports.DxoItemTextFormatComponent = DxoItemTextFormatComponent;
  exports.DxoItemTextFormatModule = DxoItemTextFormatModule;
  exports.DxoItemViewComponent = DxoItemViewComponent;
  exports.DxoItemViewModule = DxoItemViewModule;
  exports.DxoKeyboardNavigationComponent = DxoKeyboardNavigationComponent;
  exports.DxoKeyboardNavigationModule = DxoKeyboardNavigationModule;
  exports.DxoLabelComponent = DxoLabelComponent;
  exports.DxoLabelModule = DxoLabelModule;
  exports.DxoLegendComponent = DxoLegendComponent;
  exports.DxoLegendModule = DxoLegendModule;
  exports.DxoLineComponent = DxoLineComponent;
  exports.DxoLineModule = DxoLineModule;
  exports.DxoLinkComponent = DxoLinkComponent;
  exports.DxoLinkModule = DxoLinkModule;
  exports.DxoLoadPanelComponent = DxoLoadPanelComponent;
  exports.DxoLoadPanelModule = DxoLoadPanelModule;
  exports.DxoLoadingIndicatorComponent = DxoLoadingIndicatorComponent;
  exports.DxoLoadingIndicatorModule = DxoLoadingIndicatorModule;
  exports.DxoLookupComponent = DxoLookupComponent;
  exports.DxoLookupModule = DxoLookupModule;
  exports.DxoMainToolbarComponent = DxoMainToolbarComponent;
  exports.DxoMainToolbarModule = DxoMainToolbarModule;
  exports.DxoMarginComponent = DxoMarginComponent;
  exports.DxoMarginModule = DxoMarginModule;
  exports.DxoMarkerComponent = DxoMarkerComponent;
  exports.DxoMarkerModule = DxoMarkerModule;
  exports.DxoMasterDetailComponent = DxoMasterDetailComponent;
  exports.DxoMasterDetailModule = DxoMasterDetailModule;
  exports.DxoMaxRangeComponent = DxoMaxRangeComponent;
  exports.DxoMaxRangeModule = DxoMaxRangeModule;
  exports.DxoMediaResizingComponent = DxoMediaResizingComponent;
  exports.DxoMediaResizingModule = DxoMediaResizingModule;
  exports.DxoMinRangeComponent = DxoMinRangeComponent;
  exports.DxoMinRangeModule = DxoMinRangeModule;
  exports.DxoMinVisualRangeLengthComponent = DxoMinVisualRangeLengthComponent;
  exports.DxoMinVisualRangeLengthModule = DxoMinVisualRangeLengthModule;
  exports.DxoMinorGridComponent = DxoMinorGridComponent;
  exports.DxoMinorGridModule = DxoMinorGridModule;
  exports.DxoMinorTickComponent = DxoMinorTickComponent;
  exports.DxoMinorTickIntervalComponent = DxoMinorTickIntervalComponent;
  exports.DxoMinorTickIntervalModule = DxoMinorTickIntervalModule;
  exports.DxoMinorTickModule = DxoMinorTickModule;
  exports.DxoMyComponent = DxoMyComponent;
  exports.DxoMyModule = DxoMyModule;
  exports.DxoNodeComponent = DxoNodeComponent;
  exports.DxoNodeModule = DxoNodeModule;
  exports.DxoNodesComponent = DxoNodesComponent;
  exports.DxoNodesModule = DxoNodesModule;
  exports.DxoNotificationsComponent = DxoNotificationsComponent;
  exports.DxoNotificationsModule = DxoNotificationsModule;
  exports.DxoOffsetComponent = DxoOffsetComponent;
  exports.DxoOffsetModule = DxoOffsetModule;
  exports.DxoOperationDescriptionsComponent = DxoOperationDescriptionsComponent;
  exports.DxoOperationDescriptionsModule = DxoOperationDescriptionsModule;
  exports.DxoOptionsComponent = DxoOptionsComponent;
  exports.DxoOptionsModule = DxoOptionsModule;
  exports.DxoPageSizeComponent = DxoPageSizeComponent;
  exports.DxoPageSizeModule = DxoPageSizeModule;
  exports.DxoPagerComponent = DxoPagerComponent;
  exports.DxoPagerModule = DxoPagerModule;
  exports.DxoPagingComponent = DxoPagingComponent;
  exports.DxoPagingModule = DxoPagingModule;
  exports.DxoPermissionsComponent = DxoPermissionsComponent;
  exports.DxoPermissionsModule = DxoPermissionsModule;
  exports.DxoPointComponent = DxoPointComponent;
  exports.DxoPointModule = DxoPointModule;
  exports.DxoPopupComponent = DxoPopupComponent;
  exports.DxoPopupModule = DxoPopupModule;
  exports.DxoPositionComponent = DxoPositionComponent;
  exports.DxoPositionModule = DxoPositionModule;
  exports.DxoProjectionComponent = DxoProjectionComponent;
  exports.DxoProjectionModule = DxoProjectionModule;
  exports.DxoPropertiesPanelComponent = DxoPropertiesPanelComponent;
  exports.DxoPropertiesPanelModule = DxoPropertiesPanelModule;
  exports.DxoRangeContainerComponent = DxoRangeContainerComponent;
  exports.DxoRangeContainerModule = DxoRangeContainerModule;
  exports.DxoRangeareaComponent = DxoRangeareaComponent;
  exports.DxoRangeareaModule = DxoRangeareaModule;
  exports.DxoRangebarComponent = DxoRangebarComponent;
  exports.DxoRangebarModule = DxoRangebarModule;
  exports.DxoReductionComponent = DxoReductionComponent;
  exports.DxoReductionModule = DxoReductionModule;
  exports.DxoRemoteOperationsComponent = DxoRemoteOperationsComponent;
  exports.DxoRemoteOperationsModule = DxoRemoteOperationsModule;
  exports.DxoResourceAssignmentsComponent = DxoResourceAssignmentsComponent;
  exports.DxoResourceAssignmentsModule = DxoResourceAssignmentsModule;
  exports.DxoResourcesComponent = DxoResourcesComponent;
  exports.DxoResourcesModule = DxoResourcesModule;
  exports.DxoRowDraggingComponent = DxoRowDraggingComponent;
  exports.DxoRowDraggingModule = DxoRowDraggingModule;
  exports.DxoScaleComponent = DxoScaleComponent;
  exports.DxoScaleModule = DxoScaleModule;
  exports.DxoScaleTypeRangeComponent = DxoScaleTypeRangeComponent;
  exports.DxoScaleTypeRangeModule = DxoScaleTypeRangeModule;
  exports.DxoScatterComponent = DxoScatterComponent;
  exports.DxoScatterModule = DxoScatterModule;
  exports.DxoScrollBarComponent = DxoScrollBarComponent;
  exports.DxoScrollBarModule = DxoScrollBarModule;
  exports.DxoScrollingComponent = DxoScrollingComponent;
  exports.DxoScrollingModule = DxoScrollingModule;
  exports.DxoSearchComponent = DxoSearchComponent;
  exports.DxoSearchEditorOptionsComponent = DxoSearchEditorOptionsComponent;
  exports.DxoSearchEditorOptionsModule = DxoSearchEditorOptionsModule;
  exports.DxoSearchModule = DxoSearchModule;
  exports.DxoSearchPanelComponent = DxoSearchPanelComponent;
  exports.DxoSearchPanelModule = DxoSearchPanelModule;
  exports.DxoSelectionComponent = DxoSelectionComponent;
  exports.DxoSelectionModule = DxoSelectionModule;
  exports.DxoSelectionStyleComponent = DxoSelectionStyleComponent;
  exports.DxoSelectionStyleModule = DxoSelectionStyleModule;
  exports.DxoSeriesTemplateComponent = DxoSeriesTemplateComponent;
  exports.DxoSeriesTemplateModule = DxoSeriesTemplateModule;
  exports.DxoShadowComponent = DxoShadowComponent;
  exports.DxoShadowModule = DxoShadowModule;
  exports.DxoShowComponent = DxoShowComponent;
  exports.DxoShowEventComponent = DxoShowEventComponent;
  exports.DxoShowEventModule = DxoShowEventModule;
  exports.DxoShowFirstSubmenuModeComponent = DxoShowFirstSubmenuModeComponent;
  exports.DxoShowFirstSubmenuModeModule = DxoShowFirstSubmenuModeModule;
  exports.DxoShowModule = DxoShowModule;
  exports.DxoShowSubmenuModeComponent = DxoShowSubmenuModeComponent;
  exports.DxoShowSubmenuModeModule = DxoShowSubmenuModeModule;
  exports.DxoShutterComponent = DxoShutterComponent;
  exports.DxoShutterModule = DxoShutterModule;
  exports.DxoSizeComponent = DxoSizeComponent;
  exports.DxoSizeModule = DxoSizeModule;
  exports.DxoSliderHandleComponent = DxoSliderHandleComponent;
  exports.DxoSliderHandleModule = DxoSliderHandleModule;
  exports.DxoSliderMarkerComponent = DxoSliderMarkerComponent;
  exports.DxoSliderMarkerModule = DxoSliderMarkerModule;
  exports.DxoSmallValuesGroupingComponent = DxoSmallValuesGroupingComponent;
  exports.DxoSmallValuesGroupingModule = DxoSmallValuesGroupingModule;
  exports.DxoSortingComponent = DxoSortingComponent;
  exports.DxoSortingModule = DxoSortingModule;
  exports.DxoSourceComponent = DxoSourceComponent;
  exports.DxoSourceModule = DxoSourceModule;
  exports.DxoSplineComponent = DxoSplineComponent;
  exports.DxoSplineModule = DxoSplineModule;
  exports.DxoSplineareaComponent = DxoSplineareaComponent;
  exports.DxoSplineareaModule = DxoSplineareaModule;
  exports.DxoStackedareaComponent = DxoStackedareaComponent;
  exports.DxoStackedareaModule = DxoStackedareaModule;
  exports.DxoStackedbarComponent = DxoStackedbarComponent;
  exports.DxoStackedbarModule = DxoStackedbarModule;
  exports.DxoStackedlineComponent = DxoStackedlineComponent;
  exports.DxoStackedlineModule = DxoStackedlineModule;
  exports.DxoStackedsplineComponent = DxoStackedsplineComponent;
  exports.DxoStackedsplineModule = DxoStackedsplineModule;
  exports.DxoStackedsplineareaComponent = DxoStackedsplineareaComponent;
  exports.DxoStackedsplineareaModule = DxoStackedsplineareaModule;
  exports.DxoStateStoringComponent = DxoStateStoringComponent;
  exports.DxoStateStoringModule = DxoStateStoringModule;
  exports.DxoStepareaComponent = DxoStepareaComponent;
  exports.DxoStepareaModule = DxoStepareaModule;
  exports.DxoSteplineComponent = DxoSteplineComponent;
  exports.DxoSteplineModule = DxoSteplineModule;
  exports.DxoStockComponent = DxoStockComponent;
  exports.DxoStockModule = DxoStockModule;
  exports.DxoStoreComponent = DxoStoreComponent;
  exports.DxoStoreModule = DxoStoreModule;
  exports.DxoStripStyleComponent = DxoStripStyleComponent;
  exports.DxoStripStyleModule = DxoStripStyleModule;
  exports.DxoSubtitleComponent = DxoSubtitleComponent;
  exports.DxoSubtitleModule = DxoSubtitleModule;
  exports.DxoSubvalueIndicatorComponent = DxoSubvalueIndicatorComponent;
  exports.DxoSubvalueIndicatorModule = DxoSubvalueIndicatorModule;
  exports.DxoSummaryComponent = DxoSummaryComponent;
  exports.DxoSummaryModule = DxoSummaryModule;
  exports.DxoTabPanelOptionsComponent = DxoTabPanelOptionsComponent;
  exports.DxoTabPanelOptionsModule = DxoTabPanelOptionsModule;
  exports.DxoTableContextMenuComponent = DxoTableContextMenuComponent;
  exports.DxoTableContextMenuModule = DxoTableContextMenuModule;
  exports.DxoTableResizingComponent = DxoTableResizingComponent;
  exports.DxoTableResizingModule = DxoTableResizingModule;
  exports.DxoTasksComponent = DxoTasksComponent;
  exports.DxoTasksModule = DxoTasksModule;
  exports.DxoTextComponent = DxoTextComponent;
  exports.DxoTextModule = DxoTextModule;
  exports.DxoTextsComponent = DxoTextsComponent;
  exports.DxoTextsModule = DxoTextsModule;
  exports.DxoTickComponent = DxoTickComponent;
  exports.DxoTickIntervalComponent = DxoTickIntervalComponent;
  exports.DxoTickIntervalModule = DxoTickIntervalModule;
  exports.DxoTickModule = DxoTickModule;
  exports.DxoTileComponent = DxoTileComponent;
  exports.DxoTileModule = DxoTileModule;
  exports.DxoTitleComponent = DxoTitleComponent;
  exports.DxoTitleModule = DxoTitleModule;
  exports.DxoToComponent = DxoToComponent;
  exports.DxoToModule = DxoToModule;
  exports.DxoToolbarComponent = DxoToolbarComponent;
  exports.DxoToolbarModule = DxoToolbarModule;
  exports.DxoToolboxComponent = DxoToolboxComponent;
  exports.DxoToolboxModule = DxoToolboxModule;
  exports.DxoTooltipComponent = DxoTooltipComponent;
  exports.DxoTooltipModule = DxoTooltipModule;
  exports.DxoUploadComponent = DxoUploadComponent;
  exports.DxoUploadModule = DxoUploadModule;
  exports.DxoUrlComponent = DxoUrlComponent;
  exports.DxoUrlModule = DxoUrlModule;
  exports.DxoValidationComponent = DxoValidationComponent;
  exports.DxoValidationModule = DxoValidationModule;
  exports.DxoValueAxisComponent = DxoValueAxisComponent;
  exports.DxoValueAxisModule = DxoValueAxisModule;
  exports.DxoValueErrorBarComponent = DxoValueErrorBarComponent;
  exports.DxoValueErrorBarModule = DxoValueErrorBarModule;
  exports.DxoValueFormatComponent = DxoValueFormatComponent;
  exports.DxoValueFormatModule = DxoValueFormatModule;
  exports.DxoValueIndicatorComponent = DxoValueIndicatorComponent;
  exports.DxoValueIndicatorModule = DxoValueIndicatorModule;
  exports.DxoVariablesComponent = DxoVariablesComponent;
  exports.DxoVariablesModule = DxoVariablesModule;
  exports.DxoVerticalLineComponent = DxoVerticalLineComponent;
  exports.DxoVerticalLineModule = DxoVerticalLineModule;
  exports.DxoViewToolbarComponent = DxoViewToolbarComponent;
  exports.DxoViewToolbarModule = DxoViewToolbarModule;
  exports.DxoWidthComponent = DxoWidthComponent;
  exports.DxoWidthModule = DxoWidthModule;
  exports.DxoZoomAndPanComponent = DxoZoomAndPanComponent;
  exports.DxoZoomAndPanModule = DxoZoomAndPanModule;
  exports.DxoZoomLevelComponent = DxoZoomLevelComponent;
  exports.DxoZoomLevelModule = DxoZoomLevelModule;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=devextreme-angular-ui-nested.umd.js.map
