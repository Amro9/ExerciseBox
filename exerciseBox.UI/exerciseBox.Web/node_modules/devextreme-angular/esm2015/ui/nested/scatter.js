/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoChartCommonSeriesSettings } from './base/chart-common-series-settings';
import * as i0 from "@angular/core";
import * as i1 from "devextreme-angular/core";
export class DxoScatterComponent extends DxoChartCommonSeriesSettings {
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get _optionPath() {
        return 'scatter';
    }
    ngOnInit() {
        this._addRecreatedComponent();
    }
    ngOnDestroy() {
        this._addRemovedOption(this._getOptionPath());
    }
}
/** @nocollapse */ DxoScatterComponent.ɵfac = function DxoScatterComponent_Factory(t) { return new (t || DxoScatterComponent)(i0.ɵɵdirectiveInject(i1.NestedOptionHost, 5), i0.ɵɵdirectiveInject(i1.NestedOptionHost, 1)); };
/** @nocollapse */ DxoScatterComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DxoScatterComponent, selectors: [["dxo-scatter"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width", closed: "closed" }, features: [i0.ɵɵProvidersFeature([NestedOptionHost]), i0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoScatterComponent_Template(rf, ctx) { }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DxoScatterComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-scatter',
                template: '',
                styles: [''],
                providers: [NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width',
                    'closed'
                ]
            }]
    }], function () { return [{ type: i1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: i1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
export class DxoScatterModule {
}
/** @nocollapse */ DxoScatterModule.ɵfac = function DxoScatterModule_Factory(t) { return new (t || DxoScatterModule)(); };
/** @nocollapse */ DxoScatterModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: DxoScatterModule });
/** @nocollapse */ DxoScatterModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DxoScatterModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoScatterComponent
                ],
                exports: [
                    DxoScatterComponent
                ],
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxoScatterModule, { declarations: [DxoScatterComponent], exports: [DxoScatterComponent] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NhdHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2Rpc3QvdWkvbmVzdGVkL3NjYXR0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0dBV0c7QUFFSCxvQ0FBb0M7QUFFcEMsaURBQWlEO0FBRWpELE9BQU8sRUFDSCxTQUFTLEVBR1QsUUFBUSxFQUNSLElBQUksRUFDSixRQUFRLEVBQ1gsTUFBTSxlQUFlLENBQUM7QUFNdkIsT0FBTyxFQUNILGdCQUFnQixHQUNuQixNQUFNLHlCQUF5QixDQUFDO0FBQ2pDLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDOzs7QUF5RW5GLE1BQU0sT0FBTyxtQkFBb0IsU0FBUSw0QkFBNEI7SUFPakUsWUFBZ0MsZ0JBQWtDLEVBQ2xELFVBQTRCO1FBQ3hDLEtBQUssRUFBRSxDQUFDO1FBQ1IsZ0JBQWdCLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLFVBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQVZELElBQWMsV0FBVztRQUNyQixPQUFPLFNBQVMsQ0FBQztJQUNyQixDQUFDO0lBV0QsUUFBUTtRQUNKLElBQUksQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO0lBQ2xDLENBQUM7SUFFRCxXQUFXO1FBQ1AsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO0lBQ2xELENBQUM7O3lHQXJCUSxtQkFBbUI7cUdBQW5CLG1CQUFtQix1cERBbEVqQixDQUFDLGdCQUFnQixDQUFDO3VGQWtFcEIsbUJBQW1CO2NBdEUvQixTQUFTO2VBQUM7Z0JBQ1AsUUFBUSxFQUFFLGFBQWE7Z0JBQ3ZCLFFBQVEsRUFBRSxFQUFFO2dCQUNaLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQztnQkFDWixTQUFTLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztnQkFDN0IsTUFBTSxFQUFFO29CQUNKLGFBQWE7b0JBQ2IsTUFBTTtvQkFDTixlQUFlO29CQUNmLE1BQU07b0JBQ04sS0FBSztvQkFDTCxpQkFBaUI7b0JBQ2pCLFlBQVk7b0JBQ1osVUFBVTtvQkFDVixRQUFRO29CQUNSLFFBQVE7b0JBQ1IsYUFBYTtvQkFDYixpQkFBaUI7b0JBQ2pCLE9BQU87b0JBQ1AsY0FBYztvQkFDZCxXQUFXO29CQUNYLGlCQUFpQjtvQkFDakIsZ0JBQWdCO29CQUNoQixpQkFBaUI7b0JBQ2pCLG1CQUFtQjtvQkFDbkIsdUJBQXVCO29CQUN2QixnQkFBZ0I7b0JBQ2hCLFdBQVc7b0JBQ1gsWUFBWTtvQkFDWixtQkFBbUI7b0JBQ25CLFlBQVk7b0JBQ1osT0FBTztvQkFDUCxNQUFNO29CQUNOLGVBQWU7b0JBQ2YsZUFBZTtvQkFDZixZQUFZO29CQUNaLFNBQVM7b0JBQ1QsZ0JBQWdCO29CQUNoQixNQUFNO29CQUNOLE9BQU87b0JBQ1AsV0FBVztvQkFDWCxVQUFVO29CQUNWLGtCQUFrQjtvQkFDbEIsa0JBQWtCO29CQUNsQixXQUFXO29CQUNYLFNBQVM7b0JBQ1QsZUFBZTtvQkFDZixnQkFBZ0I7b0JBQ2hCLGNBQWM7b0JBQ2QsV0FBVztvQkFDWCxRQUFRO29CQUNSLFlBQVk7b0JBQ1osT0FBTztvQkFDUCxhQUFhO29CQUNiLFlBQVk7b0JBQ1osYUFBYTtvQkFDYixlQUFlO29CQUNmLG1CQUFtQjtvQkFDbkIsVUFBVTtvQkFDVixVQUFVO29CQUNWLE9BQU87b0JBQ1AsVUFBVTtvQkFDVixNQUFNO29CQUNOLGVBQWU7b0JBQ2YsWUFBWTtvQkFDWixTQUFTO29CQUNULE9BQU87b0JBQ1AsUUFBUTtpQkFDWDthQUNKOztzQkFRZ0IsUUFBUTs7c0JBQUksSUFBSTs7c0JBQ3BCLElBQUk7O0FBMEJqQixNQUFNLE9BQU8sZ0JBQWdCOzttR0FBaEIsZ0JBQWdCO2lHQUFoQixnQkFBZ0I7O3VGQUFoQixnQkFBZ0I7Y0FSNUIsUUFBUTtlQUFDO2dCQUNSLFlBQVksRUFBRTtvQkFDWixtQkFBbUI7aUJBQ3BCO2dCQUNELE9BQU8sRUFBRTtvQkFDUCxtQkFBbUI7aUJBQ3BCO2FBQ0Y7O3dGQUNZLGdCQUFnQixtQkFsQ2hCLG1CQUFtQixhQUFuQixtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxuICogVmVyc2lvbjogMjMuMi40XG4gKiBCdWlsZCBkYXRlOiBNb24gSmFuIDI5IDIwMjRcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgLSAyMDI0IERldmVsb3BlciBFeHByZXNzIEluYy4gQUxMIFJJR0hUUyBSRVNFUlZFRFxuICpcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcbiAqIG9mIHRoZSBNSVQgbGljZW5zZS4gU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QgZm9yIGRldGFpbHMuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXG4gKi9cblxuLyogdHNsaW50OmRpc2FibGU6bWF4LWxpbmUtbGVuZ3RoICovXG5cbi8qIHRzbGludDpkaXNhYmxlOnVzZS1pbnB1dC1wcm9wZXJ0eS1kZWNvcmF0b3IgKi9cblxuaW1wb3J0IHtcbiAgICBDb21wb25lbnQsXG4gICAgT25Jbml0LFxuICAgIE9uRGVzdHJveSxcbiAgICBOZ01vZHVsZSxcbiAgICBIb3N0LFxuICAgIFNraXBTZWxmXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5cblxuXG5cbmltcG9ydCB7XG4gICAgTmVzdGVkT3B0aW9uSG9zdCxcbn0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRHhvQ2hhcnRDb21tb25TZXJpZXNTZXR0aW5ncyB9IGZyb20gJy4vYmFzZS9jaGFydC1jb21tb24tc2VyaWVzLXNldHRpbmdzJztcblxuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2R4by1zY2F0dGVyJyxcbiAgICB0ZW1wbGF0ZTogJycsXG4gICAgc3R5bGVzOiBbJyddLFxuICAgIHByb3ZpZGVyczogW05lc3RlZE9wdGlvbkhvc3RdLFxuICAgIGlucHV0czogW1xuICAgICAgICAnYWdncmVnYXRpb24nLFxuICAgICAgICAnYXJlYScsXG4gICAgICAgICdhcmd1bWVudEZpZWxkJyxcbiAgICAgICAgJ2F4aXMnLFxuICAgICAgICAnYmFyJyxcbiAgICAgICAgJ2Jhck92ZXJsYXBHcm91cCcsXG4gICAgICAgICdiYXJQYWRkaW5nJyxcbiAgICAgICAgJ2JhcldpZHRoJyxcbiAgICAgICAgJ2JvcmRlcicsXG4gICAgICAgICdidWJibGUnLFxuICAgICAgICAnY2FuZGxlc3RpY2snLFxuICAgICAgICAnY2xvc2VWYWx1ZUZpZWxkJyxcbiAgICAgICAgJ2NvbG9yJyxcbiAgICAgICAgJ2Nvcm5lclJhZGl1cycsXG4gICAgICAgICdkYXNoU3R5bGUnLFxuICAgICAgICAnZnVsbHN0YWNrZWRhcmVhJyxcbiAgICAgICAgJ2Z1bGxzdGFja2VkYmFyJyxcbiAgICAgICAgJ2Z1bGxzdGFja2VkbGluZScsXG4gICAgICAgICdmdWxsc3RhY2tlZHNwbGluZScsXG4gICAgICAgICdmdWxsc3RhY2tlZHNwbGluZWFyZWEnLFxuICAgICAgICAnaGlnaFZhbHVlRmllbGQnLFxuICAgICAgICAnaG92ZXJNb2RlJyxcbiAgICAgICAgJ2hvdmVyU3R5bGUnLFxuICAgICAgICAnaWdub3JlRW1wdHlQb2ludHMnLFxuICAgICAgICAnaW5uZXJDb2xvcicsXG4gICAgICAgICdsYWJlbCcsXG4gICAgICAgICdsaW5lJyxcbiAgICAgICAgJ2xvd1ZhbHVlRmllbGQnLFxuICAgICAgICAnbWF4TGFiZWxDb3VudCcsXG4gICAgICAgICdtaW5CYXJTaXplJyxcbiAgICAgICAgJ29wYWNpdHknLFxuICAgICAgICAnb3BlblZhbHVlRmllbGQnLFxuICAgICAgICAncGFuZScsXG4gICAgICAgICdwb2ludCcsXG4gICAgICAgICdyYW5nZWFyZWEnLFxuICAgICAgICAncmFuZ2ViYXInLFxuICAgICAgICAncmFuZ2VWYWx1ZTFGaWVsZCcsXG4gICAgICAgICdyYW5nZVZhbHVlMkZpZWxkJyxcbiAgICAgICAgJ3JlZHVjdGlvbicsXG4gICAgICAgICdzY2F0dGVyJyxcbiAgICAgICAgJ3NlbGVjdGlvbk1vZGUnLFxuICAgICAgICAnc2VsZWN0aW9uU3R5bGUnLFxuICAgICAgICAnc2hvd0luTGVnZW5kJyxcbiAgICAgICAgJ3NpemVGaWVsZCcsXG4gICAgICAgICdzcGxpbmUnLFxuICAgICAgICAnc3BsaW5lYXJlYScsXG4gICAgICAgICdzdGFjaycsXG4gICAgICAgICdzdGFja2VkYXJlYScsXG4gICAgICAgICdzdGFja2VkYmFyJyxcbiAgICAgICAgJ3N0YWNrZWRsaW5lJyxcbiAgICAgICAgJ3N0YWNrZWRzcGxpbmUnLFxuICAgICAgICAnc3RhY2tlZHNwbGluZWFyZWEnLFxuICAgICAgICAnc3RlcGFyZWEnLFxuICAgICAgICAnc3RlcGxpbmUnLFxuICAgICAgICAnc3RvY2snLFxuICAgICAgICAndGFnRmllbGQnLFxuICAgICAgICAndHlwZScsXG4gICAgICAgICd2YWx1ZUVycm9yQmFyJyxcbiAgICAgICAgJ3ZhbHVlRmllbGQnLFxuICAgICAgICAndmlzaWJsZScsXG4gICAgICAgICd3aWR0aCcsXG4gICAgICAgICdjbG9zZWQnXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBEeG9TY2F0dGVyQ29tcG9uZW50IGV4dGVuZHMgRHhvQ2hhcnRDb21tb25TZXJpZXNTZXR0aW5ncyBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0ICB7XG5cbiAgICBwcm90ZWN0ZWQgZ2V0IF9vcHRpb25QYXRoKCkge1xuICAgICAgICByZXR1cm4gJ3NjYXR0ZXInO1xuICAgIH1cblxuXG4gICAgY29uc3RydWN0b3IoQFNraXBTZWxmKCkgQEhvc3QoKSBwYXJlbnRPcHRpb25Ib3N0OiBOZXN0ZWRPcHRpb25Ib3N0LFxuICAgICAgICAgICAgQEhvc3QoKSBvcHRpb25Ib3N0OiBOZXN0ZWRPcHRpb25Ib3N0KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHBhcmVudE9wdGlvbkhvc3Quc2V0TmVzdGVkT3B0aW9uKHRoaXMpO1xuICAgICAgICBvcHRpb25Ib3N0LnNldEhvc3QodGhpcywgdGhpcy5fZnVsbE9wdGlvblBhdGguYmluZCh0aGlzKSk7XG4gICAgfVxuXG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5fYWRkUmVjcmVhdGVkQ29tcG9uZW50KCk7XG4gICAgfVxuXG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuX2FkZFJlbW92ZWRPcHRpb24odGhpcy5fZ2V0T3B0aW9uUGF0aCgpKTtcbiAgICB9XG5cblxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBEeG9TY2F0dGVyQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBEeG9TY2F0dGVyQ29tcG9uZW50XG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIER4b1NjYXR0ZXJNb2R1bGUgeyB9XG4iXX0=