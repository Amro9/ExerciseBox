/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoChartCommonSeriesSettings } from './base/chart-common-series-settings';
import * as i0 from "@angular/core";
import * as i1 from "devextreme-angular/core";
export class DxoCandlestickComponent extends DxoChartCommonSeriesSettings {
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get _optionPath() {
        return 'candlestick';
    }
    ngOnInit() {
        this._addRecreatedComponent();
    }
    ngOnDestroy() {
        this._addRemovedOption(this._getOptionPath());
    }
}
/** @nocollapse */ DxoCandlestickComponent.ɵfac = function DxoCandlestickComponent_Factory(t) { return new (t || DxoCandlestickComponent)(i0.ɵɵdirectiveInject(i1.NestedOptionHost, 5), i0.ɵɵdirectiveInject(i1.NestedOptionHost, 1)); };
/** @nocollapse */ DxoCandlestickComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DxoCandlestickComponent, selectors: [["dxo-candlestick"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0.ɵɵProvidersFeature([NestedOptionHost]), i0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoCandlestickComponent_Template(rf, ctx) { }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DxoCandlestickComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-candlestick',
                template: '',
                styles: [''],
                providers: [NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ]
            }]
    }], function () { return [{ type: i1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: i1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
export class DxoCandlestickModule {
}
/** @nocollapse */ DxoCandlestickModule.ɵfac = function DxoCandlestickModule_Factory(t) { return new (t || DxoCandlestickModule)(); };
/** @nocollapse */ DxoCandlestickModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: DxoCandlestickModule });
/** @nocollapse */ DxoCandlestickModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DxoCandlestickModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoCandlestickComponent
                ],
                exports: [
                    DxoCandlestickComponent
                ],
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxoCandlestickModule, { declarations: [DxoCandlestickComponent], exports: [DxoCandlestickComponent] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FuZGxlc3RpY2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9kaXN0L3VpL25lc3RlZC9jYW5kbGVzdGljay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7R0FXRztBQUVILG9DQUFvQztBQUVwQyxpREFBaUQ7QUFFakQsT0FBTyxFQUNILFNBQVMsRUFHVCxRQUFRLEVBQ1IsSUFBSSxFQUNKLFFBQVEsRUFDWCxNQUFNLGVBQWUsQ0FBQztBQU12QixPQUFPLEVBQ0gsZ0JBQWdCLEdBQ25CLE1BQU0seUJBQXlCLENBQUM7QUFDakMsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0scUNBQXFDLENBQUM7OztBQXdFbkYsTUFBTSxPQUFPLHVCQUF3QixTQUFRLDRCQUE0QjtJQU9yRSxZQUFnQyxnQkFBa0MsRUFDbEQsVUFBNEI7UUFDeEMsS0FBSyxFQUFFLENBQUM7UUFDUixnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBVkQsSUFBYyxXQUFXO1FBQ3JCLE9BQU8sYUFBYSxDQUFDO0lBQ3pCLENBQUM7SUFXRCxRQUFRO1FBQ0osSUFBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7SUFDbEMsQ0FBQztJQUVELFdBQVc7UUFDUCxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7aUhBckJRLHVCQUF1Qjt5R0FBdkIsdUJBQXVCLHlvREFqRXJCLENBQUMsZ0JBQWdCLENBQUM7dUZBaUVwQix1QkFBdUI7Y0FyRW5DLFNBQVM7ZUFBQztnQkFDUCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixRQUFRLEVBQUUsRUFBRTtnQkFDWixNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7Z0JBQ1osU0FBUyxFQUFFLENBQUMsZ0JBQWdCLENBQUM7Z0JBQzdCLE1BQU0sRUFBRTtvQkFDSixhQUFhO29CQUNiLE1BQU07b0JBQ04sZUFBZTtvQkFDZixNQUFNO29CQUNOLEtBQUs7b0JBQ0wsaUJBQWlCO29CQUNqQixZQUFZO29CQUNaLFVBQVU7b0JBQ1YsUUFBUTtvQkFDUixRQUFRO29CQUNSLGFBQWE7b0JBQ2IsaUJBQWlCO29CQUNqQixPQUFPO29CQUNQLGNBQWM7b0JBQ2QsV0FBVztvQkFDWCxpQkFBaUI7b0JBQ2pCLGdCQUFnQjtvQkFDaEIsaUJBQWlCO29CQUNqQixtQkFBbUI7b0JBQ25CLHVCQUF1QjtvQkFDdkIsZ0JBQWdCO29CQUNoQixXQUFXO29CQUNYLFlBQVk7b0JBQ1osbUJBQW1CO29CQUNuQixZQUFZO29CQUNaLE9BQU87b0JBQ1AsTUFBTTtvQkFDTixlQUFlO29CQUNmLGVBQWU7b0JBQ2YsWUFBWTtvQkFDWixTQUFTO29CQUNULGdCQUFnQjtvQkFDaEIsTUFBTTtvQkFDTixPQUFPO29CQUNQLFdBQVc7b0JBQ1gsVUFBVTtvQkFDVixrQkFBa0I7b0JBQ2xCLGtCQUFrQjtvQkFDbEIsV0FBVztvQkFDWCxTQUFTO29CQUNULGVBQWU7b0JBQ2YsZ0JBQWdCO29CQUNoQixjQUFjO29CQUNkLFdBQVc7b0JBQ1gsUUFBUTtvQkFDUixZQUFZO29CQUNaLE9BQU87b0JBQ1AsYUFBYTtvQkFDYixZQUFZO29CQUNaLGFBQWE7b0JBQ2IsZUFBZTtvQkFDZixtQkFBbUI7b0JBQ25CLFVBQVU7b0JBQ1YsVUFBVTtvQkFDVixPQUFPO29CQUNQLFVBQVU7b0JBQ1YsTUFBTTtvQkFDTixlQUFlO29CQUNmLFlBQVk7b0JBQ1osU0FBUztvQkFDVCxPQUFPO2lCQUNWO2FBQ0o7O3NCQVFnQixRQUFROztzQkFBSSxJQUFJOztzQkFDcEIsSUFBSTs7QUEwQmpCLE1BQU0sT0FBTyxvQkFBb0I7OzJHQUFwQixvQkFBb0I7cUdBQXBCLG9CQUFvQjs7dUZBQXBCLG9CQUFvQjtjQVJoQyxRQUFRO2VBQUM7Z0JBQ1IsWUFBWSxFQUFFO29CQUNaLHVCQUF1QjtpQkFDeEI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLHVCQUF1QjtpQkFDeEI7YUFDRjs7d0ZBQ1ksb0JBQW9CLG1CQWxDcEIsdUJBQXVCLGFBQXZCLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXG4gKiBWZXJzaW9uOiAyMy4yLjRcbiAqIEJ1aWxkIGRhdGU6IE1vbiBKYW4gMjkgMjAyNFxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjQgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcbiAqL1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cblxuLyogdHNsaW50OmRpc2FibGU6dXNlLWlucHV0LXByb3BlcnR5LWRlY29yYXRvciAqL1xuXG5pbXBvcnQge1xuICAgIENvbXBvbmVudCxcbiAgICBPbkluaXQsXG4gICAgT25EZXN0cm95LFxuICAgIE5nTW9kdWxlLFxuICAgIEhvc3QsXG4gICAgU2tpcFNlbGZcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cblxuXG5cblxuaW1wb3J0IHtcbiAgICBOZXN0ZWRPcHRpb25Ib3N0LFxufSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEeG9DaGFydENvbW1vblNlcmllc1NldHRpbmdzIH0gZnJvbSAnLi9iYXNlL2NoYXJ0LWNvbW1vbi1zZXJpZXMtc2V0dGluZ3MnO1xuXG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnZHhvLWNhbmRsZXN0aWNrJyxcbiAgICB0ZW1wbGF0ZTogJycsXG4gICAgc3R5bGVzOiBbJyddLFxuICAgIHByb3ZpZGVyczogW05lc3RlZE9wdGlvbkhvc3RdLFxuICAgIGlucHV0czogW1xuICAgICAgICAnYWdncmVnYXRpb24nLFxuICAgICAgICAnYXJlYScsXG4gICAgICAgICdhcmd1bWVudEZpZWxkJyxcbiAgICAgICAgJ2F4aXMnLFxuICAgICAgICAnYmFyJyxcbiAgICAgICAgJ2Jhck92ZXJsYXBHcm91cCcsXG4gICAgICAgICdiYXJQYWRkaW5nJyxcbiAgICAgICAgJ2JhcldpZHRoJyxcbiAgICAgICAgJ2JvcmRlcicsXG4gICAgICAgICdidWJibGUnLFxuICAgICAgICAnY2FuZGxlc3RpY2snLFxuICAgICAgICAnY2xvc2VWYWx1ZUZpZWxkJyxcbiAgICAgICAgJ2NvbG9yJyxcbiAgICAgICAgJ2Nvcm5lclJhZGl1cycsXG4gICAgICAgICdkYXNoU3R5bGUnLFxuICAgICAgICAnZnVsbHN0YWNrZWRhcmVhJyxcbiAgICAgICAgJ2Z1bGxzdGFja2VkYmFyJyxcbiAgICAgICAgJ2Z1bGxzdGFja2VkbGluZScsXG4gICAgICAgICdmdWxsc3RhY2tlZHNwbGluZScsXG4gICAgICAgICdmdWxsc3RhY2tlZHNwbGluZWFyZWEnLFxuICAgICAgICAnaGlnaFZhbHVlRmllbGQnLFxuICAgICAgICAnaG92ZXJNb2RlJyxcbiAgICAgICAgJ2hvdmVyU3R5bGUnLFxuICAgICAgICAnaWdub3JlRW1wdHlQb2ludHMnLFxuICAgICAgICAnaW5uZXJDb2xvcicsXG4gICAgICAgICdsYWJlbCcsXG4gICAgICAgICdsaW5lJyxcbiAgICAgICAgJ2xvd1ZhbHVlRmllbGQnLFxuICAgICAgICAnbWF4TGFiZWxDb3VudCcsXG4gICAgICAgICdtaW5CYXJTaXplJyxcbiAgICAgICAgJ29wYWNpdHknLFxuICAgICAgICAnb3BlblZhbHVlRmllbGQnLFxuICAgICAgICAncGFuZScsXG4gICAgICAgICdwb2ludCcsXG4gICAgICAgICdyYW5nZWFyZWEnLFxuICAgICAgICAncmFuZ2ViYXInLFxuICAgICAgICAncmFuZ2VWYWx1ZTFGaWVsZCcsXG4gICAgICAgICdyYW5nZVZhbHVlMkZpZWxkJyxcbiAgICAgICAgJ3JlZHVjdGlvbicsXG4gICAgICAgICdzY2F0dGVyJyxcbiAgICAgICAgJ3NlbGVjdGlvbk1vZGUnLFxuICAgICAgICAnc2VsZWN0aW9uU3R5bGUnLFxuICAgICAgICAnc2hvd0luTGVnZW5kJyxcbiAgICAgICAgJ3NpemVGaWVsZCcsXG4gICAgICAgICdzcGxpbmUnLFxuICAgICAgICAnc3BsaW5lYXJlYScsXG4gICAgICAgICdzdGFjaycsXG4gICAgICAgICdzdGFja2VkYXJlYScsXG4gICAgICAgICdzdGFja2VkYmFyJyxcbiAgICAgICAgJ3N0YWNrZWRsaW5lJyxcbiAgICAgICAgJ3N0YWNrZWRzcGxpbmUnLFxuICAgICAgICAnc3RhY2tlZHNwbGluZWFyZWEnLFxuICAgICAgICAnc3RlcGFyZWEnLFxuICAgICAgICAnc3RlcGxpbmUnLFxuICAgICAgICAnc3RvY2snLFxuICAgICAgICAndGFnRmllbGQnLFxuICAgICAgICAndHlwZScsXG4gICAgICAgICd2YWx1ZUVycm9yQmFyJyxcbiAgICAgICAgJ3ZhbHVlRmllbGQnLFxuICAgICAgICAndmlzaWJsZScsXG4gICAgICAgICd3aWR0aCdcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIER4b0NhbmRsZXN0aWNrQ29tcG9uZW50IGV4dGVuZHMgRHhvQ2hhcnRDb21tb25TZXJpZXNTZXR0aW5ncyBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0ICB7XG5cbiAgICBwcm90ZWN0ZWQgZ2V0IF9vcHRpb25QYXRoKCkge1xuICAgICAgICByZXR1cm4gJ2NhbmRsZXN0aWNrJztcbiAgICB9XG5cblxuICAgIGNvbnN0cnVjdG9yKEBTa2lwU2VsZigpIEBIb3N0KCkgcGFyZW50T3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCxcbiAgICAgICAgICAgIEBIb3N0KCkgb3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBwYXJlbnRPcHRpb25Ib3N0LnNldE5lc3RlZE9wdGlvbih0aGlzKTtcbiAgICAgICAgb3B0aW9uSG9zdC5zZXRIb3N0KHRoaXMsIHRoaXMuX2Z1bGxPcHRpb25QYXRoLmJpbmQodGhpcykpO1xuICAgIH1cblxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuX2FkZFJlY3JlYXRlZENvbXBvbmVudCgpO1xuICAgIH1cblxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLl9hZGRSZW1vdmVkT3B0aW9uKHRoaXMuX2dldE9wdGlvblBhdGgoKSk7XG4gICAgfVxuXG5cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgRHhvQ2FuZGxlc3RpY2tDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIER4b0NhbmRsZXN0aWNrQ29tcG9uZW50XG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIER4b0NhbmRsZXN0aWNrTW9kdWxlIHsgfVxuIl19