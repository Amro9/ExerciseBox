/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoChartCommonAnnotationConfig } from './base/chart-common-annotation-config';
import * as i0 from "@angular/core";
import * as i1 from "devextreme-angular/core";
export class DxoCommonAnnotationSettingsComponent extends DxoChartCommonAnnotationConfig {
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get _optionPath() {
        return 'commonAnnotationSettings';
    }
    ngOnInit() {
        this._addRecreatedComponent();
    }
    ngOnDestroy() {
        this._addRemovedOption(this._getOptionPath());
    }
}
/** @nocollapse */ DxoCommonAnnotationSettingsComponent.ɵfac = function DxoCommonAnnotationSettingsComponent_Factory(t) { return new (t || DxoCommonAnnotationSettingsComponent)(i0.ɵɵdirectiveInject(i1.NestedOptionHost, 5), i0.ɵɵdirectiveInject(i1.NestedOptionHost, 1)); };
/** @nocollapse */ DxoCommonAnnotationSettingsComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DxoCommonAnnotationSettingsComponent, selectors: [["dxo-common-annotation-settings"]], inputs: { allowDragging: "allowDragging", argument: "argument", arrowLength: "arrowLength", arrowWidth: "arrowWidth", axis: "axis", border: "border", color: "color", customizeTooltip: "customizeTooltip", data: "data", description: "description", font: "font", height: "height", image: "image", offsetX: "offsetX", offsetY: "offsetY", opacity: "opacity", paddingLeftRight: "paddingLeftRight", paddingTopBottom: "paddingTopBottom", series: "series", shadow: "shadow", template: "template", text: "text", textOverflow: "textOverflow", tooltipEnabled: "tooltipEnabled", tooltipTemplate: "tooltipTemplate", type: "type", value: "value", width: "width", wordWrap: "wordWrap", x: "x", y: "y", location: "location", angle: "angle", radius: "radius", coordinates: "coordinates" }, features: [i0.ɵɵProvidersFeature([NestedOptionHost]), i0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoCommonAnnotationSettingsComponent_Template(rf, ctx) { }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DxoCommonAnnotationSettingsComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-common-annotation-settings',
                template: '',
                styles: [''],
                providers: [NestedOptionHost],
                inputs: [
                    'allowDragging',
                    'argument',
                    'arrowLength',
                    'arrowWidth',
                    'axis',
                    'border',
                    'color',
                    'customizeTooltip',
                    'data',
                    'description',
                    'font',
                    'height',
                    'image',
                    'offsetX',
                    'offsetY',
                    'opacity',
                    'paddingLeftRight',
                    'paddingTopBottom',
                    'series',
                    'shadow',
                    'template',
                    'text',
                    'textOverflow',
                    'tooltipEnabled',
                    'tooltipTemplate',
                    'type',
                    'value',
                    'width',
                    'wordWrap',
                    'x',
                    'y',
                    'location',
                    'angle',
                    'radius',
                    'coordinates'
                ]
            }]
    }], function () { return [{ type: i1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: i1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
export class DxoCommonAnnotationSettingsModule {
}
/** @nocollapse */ DxoCommonAnnotationSettingsModule.ɵfac = function DxoCommonAnnotationSettingsModule_Factory(t) { return new (t || DxoCommonAnnotationSettingsModule)(); };
/** @nocollapse */ DxoCommonAnnotationSettingsModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: DxoCommonAnnotationSettingsModule });
/** @nocollapse */ DxoCommonAnnotationSettingsModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DxoCommonAnnotationSettingsModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoCommonAnnotationSettingsComponent
                ],
                exports: [
                    DxoCommonAnnotationSettingsComponent
                ],
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxoCommonAnnotationSettingsModule, { declarations: [DxoCommonAnnotationSettingsComponent], exports: [DxoCommonAnnotationSettingsComponent] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLWFubm90YXRpb24tc2V0dGluZ3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9kaXN0L3VpL25lc3RlZC9jb21tb24tYW5ub3RhdGlvbi1zZXR0aW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7R0FXRztBQUVILG9DQUFvQztBQUVwQyxpREFBaUQ7QUFFakQsT0FBTyxFQUNILFNBQVMsRUFHVCxRQUFRLEVBQ1IsSUFBSSxFQUNKLFFBQVEsRUFDWCxNQUFNLGVBQWUsQ0FBQztBQU12QixPQUFPLEVBQ0gsZ0JBQWdCLEdBQ25CLE1BQU0seUJBQXlCLENBQUM7QUFDakMsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sdUNBQXVDLENBQUM7OztBQThDdkYsTUFBTSxPQUFPLG9DQUFxQyxTQUFRLDhCQUE4QjtJQU9wRixZQUFnQyxnQkFBa0MsRUFDbEQsVUFBNEI7UUFDeEMsS0FBSyxFQUFFLENBQUM7UUFDUixnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBVkQsSUFBYyxXQUFXO1FBQ3JCLE9BQU8sMEJBQTBCLENBQUM7SUFDdEMsQ0FBQztJQVdELFFBQVE7UUFDSixJQUFJLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsV0FBVztRQUNQLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQztJQUNsRCxDQUFDOzsySUFyQlEsb0NBQW9DO3NIQUFwQyxvQ0FBb0MsdzFCQXZDbEMsQ0FBQyxnQkFBZ0IsQ0FBQzt1RkF1Q3BCLG9DQUFvQztjQTNDaEQsU0FBUztlQUFDO2dCQUNQLFFBQVEsRUFBRSxnQ0FBZ0M7Z0JBQzFDLFFBQVEsRUFBRSxFQUFFO2dCQUNaLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQztnQkFDWixTQUFTLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztnQkFDN0IsTUFBTSxFQUFFO29CQUNKLGVBQWU7b0JBQ2YsVUFBVTtvQkFDVixhQUFhO29CQUNiLFlBQVk7b0JBQ1osTUFBTTtvQkFDTixRQUFRO29CQUNSLE9BQU87b0JBQ1Asa0JBQWtCO29CQUNsQixNQUFNO29CQUNOLGFBQWE7b0JBQ2IsTUFBTTtvQkFDTixRQUFRO29CQUNSLE9BQU87b0JBQ1AsU0FBUztvQkFDVCxTQUFTO29CQUNULFNBQVM7b0JBQ1Qsa0JBQWtCO29CQUNsQixrQkFBa0I7b0JBQ2xCLFFBQVE7b0JBQ1IsUUFBUTtvQkFDUixVQUFVO29CQUNWLE1BQU07b0JBQ04sY0FBYztvQkFDZCxnQkFBZ0I7b0JBQ2hCLGlCQUFpQjtvQkFDakIsTUFBTTtvQkFDTixPQUFPO29CQUNQLE9BQU87b0JBQ1AsVUFBVTtvQkFDVixHQUFHO29CQUNILEdBQUc7b0JBQ0gsVUFBVTtvQkFDVixPQUFPO29CQUNQLFFBQVE7b0JBQ1IsYUFBYTtpQkFDaEI7YUFDSjs7c0JBUWdCLFFBQVE7O3NCQUFJLElBQUk7O3NCQUNwQixJQUFJOztBQTBCakIsTUFBTSxPQUFPLGlDQUFpQzs7cUlBQWpDLGlDQUFpQztrSEFBakMsaUNBQWlDOzt1RkFBakMsaUNBQWlDO2NBUjdDLFFBQVE7ZUFBQztnQkFDUixZQUFZLEVBQUU7b0JBQ1osb0NBQW9DO2lCQUNyQztnQkFDRCxPQUFPLEVBQUU7b0JBQ1Asb0NBQW9DO2lCQUNyQzthQUNGOzt3RkFDWSxpQ0FBaUMsbUJBbENqQyxvQ0FBb0MsYUFBcEMsb0NBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBkZXZleHRyZW1lLWFuZ3VsYXJcbiAqIFZlcnNpb246IDIzLjIuNFxuICogQnVpbGQgZGF0ZTogTW9uIEphbiAyOSAyMDI0XG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyNCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcbiAqXG4gKiBUaGlzIHNvZnR3YXJlIG1heSBiZSBtb2RpZmllZCBhbmQgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9EZXZFeHByZXNzL2RldmV4dHJlbWUtYW5ndWxhclxuICovXG5cbi8qIHRzbGludDpkaXNhYmxlOm1heC1saW5lLWxlbmd0aCAqL1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTp1c2UtaW5wdXQtcHJvcGVydHktZGVjb3JhdG9yICovXG5cbmltcG9ydCB7XG4gICAgQ29tcG9uZW50LFxuICAgIE9uSW5pdCxcbiAgICBPbkRlc3Ryb3ksXG4gICAgTmdNb2R1bGUsXG4gICAgSG9zdCxcbiAgICBTa2lwU2VsZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuXG5cblxuXG5pbXBvcnQge1xuICAgIE5lc3RlZE9wdGlvbkhvc3QsXG59IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IER4b0NoYXJ0Q29tbW9uQW5ub3RhdGlvbkNvbmZpZyB9IGZyb20gJy4vYmFzZS9jaGFydC1jb21tb24tYW5ub3RhdGlvbi1jb25maWcnO1xuXG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnZHhvLWNvbW1vbi1hbm5vdGF0aW9uLXNldHRpbmdzJyxcbiAgICB0ZW1wbGF0ZTogJycsXG4gICAgc3R5bGVzOiBbJyddLFxuICAgIHByb3ZpZGVyczogW05lc3RlZE9wdGlvbkhvc3RdLFxuICAgIGlucHV0czogW1xuICAgICAgICAnYWxsb3dEcmFnZ2luZycsXG4gICAgICAgICdhcmd1bWVudCcsXG4gICAgICAgICdhcnJvd0xlbmd0aCcsXG4gICAgICAgICdhcnJvd1dpZHRoJyxcbiAgICAgICAgJ2F4aXMnLFxuICAgICAgICAnYm9yZGVyJyxcbiAgICAgICAgJ2NvbG9yJyxcbiAgICAgICAgJ2N1c3RvbWl6ZVRvb2x0aXAnLFxuICAgICAgICAnZGF0YScsXG4gICAgICAgICdkZXNjcmlwdGlvbicsXG4gICAgICAgICdmb250JyxcbiAgICAgICAgJ2hlaWdodCcsXG4gICAgICAgICdpbWFnZScsXG4gICAgICAgICdvZmZzZXRYJyxcbiAgICAgICAgJ29mZnNldFknLFxuICAgICAgICAnb3BhY2l0eScsXG4gICAgICAgICdwYWRkaW5nTGVmdFJpZ2h0JyxcbiAgICAgICAgJ3BhZGRpbmdUb3BCb3R0b20nLFxuICAgICAgICAnc2VyaWVzJyxcbiAgICAgICAgJ3NoYWRvdycsXG4gICAgICAgICd0ZW1wbGF0ZScsXG4gICAgICAgICd0ZXh0JyxcbiAgICAgICAgJ3RleHRPdmVyZmxvdycsXG4gICAgICAgICd0b29sdGlwRW5hYmxlZCcsXG4gICAgICAgICd0b29sdGlwVGVtcGxhdGUnLFxuICAgICAgICAndHlwZScsXG4gICAgICAgICd2YWx1ZScsXG4gICAgICAgICd3aWR0aCcsXG4gICAgICAgICd3b3JkV3JhcCcsXG4gICAgICAgICd4JyxcbiAgICAgICAgJ3knLFxuICAgICAgICAnbG9jYXRpb24nLFxuICAgICAgICAnYW5nbGUnLFxuICAgICAgICAncmFkaXVzJyxcbiAgICAgICAgJ2Nvb3JkaW5hdGVzJ1xuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgRHhvQ29tbW9uQW5ub3RhdGlvblNldHRpbmdzQ29tcG9uZW50IGV4dGVuZHMgRHhvQ2hhcnRDb21tb25Bbm5vdGF0aW9uQ29uZmlnIGltcGxlbWVudHMgT25EZXN0cm95LCBPbkluaXQgIHtcblxuICAgIHByb3RlY3RlZCBnZXQgX29wdGlvblBhdGgoKSB7XG4gICAgICAgIHJldHVybiAnY29tbW9uQW5ub3RhdGlvblNldHRpbmdzJztcbiAgICB9XG5cblxuICAgIGNvbnN0cnVjdG9yKEBTa2lwU2VsZigpIEBIb3N0KCkgcGFyZW50T3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCxcbiAgICAgICAgICAgIEBIb3N0KCkgb3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBwYXJlbnRPcHRpb25Ib3N0LnNldE5lc3RlZE9wdGlvbih0aGlzKTtcbiAgICAgICAgb3B0aW9uSG9zdC5zZXRIb3N0KHRoaXMsIHRoaXMuX2Z1bGxPcHRpb25QYXRoLmJpbmQodGhpcykpO1xuICAgIH1cblxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuX2FkZFJlY3JlYXRlZENvbXBvbmVudCgpO1xuICAgIH1cblxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLl9hZGRSZW1vdmVkT3B0aW9uKHRoaXMuX2dldE9wdGlvblBhdGgoKSk7XG4gICAgfVxuXG5cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgRHhvQ29tbW9uQW5ub3RhdGlvblNldHRpbmdzQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBEeG9Db21tb25Bbm5vdGF0aW9uU2V0dGluZ3NDb21wb25lbnRcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgRHhvQ29tbW9uQW5ub3RhdGlvblNldHRpbmdzTW9kdWxlIHsgfVxuIl19