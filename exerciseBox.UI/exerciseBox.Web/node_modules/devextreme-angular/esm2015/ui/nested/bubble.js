/*!
 * devextreme-angular
 * Version: 23.2.4
 * Build date: Mon Jan 29 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoChartCommonSeriesSettings } from './base/chart-common-series-settings';
import * as i0 from "@angular/core";
import * as i1 from "devextreme-angular/core";
export class DxoBubbleComponent extends DxoChartCommonSeriesSettings {
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    get _optionPath() {
        return 'bubble';
    }
    ngOnInit() {
        this._addRecreatedComponent();
    }
    ngOnDestroy() {
        this._addRemovedOption(this._getOptionPath());
    }
}
/** @nocollapse */ DxoBubbleComponent.ɵfac = function DxoBubbleComponent_Factory(t) { return new (t || DxoBubbleComponent)(i0.ɵɵdirectiveInject(i1.NestedOptionHost, 5), i0.ɵɵdirectiveInject(i1.NestedOptionHost, 1)); };
/** @nocollapse */ DxoBubbleComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DxoBubbleComponent, selectors: [["dxo-bubble"]], inputs: { aggregation: "aggregation", area: "area", argumentField: "argumentField", axis: "axis", bar: "bar", barOverlapGroup: "barOverlapGroup", barPadding: "barPadding", barWidth: "barWidth", border: "border", bubble: "bubble", candlestick: "candlestick", closeValueField: "closeValueField", color: "color", cornerRadius: "cornerRadius", dashStyle: "dashStyle", fullstackedarea: "fullstackedarea", fullstackedbar: "fullstackedbar", fullstackedline: "fullstackedline", fullstackedspline: "fullstackedspline", fullstackedsplinearea: "fullstackedsplinearea", highValueField: "highValueField", hoverMode: "hoverMode", hoverStyle: "hoverStyle", ignoreEmptyPoints: "ignoreEmptyPoints", innerColor: "innerColor", label: "label", line: "line", lowValueField: "lowValueField", maxLabelCount: "maxLabelCount", minBarSize: "minBarSize", opacity: "opacity", openValueField: "openValueField", pane: "pane", point: "point", rangearea: "rangearea", rangebar: "rangebar", rangeValue1Field: "rangeValue1Field", rangeValue2Field: "rangeValue2Field", reduction: "reduction", scatter: "scatter", selectionMode: "selectionMode", selectionStyle: "selectionStyle", showInLegend: "showInLegend", sizeField: "sizeField", spline: "spline", splinearea: "splinearea", stack: "stack", stackedarea: "stackedarea", stackedbar: "stackedbar", stackedline: "stackedline", stackedspline: "stackedspline", stackedsplinearea: "stackedsplinearea", steparea: "steparea", stepline: "stepline", stock: "stock", tagField: "tagField", type: "type", valueErrorBar: "valueErrorBar", valueField: "valueField", visible: "visible", width: "width" }, features: [i0.ɵɵProvidersFeature([NestedOptionHost]), i0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoBubbleComponent_Template(rf, ctx) { }, styles: [""] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DxoBubbleComponent, [{
        type: Component,
        args: [{
                selector: 'dxo-bubble',
                template: '',
                styles: [''],
                providers: [NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ]
            }]
    }], function () { return [{ type: i1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: i1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
export class DxoBubbleModule {
}
/** @nocollapse */ DxoBubbleModule.ɵfac = function DxoBubbleModule_Factory(t) { return new (t || DxoBubbleModule)(); };
/** @nocollapse */ DxoBubbleModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: DxoBubbleModule });
/** @nocollapse */ DxoBubbleModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DxoBubbleModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxoBubbleComponent
                ],
                exports: [
                    DxoBubbleComponent
                ],
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxoBubbleModule, { declarations: [DxoBubbleComponent], exports: [DxoBubbleComponent] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnViYmxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vZGlzdC91aS9uZXN0ZWQvYnViYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztHQVdHO0FBRUgsb0NBQW9DO0FBRXBDLGlEQUFpRDtBQUVqRCxPQUFPLEVBQ0gsU0FBUyxFQUdULFFBQVEsRUFDUixJQUFJLEVBQ0osUUFBUSxFQUNYLE1BQU0sZUFBZSxDQUFDO0FBTXZCLE9BQU8sRUFDSCxnQkFBZ0IsR0FDbkIsTUFBTSx5QkFBeUIsQ0FBQztBQUNqQyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQzs7O0FBd0VuRixNQUFNLE9BQU8sa0JBQW1CLFNBQVEsNEJBQTRCO0lBT2hFLFlBQWdDLGdCQUFrQyxFQUNsRCxVQUE0QjtRQUN4QyxLQUFLLEVBQUUsQ0FBQztRQUNSLGdCQUFnQixDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFWRCxJQUFjLFdBQVc7UUFDckIsT0FBTyxRQUFRLENBQUM7SUFDcEIsQ0FBQztJQVdELFFBQVE7UUFDSixJQUFJLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsV0FBVztRQUNQLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQztJQUNsRCxDQUFDOzt1R0FyQlEsa0JBQWtCO29HQUFsQixrQkFBa0Isb29EQWpFaEIsQ0FBQyxnQkFBZ0IsQ0FBQzt1RkFpRXBCLGtCQUFrQjtjQXJFOUIsU0FBUztlQUFDO2dCQUNQLFFBQVEsRUFBRSxZQUFZO2dCQUN0QixRQUFRLEVBQUUsRUFBRTtnQkFDWixNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7Z0JBQ1osU0FBUyxFQUFFLENBQUMsZ0JBQWdCLENBQUM7Z0JBQzdCLE1BQU0sRUFBRTtvQkFDSixhQUFhO29CQUNiLE1BQU07b0JBQ04sZUFBZTtvQkFDZixNQUFNO29CQUNOLEtBQUs7b0JBQ0wsaUJBQWlCO29CQUNqQixZQUFZO29CQUNaLFVBQVU7b0JBQ1YsUUFBUTtvQkFDUixRQUFRO29CQUNSLGFBQWE7b0JBQ2IsaUJBQWlCO29CQUNqQixPQUFPO29CQUNQLGNBQWM7b0JBQ2QsV0FBVztvQkFDWCxpQkFBaUI7b0JBQ2pCLGdCQUFnQjtvQkFDaEIsaUJBQWlCO29CQUNqQixtQkFBbUI7b0JBQ25CLHVCQUF1QjtvQkFDdkIsZ0JBQWdCO29CQUNoQixXQUFXO29CQUNYLFlBQVk7b0JBQ1osbUJBQW1CO29CQUNuQixZQUFZO29CQUNaLE9BQU87b0JBQ1AsTUFBTTtvQkFDTixlQUFlO29CQUNmLGVBQWU7b0JBQ2YsWUFBWTtvQkFDWixTQUFTO29CQUNULGdCQUFnQjtvQkFDaEIsTUFBTTtvQkFDTixPQUFPO29CQUNQLFdBQVc7b0JBQ1gsVUFBVTtvQkFDVixrQkFBa0I7b0JBQ2xCLGtCQUFrQjtvQkFDbEIsV0FBVztvQkFDWCxTQUFTO29CQUNULGVBQWU7b0JBQ2YsZ0JBQWdCO29CQUNoQixjQUFjO29CQUNkLFdBQVc7b0JBQ1gsUUFBUTtvQkFDUixZQUFZO29CQUNaLE9BQU87b0JBQ1AsYUFBYTtvQkFDYixZQUFZO29CQUNaLGFBQWE7b0JBQ2IsZUFBZTtvQkFDZixtQkFBbUI7b0JBQ25CLFVBQVU7b0JBQ1YsVUFBVTtvQkFDVixPQUFPO29CQUNQLFVBQVU7b0JBQ1YsTUFBTTtvQkFDTixlQUFlO29CQUNmLFlBQVk7b0JBQ1osU0FBUztvQkFDVCxPQUFPO2lCQUNWO2FBQ0o7O3NCQVFnQixRQUFROztzQkFBSSxJQUFJOztzQkFDcEIsSUFBSTs7QUEwQmpCLE1BQU0sT0FBTyxlQUFlOztpR0FBZixlQUFlO2dHQUFmLGVBQWU7O3VGQUFmLGVBQWU7Y0FSM0IsUUFBUTtlQUFDO2dCQUNSLFlBQVksRUFBRTtvQkFDWixrQkFBa0I7aUJBQ25CO2dCQUNELE9BQU8sRUFBRTtvQkFDUCxrQkFBa0I7aUJBQ25CO2FBQ0Y7O3dGQUNZLGVBQWUsbUJBbENmLGtCQUFrQixhQUFsQixrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxuICogVmVyc2lvbjogMjMuMi40XG4gKiBCdWlsZCBkYXRlOiBNb24gSmFuIDI5IDIwMjRcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgLSAyMDI0IERldmVsb3BlciBFeHByZXNzIEluYy4gQUxMIFJJR0hUUyBSRVNFUlZFRFxuICpcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcbiAqIG9mIHRoZSBNSVQgbGljZW5zZS4gU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QgZm9yIGRldGFpbHMuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXG4gKi9cblxuLyogdHNsaW50OmRpc2FibGU6bWF4LWxpbmUtbGVuZ3RoICovXG5cbi8qIHRzbGludDpkaXNhYmxlOnVzZS1pbnB1dC1wcm9wZXJ0eS1kZWNvcmF0b3IgKi9cblxuaW1wb3J0IHtcbiAgICBDb21wb25lbnQsXG4gICAgT25Jbml0LFxuICAgIE9uRGVzdHJveSxcbiAgICBOZ01vZHVsZSxcbiAgICBIb3N0LFxuICAgIFNraXBTZWxmXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5cblxuXG5cbmltcG9ydCB7XG4gICAgTmVzdGVkT3B0aW9uSG9zdCxcbn0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRHhvQ2hhcnRDb21tb25TZXJpZXNTZXR0aW5ncyB9IGZyb20gJy4vYmFzZS9jaGFydC1jb21tb24tc2VyaWVzLXNldHRpbmdzJztcblxuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2R4by1idWJibGUnLFxuICAgIHRlbXBsYXRlOiAnJyxcbiAgICBzdHlsZXM6IFsnJ10sXG4gICAgcHJvdmlkZXJzOiBbTmVzdGVkT3B0aW9uSG9zdF0sXG4gICAgaW5wdXRzOiBbXG4gICAgICAgICdhZ2dyZWdhdGlvbicsXG4gICAgICAgICdhcmVhJyxcbiAgICAgICAgJ2FyZ3VtZW50RmllbGQnLFxuICAgICAgICAnYXhpcycsXG4gICAgICAgICdiYXInLFxuICAgICAgICAnYmFyT3ZlcmxhcEdyb3VwJyxcbiAgICAgICAgJ2JhclBhZGRpbmcnLFxuICAgICAgICAnYmFyV2lkdGgnLFxuICAgICAgICAnYm9yZGVyJyxcbiAgICAgICAgJ2J1YmJsZScsXG4gICAgICAgICdjYW5kbGVzdGljaycsXG4gICAgICAgICdjbG9zZVZhbHVlRmllbGQnLFxuICAgICAgICAnY29sb3InLFxuICAgICAgICAnY29ybmVyUmFkaXVzJyxcbiAgICAgICAgJ2Rhc2hTdHlsZScsXG4gICAgICAgICdmdWxsc3RhY2tlZGFyZWEnLFxuICAgICAgICAnZnVsbHN0YWNrZWRiYXInLFxuICAgICAgICAnZnVsbHN0YWNrZWRsaW5lJyxcbiAgICAgICAgJ2Z1bGxzdGFja2Vkc3BsaW5lJyxcbiAgICAgICAgJ2Z1bGxzdGFja2Vkc3BsaW5lYXJlYScsXG4gICAgICAgICdoaWdoVmFsdWVGaWVsZCcsXG4gICAgICAgICdob3Zlck1vZGUnLFxuICAgICAgICAnaG92ZXJTdHlsZScsXG4gICAgICAgICdpZ25vcmVFbXB0eVBvaW50cycsXG4gICAgICAgICdpbm5lckNvbG9yJyxcbiAgICAgICAgJ2xhYmVsJyxcbiAgICAgICAgJ2xpbmUnLFxuICAgICAgICAnbG93VmFsdWVGaWVsZCcsXG4gICAgICAgICdtYXhMYWJlbENvdW50JyxcbiAgICAgICAgJ21pbkJhclNpemUnLFxuICAgICAgICAnb3BhY2l0eScsXG4gICAgICAgICdvcGVuVmFsdWVGaWVsZCcsXG4gICAgICAgICdwYW5lJyxcbiAgICAgICAgJ3BvaW50JyxcbiAgICAgICAgJ3JhbmdlYXJlYScsXG4gICAgICAgICdyYW5nZWJhcicsXG4gICAgICAgICdyYW5nZVZhbHVlMUZpZWxkJyxcbiAgICAgICAgJ3JhbmdlVmFsdWUyRmllbGQnLFxuICAgICAgICAncmVkdWN0aW9uJyxcbiAgICAgICAgJ3NjYXR0ZXInLFxuICAgICAgICAnc2VsZWN0aW9uTW9kZScsXG4gICAgICAgICdzZWxlY3Rpb25TdHlsZScsXG4gICAgICAgICdzaG93SW5MZWdlbmQnLFxuICAgICAgICAnc2l6ZUZpZWxkJyxcbiAgICAgICAgJ3NwbGluZScsXG4gICAgICAgICdzcGxpbmVhcmVhJyxcbiAgICAgICAgJ3N0YWNrJyxcbiAgICAgICAgJ3N0YWNrZWRhcmVhJyxcbiAgICAgICAgJ3N0YWNrZWRiYXInLFxuICAgICAgICAnc3RhY2tlZGxpbmUnLFxuICAgICAgICAnc3RhY2tlZHNwbGluZScsXG4gICAgICAgICdzdGFja2Vkc3BsaW5lYXJlYScsXG4gICAgICAgICdzdGVwYXJlYScsXG4gICAgICAgICdzdGVwbGluZScsXG4gICAgICAgICdzdG9jaycsXG4gICAgICAgICd0YWdGaWVsZCcsXG4gICAgICAgICd0eXBlJyxcbiAgICAgICAgJ3ZhbHVlRXJyb3JCYXInLFxuICAgICAgICAndmFsdWVGaWVsZCcsXG4gICAgICAgICd2aXNpYmxlJyxcbiAgICAgICAgJ3dpZHRoJ1xuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgRHhvQnViYmxlQ29tcG9uZW50IGV4dGVuZHMgRHhvQ2hhcnRDb21tb25TZXJpZXNTZXR0aW5ncyBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0ICB7XG5cbiAgICBwcm90ZWN0ZWQgZ2V0IF9vcHRpb25QYXRoKCkge1xuICAgICAgICByZXR1cm4gJ2J1YmJsZSc7XG4gICAgfVxuXG5cbiAgICBjb25zdHJ1Y3RvcihAU2tpcFNlbGYoKSBASG9zdCgpIHBhcmVudE9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QsXG4gICAgICAgICAgICBASG9zdCgpIG9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgcGFyZW50T3B0aW9uSG9zdC5zZXROZXN0ZWRPcHRpb24odGhpcyk7XG4gICAgICAgIG9wdGlvbkhvc3Quc2V0SG9zdCh0aGlzLCB0aGlzLl9mdWxsT3B0aW9uUGF0aC5iaW5kKHRoaXMpKTtcbiAgICB9XG5cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLl9hZGRSZWNyZWF0ZWRDb21wb25lbnQoKTtcbiAgICB9XG5cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5fYWRkUmVtb3ZlZE9wdGlvbih0aGlzLl9nZXRPcHRpb25QYXRoKCkpO1xuICAgIH1cblxuXG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIER4b0J1YmJsZUNvbXBvbmVudFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgRHhvQnViYmxlQ29tcG9uZW50XG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIER4b0J1YmJsZU1vZHVsZSB7IH1cbiJdfQ==