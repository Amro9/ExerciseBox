{"version":3,"file":"devextreme-angular-ui-pivot-grid.js","sources":["../../../dist/ui/pivot-grid/index.ts","../../../dist/ui/pivot-grid/devextreme-angular-ui-pivot-grid.ts"],"sourcesContent":["/*!\n * devextreme-angular\n * Version: 23.2.4\n * Build date: Mon Jan 29 2024\n *\n * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\n\n\nimport { TransferState } from '@angular/platform-browser';\n\nimport {\n    Component,\n    NgModule,\n    ElementRef,\n    NgZone,\n    PLATFORM_ID,\n    Inject,\n\n    Input,\n    Output,\n    OnDestroy,\n    EventEmitter,\n    OnChanges,\n    DoCheck,\n    SimpleChanges\n} from '@angular/core';\n\n\nimport { FieldChooserLayout, Mode, ScrollMode } from 'devextreme/common';\nimport { ApplyChangesMode, HeaderFilterSearchConfig, StateStoreType } from 'devextreme/common/grids';\nimport { CellClickEvent, CellPreparedEvent, ContentReadyEvent, ContextMenuPreparingEvent, DisposingEvent, ExportingEvent, InitializedEvent, OptionChangedEvent, PivotGridDataFieldArea, PivotGridRowHeaderLayout, PivotGridTotalDisplayMode } from 'devextreme/ui/pivot_grid';\nimport PivotGridDataSource, { Options as PivotGridDataSourceOptions } from 'devextreme/ui/pivot_grid/data_source';\n\nimport DxPivotGrid from 'devextreme/ui/pivot_grid';\n\n\nimport {\n    DxComponent,\n    DxTemplateHost,\n    DxIntegrationModule,\n    DxTemplateModule,\n    NestedOptionHost,\n    IterableDifferHelper,\n    WatcherHelper\n} from 'devextreme-angular/core';\n\nimport { DxoDataSourceModule } from 'devextreme-angular/ui/nested';\nimport { DxiFieldModule } from 'devextreme-angular/ui/nested';\nimport { DxoFormatModule } from 'devextreme-angular/ui/nested';\nimport { DxoHeaderFilterModule } from 'devextreme-angular/ui/nested';\nimport { DxoStoreModule } from 'devextreme-angular/ui/nested';\nimport { DxoExportModule } from 'devextreme-angular/ui/nested';\nimport { DxoFieldChooserModule } from 'devextreme-angular/ui/nested';\nimport { DxoTextsModule } from 'devextreme-angular/ui/nested';\nimport { DxoFieldPanelModule } from 'devextreme-angular/ui/nested';\nimport { DxoSearchModule } from 'devextreme-angular/ui/nested';\nimport { DxoLoadPanelModule } from 'devextreme-angular/ui/nested';\nimport { DxoScrollingModule } from 'devextreme-angular/ui/nested';\nimport { DxoStateStoringModule } from 'devextreme-angular/ui/nested';\n\n\n\n\n/**\n * [descr:dxPivotGrid]\n\n */\n@Component({\n    selector: 'dx-pivot-grid',\n    template: '',\n    providers: [\n        DxTemplateHost,\n        WatcherHelper,\n        NestedOptionHost,\n        IterableDifferHelper\n    ]\n})\nexport class DxPivotGridComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\n    instance: DxPivotGrid;\n\n    /**\n     * [descr:dxPivotGridOptions.allowExpandAll]\n    \n     */\n    @Input()\n    get allowExpandAll(): boolean {\n        return this._getOption('allowExpandAll');\n    }\n    set allowExpandAll(value: boolean) {\n        this._setOption('allowExpandAll', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.allowFiltering]\n    \n     */\n    @Input()\n    get allowFiltering(): boolean {\n        return this._getOption('allowFiltering');\n    }\n    set allowFiltering(value: boolean) {\n        this._setOption('allowFiltering', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.allowSorting]\n    \n     */\n    @Input()\n    get allowSorting(): boolean {\n        return this._getOption('allowSorting');\n    }\n    set allowSorting(value: boolean) {\n        this._setOption('allowSorting', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.allowSortingBySummary]\n    \n     */\n    @Input()\n    get allowSortingBySummary(): boolean {\n        return this._getOption('allowSortingBySummary');\n    }\n    set allowSortingBySummary(value: boolean) {\n        this._setOption('allowSortingBySummary', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.dataFieldArea]\n    \n     */\n    @Input()\n    get dataFieldArea(): PivotGridDataFieldArea {\n        return this._getOption('dataFieldArea');\n    }\n    set dataFieldArea(value: PivotGridDataFieldArea) {\n        this._setOption('dataFieldArea', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.dataSource]\n    \n     */\n    @Input()\n    get dataSource(): PivotGridDataSource | PivotGridDataSourceOptions | null | Array<any> {\n        return this._getOption('dataSource');\n    }\n    set dataSource(value: PivotGridDataSource | PivotGridDataSourceOptions | null | Array<any>) {\n        this._setOption('dataSource', value);\n    }\n\n\n    /**\n     * [descr:WidgetOptions.disabled]\n    \n     */\n    @Input()\n    get disabled(): boolean {\n        return this._getOption('disabled');\n    }\n    set disabled(value: boolean) {\n        this._setOption('disabled', value);\n    }\n\n\n    /**\n     * [descr:DOMComponentOptions.elementAttr]\n    \n     */\n    @Input()\n    get elementAttr(): any {\n        return this._getOption('elementAttr');\n    }\n    set elementAttr(value: any) {\n        this._setOption('elementAttr', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.encodeHtml]\n    \n     */\n    @Input()\n    get encodeHtml(): boolean {\n        return this._getOption('encodeHtml');\n    }\n    set encodeHtml(value: boolean) {\n        this._setOption('encodeHtml', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.export]\n    \n     */\n    @Input()\n    get export(): { enabled?: boolean } {\n        return this._getOption('export');\n    }\n    set export(value: { enabled?: boolean }) {\n        this._setOption('export', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.fieldChooser]\n    \n     */\n    @Input()\n    get fieldChooser(): { allowSearch?: boolean, applyChangesMode?: ApplyChangesMode, enabled?: boolean, height?: number, layout?: FieldChooserLayout, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number } {\n        return this._getOption('fieldChooser');\n    }\n    set fieldChooser(value: { allowSearch?: boolean, applyChangesMode?: ApplyChangesMode, enabled?: boolean, height?: number, layout?: FieldChooserLayout, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number }) {\n        this._setOption('fieldChooser', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.fieldPanel]\n    \n     */\n    @Input()\n    get fieldPanel(): { allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean } {\n        return this._getOption('fieldPanel');\n    }\n    set fieldPanel(value: { allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean }) {\n        this._setOption('fieldPanel', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.headerFilter]\n    \n     */\n    @Input()\n    get headerFilter(): { allowSearch?: boolean, allowSelectAll?: boolean, height?: number, search?: HeaderFilterSearchConfig, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number } {\n        return this._getOption('headerFilter');\n    }\n    set headerFilter(value: { allowSearch?: boolean, allowSelectAll?: boolean, height?: number, search?: HeaderFilterSearchConfig, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number }) {\n        this._setOption('headerFilter', value);\n    }\n\n\n    /**\n     * [descr:DOMComponentOptions.height]\n    \n     */\n    @Input()\n    get height(): number | Function | string | undefined {\n        return this._getOption('height');\n    }\n    set height(value: number | Function | string | undefined) {\n        this._setOption('height', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.hideEmptySummaryCells]\n    \n     */\n    @Input()\n    get hideEmptySummaryCells(): boolean {\n        return this._getOption('hideEmptySummaryCells');\n    }\n    set hideEmptySummaryCells(value: boolean) {\n        this._setOption('hideEmptySummaryCells', value);\n    }\n\n\n    /**\n     * [descr:WidgetOptions.hint]\n    \n     */\n    @Input()\n    get hint(): string | undefined {\n        return this._getOption('hint');\n    }\n    set hint(value: string | undefined) {\n        this._setOption('hint', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.loadPanel]\n    \n     */\n    @Input()\n    get loadPanel(): { enabled?: boolean, height?: number, indicatorSrc?: string, shading?: boolean, shadingColor?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number } {\n        return this._getOption('loadPanel');\n    }\n    set loadPanel(value: { enabled?: boolean, height?: number, indicatorSrc?: string, shading?: boolean, shadingColor?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number }) {\n        this._setOption('loadPanel', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.rowHeaderLayout]\n    \n     */\n    @Input()\n    get rowHeaderLayout(): PivotGridRowHeaderLayout {\n        return this._getOption('rowHeaderLayout');\n    }\n    set rowHeaderLayout(value: PivotGridRowHeaderLayout) {\n        this._setOption('rowHeaderLayout', value);\n    }\n\n\n    /**\n     * [descr:DOMComponentOptions.rtlEnabled]\n    \n     */\n    @Input()\n    get rtlEnabled(): boolean {\n        return this._getOption('rtlEnabled');\n    }\n    set rtlEnabled(value: boolean) {\n        this._setOption('rtlEnabled', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.scrolling]\n    \n     */\n    @Input()\n    get scrolling(): { mode?: ScrollMode, useNative?: Mode | boolean } {\n        return this._getOption('scrolling');\n    }\n    set scrolling(value: { mode?: ScrollMode, useNative?: Mode | boolean }) {\n        this._setOption('scrolling', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.showBorders]\n    \n     */\n    @Input()\n    get showBorders(): boolean {\n        return this._getOption('showBorders');\n    }\n    set showBorders(value: boolean) {\n        this._setOption('showBorders', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.showColumnGrandTotals]\n    \n     */\n    @Input()\n    get showColumnGrandTotals(): boolean {\n        return this._getOption('showColumnGrandTotals');\n    }\n    set showColumnGrandTotals(value: boolean) {\n        this._setOption('showColumnGrandTotals', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.showColumnTotals]\n    \n     */\n    @Input()\n    get showColumnTotals(): boolean {\n        return this._getOption('showColumnTotals');\n    }\n    set showColumnTotals(value: boolean) {\n        this._setOption('showColumnTotals', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.showRowGrandTotals]\n    \n     */\n    @Input()\n    get showRowGrandTotals(): boolean {\n        return this._getOption('showRowGrandTotals');\n    }\n    set showRowGrandTotals(value: boolean) {\n        this._setOption('showRowGrandTotals', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.showRowTotals]\n    \n     */\n    @Input()\n    get showRowTotals(): boolean {\n        return this._getOption('showRowTotals');\n    }\n    set showRowTotals(value: boolean) {\n        this._setOption('showRowTotals', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.showTotalsPrior]\n    \n     */\n    @Input()\n    get showTotalsPrior(): PivotGridTotalDisplayMode {\n        return this._getOption('showTotalsPrior');\n    }\n    set showTotalsPrior(value: PivotGridTotalDisplayMode) {\n        this._setOption('showTotalsPrior', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.stateStoring]\n    \n     */\n    @Input()\n    get stateStoring(): { customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: StateStoreType } {\n        return this._getOption('stateStoring');\n    }\n    set stateStoring(value: { customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: StateStoreType }) {\n        this._setOption('stateStoring', value);\n    }\n\n\n    /**\n     * [descr:WidgetOptions.tabIndex]\n    \n     */\n    @Input()\n    get tabIndex(): number {\n        return this._getOption('tabIndex');\n    }\n    set tabIndex(value: number) {\n        this._setOption('tabIndex', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.texts]\n    \n     */\n    @Input()\n    get texts(): { collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string } {\n        return this._getOption('texts');\n    }\n    set texts(value: { collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string }) {\n        this._setOption('texts', value);\n    }\n\n\n    /**\n     * [descr:WidgetOptions.visible]\n    \n     */\n    @Input()\n    get visible(): boolean {\n        return this._getOption('visible');\n    }\n    set visible(value: boolean) {\n        this._setOption('visible', value);\n    }\n\n\n    /**\n     * [descr:DOMComponentOptions.width]\n    \n     */\n    @Input()\n    get width(): number | Function | string | undefined {\n        return this._getOption('width');\n    }\n    set width(value: number | Function | string | undefined) {\n        this._setOption('width', value);\n    }\n\n\n    /**\n     * [descr:dxPivotGridOptions.wordWrapEnabled]\n    \n     */\n    @Input()\n    get wordWrapEnabled(): boolean {\n        return this._getOption('wordWrapEnabled');\n    }\n    set wordWrapEnabled(value: boolean) {\n        this._setOption('wordWrapEnabled', value);\n    }\n\n    /**\n    \n     * [descr:dxPivotGridOptions.onCellClick]\n    \n    \n     */\n    @Output() onCellClick: EventEmitter<CellClickEvent>;\n\n    /**\n    \n     * [descr:dxPivotGridOptions.onCellPrepared]\n    \n    \n     */\n    @Output() onCellPrepared: EventEmitter<CellPreparedEvent>;\n\n    /**\n    \n     * [descr:dxPivotGridOptions.onContentReady]\n    \n    \n     */\n    @Output() onContentReady: EventEmitter<ContentReadyEvent>;\n\n    /**\n    \n     * [descr:dxPivotGridOptions.onContextMenuPreparing]\n    \n    \n     */\n    @Output() onContextMenuPreparing: EventEmitter<ContextMenuPreparingEvent>;\n\n    /**\n    \n     * [descr:dxPivotGridOptions.onDisposing]\n    \n    \n     */\n    @Output() onDisposing: EventEmitter<DisposingEvent>;\n\n    /**\n    \n     * [descr:dxPivotGridOptions.onExporting]\n    \n    \n     */\n    @Output() onExporting: EventEmitter<ExportingEvent>;\n\n    /**\n    \n     * [descr:dxPivotGridOptions.onInitialized]\n    \n    \n     */\n    @Output() onInitialized: EventEmitter<InitializedEvent>;\n\n    /**\n    \n     * [descr:dxPivotGridOptions.onOptionChanged]\n    \n    \n     */\n    @Output() onOptionChanged: EventEmitter<OptionChangedEvent>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() allowExpandAllChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() allowFilteringChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() allowSortingChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() allowSortingBySummaryChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() dataFieldAreaChange: EventEmitter<PivotGridDataFieldArea>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() dataSourceChange: EventEmitter<PivotGridDataSource | PivotGridDataSourceOptions | null | Array<any>>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() disabledChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() elementAttrChange: EventEmitter<any>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() encodeHtmlChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() exportChange: EventEmitter<{ enabled?: boolean }>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() fieldChooserChange: EventEmitter<{ allowSearch?: boolean, applyChangesMode?: ApplyChangesMode, enabled?: boolean, height?: number, layout?: FieldChooserLayout, searchTimeout?: number, texts?: { allFields?: string, columnFields?: string, dataFields?: string, filterFields?: string, rowFields?: string }, title?: string, width?: number }>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() fieldPanelChange: EventEmitter<{ allowFieldDragging?: boolean, showColumnFields?: boolean, showDataFields?: boolean, showFilterFields?: boolean, showRowFields?: boolean, texts?: { columnFieldArea?: string, dataFieldArea?: string, filterFieldArea?: string, rowFieldArea?: string }, visible?: boolean }>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() headerFilterChange: EventEmitter<{ allowSearch?: boolean, allowSelectAll?: boolean, height?: number, search?: HeaderFilterSearchConfig, searchTimeout?: number, showRelevantValues?: boolean, texts?: { cancel?: string, emptyValue?: string, ok?: string }, width?: number }>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() heightChange: EventEmitter<number | Function | string | undefined>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() hideEmptySummaryCellsChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() hintChange: EventEmitter<string | undefined>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() loadPanelChange: EventEmitter<{ enabled?: boolean, height?: number, indicatorSrc?: string, shading?: boolean, shadingColor?: string, showIndicator?: boolean, showPane?: boolean, text?: string, width?: number }>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() rowHeaderLayoutChange: EventEmitter<PivotGridRowHeaderLayout>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() scrollingChange: EventEmitter<{ mode?: ScrollMode, useNative?: Mode | boolean }>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() showBordersChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() showColumnGrandTotalsChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() showColumnTotalsChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() showRowGrandTotalsChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() showRowTotalsChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() showTotalsPriorChange: EventEmitter<PivotGridTotalDisplayMode>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() stateStoringChange: EventEmitter<{ customLoad?: Function, customSave?: Function, enabled?: boolean, savingTimeout?: number, storageKey?: string, type?: StateStoreType }>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() tabIndexChange: EventEmitter<number>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() textsChange: EventEmitter<{ collapseAll?: string, dataNotAvailable?: string, expandAll?: string, exportToExcel?: string, grandTotal?: string, noData?: string, removeAllSorting?: string, showFieldChooser?: string, sortColumnBySummary?: string, sortRowBySummary?: string, total?: string }>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() visibleChange: EventEmitter<boolean>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() widthChange: EventEmitter<number | Function | string | undefined>;\n\n    /**\n    \n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\n    \n     */\n    @Output() wordWrapEnabledChange: EventEmitter<boolean>;\n\n\n\n\n\n\n\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\n            private _watcherHelper: WatcherHelper,\n            private _idh: IterableDifferHelper,\n            optionHost: NestedOptionHost,\n            transferState: TransferState,\n            @Inject(PLATFORM_ID) platformId: any) {\n\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n\n        this._createEventEmitters([\n            { subscribe: 'cellClick', emit: 'onCellClick' },\n            { subscribe: 'cellPrepared', emit: 'onCellPrepared' },\n            { subscribe: 'contentReady', emit: 'onContentReady' },\n            { subscribe: 'contextMenuPreparing', emit: 'onContextMenuPreparing' },\n            { subscribe: 'disposing', emit: 'onDisposing' },\n            { subscribe: 'exporting', emit: 'onExporting' },\n            { subscribe: 'initialized', emit: 'onInitialized' },\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\n            { emit: 'allowExpandAllChange' },\n            { emit: 'allowFilteringChange' },\n            { emit: 'allowSortingChange' },\n            { emit: 'allowSortingBySummaryChange' },\n            { emit: 'dataFieldAreaChange' },\n            { emit: 'dataSourceChange' },\n            { emit: 'disabledChange' },\n            { emit: 'elementAttrChange' },\n            { emit: 'encodeHtmlChange' },\n            { emit: 'exportChange' },\n            { emit: 'fieldChooserChange' },\n            { emit: 'fieldPanelChange' },\n            { emit: 'headerFilterChange' },\n            { emit: 'heightChange' },\n            { emit: 'hideEmptySummaryCellsChange' },\n            { emit: 'hintChange' },\n            { emit: 'loadPanelChange' },\n            { emit: 'rowHeaderLayoutChange' },\n            { emit: 'rtlEnabledChange' },\n            { emit: 'scrollingChange' },\n            { emit: 'showBordersChange' },\n            { emit: 'showColumnGrandTotalsChange' },\n            { emit: 'showColumnTotalsChange' },\n            { emit: 'showRowGrandTotalsChange' },\n            { emit: 'showRowTotalsChange' },\n            { emit: 'showTotalsPriorChange' },\n            { emit: 'stateStoringChange' },\n            { emit: 'tabIndexChange' },\n            { emit: 'textsChange' },\n            { emit: 'visibleChange' },\n            { emit: 'widthChange' },\n            { emit: 'wordWrapEnabledChange' }\n        ]);\n\n        this._idh.setHost(this);\n        optionHost.setHost(this);\n    }\n\n    protected _createInstance(element, options) {\n\n        return new DxPivotGrid(element, options);\n    }\n\n\n    ngOnDestroy() {\n        this._destroyWidget();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n        this.setupChanges('dataSource', changes);\n    }\n\n    setupChanges(prop: string, changes: SimpleChanges) {\n        if (!(prop in this._optionsToUpdate)) {\n            this._idh.setup(prop, changes);\n        }\n    }\n\n    ngDoCheck() {\n        this._idh.doCheck('dataSource');\n        this._watcherHelper.checkWatchers();\n        super.ngDoCheck();\n        super.clearChangedOptions();\n    }\n\n    _setOption(name: string, value: any) {\n        let isSetup = this._idh.setupSingle(name, value);\n        let isChanged = this._idh.getChanges(name, value) !== null;\n\n        if (isSetup || isChanged) {\n            super._setOption(name, value);\n        }\n    }\n}\n\n@NgModule({\n  imports: [\n    DxoDataSourceModule,\n    DxiFieldModule,\n    DxoFormatModule,\n    DxoHeaderFilterModule,\n    DxoStoreModule,\n    DxoExportModule,\n    DxoFieldChooserModule,\n    DxoTextsModule,\n    DxoFieldPanelModule,\n    DxoSearchModule,\n    DxoLoadPanelModule,\n    DxoScrollingModule,\n    DxoStateStoringModule,\n    DxIntegrationModule,\n    DxTemplateModule\n  ],\n  declarations: [\n    DxPivotGridComponent\n  ],\n  exports: [\n    DxPivotGridComponent,\n    DxoDataSourceModule,\n    DxiFieldModule,\n    DxoFormatModule,\n    DxoHeaderFilterModule,\n    DxoStoreModule,\n    DxoExportModule,\n    DxoFieldChooserModule,\n    DxoTextsModule,\n    DxoFieldPanelModule,\n    DxoSearchModule,\n    DxoLoadPanelModule,\n    DxoScrollingModule,\n    DxoStateStoringModule,\n    DxTemplateModule\n  ]\n})\nexport class DxPivotGridModule { }\n\nimport type * as DxPivotGridTypes from \"devextreme/ui/pivot_grid_types\";\nexport { DxPivotGridTypes };\n\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}