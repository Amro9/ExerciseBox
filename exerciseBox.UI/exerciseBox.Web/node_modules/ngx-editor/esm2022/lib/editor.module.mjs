import { NgModule, InjectionToken } from '@angular/core';
import { CommonModule } from '@angular/common';
import { defaults as defaultLocals } from './Locals';
import { icons } from './icons';
import { NgxEditorComponent } from './editor.component';
import { NgxEditorServiceConfig } from './editor-config.service';
import { NgxEditorService, provideMyServiceOptions } from './editor.service';
import { MenuModule } from './modules/menu/menu.module';
import { MenuComponent } from './modules/menu/menu.component';
import { ImageViewComponent } from './components/image-view/image-view.component';
import { FloatingMenuComponent } from './modules/menu/floating-menu/floating-menu.component';
import * as i0 from "@angular/core";
export const NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');
const defaultConfig = {
    locals: defaultLocals,
    icons,
};
export class NgxEditorModule {
    static forRoot(config = defaultConfig) {
        return {
            ngModule: NgxEditorModule,
            providers: [
                {
                    provide: NGX_EDITOR_CONFIG_TOKEN,
                    useValue: config,
                },
                {
                    provide: NgxEditorServiceConfig,
                    useFactory: provideMyServiceOptions,
                    deps: [NGX_EDITOR_CONFIG_TOKEN],
                },
            ],
        };
    }
    static forChild(config = defaultConfig) {
        return {
            ngModule: NgxEditorModule,
            providers: [
                {
                    provide: NGX_EDITOR_CONFIG_TOKEN,
                    useValue: config,
                },
                {
                    provide: NgxEditorServiceConfig,
                    useFactory: provideMyServiceOptions,
                    deps: [NGX_EDITOR_CONFIG_TOKEN],
                },
                NgxEditorService,
            ],
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.8", ngImport: i0, type: NgxEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.8", ngImport: i0, type: NgxEditorModule, declarations: [NgxEditorComponent,
            ImageViewComponent], imports: [CommonModule,
            MenuModule], exports: [NgxEditorComponent,
            MenuComponent,
            FloatingMenuComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.8", ngImport: i0, type: NgxEditorModule, imports: [CommonModule,
            MenuModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.8", ngImport: i0, type: NgxEditorModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        MenuModule,
                    ],
                    providers: [],
                    declarations: [
                        NgxEditorComponent,
                        ImageViewComponent,
                    ],
                    exports: [
                        NgxEditorComponent,
                        MenuComponent,
                        FloatingMenuComponent,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdG9yLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1lZGl0b3Ivc3JjL2xpYi9lZGl0b3IubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFHL0MsT0FBTyxFQUFFLFFBQVEsSUFBSSxhQUFhLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDckQsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUVoQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUM3RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFeEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzlELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHNEQUFzRCxDQUFDOztBQUU3RixNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyxJQUFJLGNBQWMsQ0FBa0IsaUJBQWlCLENBQUMsQ0FBQztBQUU5RixNQUFNLGFBQWEsR0FBb0I7SUFDckMsTUFBTSxFQUFFLGFBQWE7SUFDckIsS0FBSztDQUNOLENBQUM7QUFrQkYsTUFBTSxPQUFPLGVBQWU7SUFDMUIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUEwQixhQUFhO1FBQ3BELE9BQU87WUFDTCxRQUFRLEVBQUUsZUFBZTtZQUN6QixTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLHVCQUF1QjtvQkFDaEMsUUFBUSxFQUFFLE1BQU07aUJBQ2pCO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxzQkFBc0I7b0JBQy9CLFVBQVUsRUFBRSx1QkFBdUI7b0JBQ25DLElBQUksRUFBRSxDQUFDLHVCQUF1QixDQUFDO2lCQUNoQzthQUNGO1NBQ0YsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQTBCLGFBQWE7UUFDckQsT0FBTztZQUNMLFFBQVEsRUFBRSxlQUFlO1lBQ3pCLFNBQVMsRUFBRTtnQkFDVDtvQkFDRSxPQUFPLEVBQUUsdUJBQXVCO29CQUNoQyxRQUFRLEVBQUUsTUFBTTtpQkFDakI7Z0JBQ0Q7b0JBQ0UsT0FBTyxFQUFFLHNCQUFzQjtvQkFDL0IsVUFBVSxFQUFFLHVCQUF1QjtvQkFDbkMsSUFBSSxFQUFFLENBQUMsdUJBQXVCLENBQUM7aUJBQ2hDO2dCQUNELGdCQUFnQjthQUNqQjtTQUNGLENBQUM7SUFDSixDQUFDOzhHQWxDVSxlQUFlOytHQUFmLGVBQWUsaUJBVHhCLGtCQUFrQjtZQUNsQixrQkFBa0IsYUFObEIsWUFBWTtZQUNaLFVBQVUsYUFRVixrQkFBa0I7WUFDbEIsYUFBYTtZQUNiLHFCQUFxQjsrR0FHWixlQUFlLFlBZHhCLFlBQVk7WUFDWixVQUFVOzsyRkFhRCxlQUFlO2tCQWhCM0IsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixVQUFVO3FCQUNYO29CQUNELFNBQVMsRUFBRSxFQUFFO29CQUNiLFlBQVksRUFBRTt3QkFDWixrQkFBa0I7d0JBQ2xCLGtCQUFrQjtxQkFDbkI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLGtCQUFrQjt3QkFDbEIsYUFBYTt3QkFDYixxQkFBcUI7cUJBQ3RCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMsIEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5pbXBvcnQgeyBOZ3hFZGl0b3JDb25maWcgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IGRlZmF1bHRzIGFzIGRlZmF1bHRMb2NhbHMgfSBmcm9tICcuL0xvY2Fscyc7XG5pbXBvcnQgeyBpY29ucyB9IGZyb20gJy4vaWNvbnMnO1xuXG5pbXBvcnQgeyBOZ3hFZGl0b3JDb21wb25lbnQgfSBmcm9tICcuL2VkaXRvci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmd4RWRpdG9yU2VydmljZUNvbmZpZyB9IGZyb20gJy4vZWRpdG9yLWNvbmZpZy5zZXJ2aWNlJztcbmltcG9ydCB7IE5neEVkaXRvclNlcnZpY2UsIHByb3ZpZGVNeVNlcnZpY2VPcHRpb25zIH0gZnJvbSAnLi9lZGl0b3Iuc2VydmljZSc7XG5pbXBvcnQgeyBNZW51TW9kdWxlIH0gZnJvbSAnLi9tb2R1bGVzL21lbnUvbWVudS5tb2R1bGUnO1xuXG5pbXBvcnQgeyBNZW51Q29tcG9uZW50IH0gZnJvbSAnLi9tb2R1bGVzL21lbnUvbWVudS5jb21wb25lbnQnO1xuaW1wb3J0IHsgSW1hZ2VWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2ltYWdlLXZpZXcvaW1hZ2Utdmlldy5jb21wb25lbnQnO1xuaW1wb3J0IHsgRmxvYXRpbmdNZW51Q29tcG9uZW50IH0gZnJvbSAnLi9tb2R1bGVzL21lbnUvZmxvYXRpbmctbWVudS9mbG9hdGluZy1tZW51LmNvbXBvbmVudCc7XG5cbmV4cG9ydCBjb25zdCBOR1hfRURJVE9SX0NPTkZJR19UT0tFTiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxOZ3hFZGl0b3JDb25maWc+KCdOZ3hFZGl0b3JDb25maWcnKTtcblxuY29uc3QgZGVmYXVsdENvbmZpZzogTmd4RWRpdG9yQ29uZmlnID0ge1xuICBsb2NhbHM6IGRlZmF1bHRMb2NhbHMsXG4gIGljb25zLFxufTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBNZW51TW9kdWxlLFxuICBdLFxuICBwcm92aWRlcnM6IFtdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBOZ3hFZGl0b3JDb21wb25lbnQsXG4gICAgSW1hZ2VWaWV3Q29tcG9uZW50LFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgTmd4RWRpdG9yQ29tcG9uZW50LFxuICAgIE1lbnVDb21wb25lbnQsXG4gICAgRmxvYXRpbmdNZW51Q29tcG9uZW50LFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ3hFZGl0b3JNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdChjb25maWc6IE5neEVkaXRvckNvbmZpZyA9IGRlZmF1bHRDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE5neEVkaXRvck1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RWRpdG9yTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBOR1hfRURJVE9SX0NPTkZJR19UT0tFTixcbiAgICAgICAgICB1c2VWYWx1ZTogY29uZmlnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogTmd4RWRpdG9yU2VydmljZUNvbmZpZyxcbiAgICAgICAgICB1c2VGYWN0b3J5OiBwcm92aWRlTXlTZXJ2aWNlT3B0aW9ucyxcbiAgICAgICAgICBkZXBzOiBbTkdYX0VESVRPUl9DT05GSUdfVE9LRU5dLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9O1xuICB9XG5cbiAgc3RhdGljIGZvckNoaWxkKGNvbmZpZzogTmd4RWRpdG9yQ29uZmlnID0gZGVmYXVsdENvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8Tmd4RWRpdG9yTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOZ3hFZGl0b3JNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IE5HWF9FRElUT1JfQ09ORklHX1RPS0VOLFxuICAgICAgICAgIHVzZVZhbHVlOiBjb25maWcsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBOZ3hFZGl0b3JTZXJ2aWNlQ29uZmlnLFxuICAgICAgICAgIHVzZUZhY3Rvcnk6IHByb3ZpZGVNeVNlcnZpY2VPcHRpb25zLFxuICAgICAgICAgIGRlcHM6IFtOR1hfRURJVE9SX0NPTkZJR19UT0tFTl0sXG4gICAgICAgIH0sXG4gICAgICAgIE5neEVkaXRvclNlcnZpY2UsXG4gICAgICBdLFxuICAgIH07XG4gIH1cbn1cbiJdfQ==