import { Injectable, Optional } from '@angular/core';
import Locals from './Locals';
import Icon from './icons';
import * as i0 from "@angular/core";
import * as i1 from "./editor-config.service";
export class NgxEditorService {
    constructor(config) {
        this.config = config;
    }
    get locals() {
        return new Locals(this.config.locals);
    }
    getIcon(icon) {
        return this.config.icons[icon] ? this.config.icons[icon] : Icon.get(icon);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.8", ngImport: i0, type: NgxEditorService, deps: [{ token: i1.NgxEditorServiceConfig, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.3.8", ngImport: i0, type: NgxEditorService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.8", ngImport: i0, type: NgxEditorService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: () => [{ type: i1.NgxEditorServiceConfig, decorators: [{
                    type: Optional
                }] }] });
export const provideMyServiceOptions = (config) => {
    return {
        locals: config.locals ?? {},
        icons: config.icons ?? {},
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdG9yLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZWRpdG9yL3NyYy9saWIvZWRpdG9yLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHckQsT0FBTyxNQUFNLE1BQU0sVUFBVSxDQUFDO0FBRTlCLE9BQU8sSUFBSSxNQUFNLFNBQVMsQ0FBQzs7O0FBTTNCLE1BQU0sT0FBTyxnQkFBZ0I7SUFHM0IsWUFBd0IsTUFBK0I7UUFDckQsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDdkIsQ0FBQztJQUVELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsT0FBTyxDQUFDLElBQVk7UUFDbEIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUUsQ0FBQzs4R0FiVSxnQkFBZ0I7a0hBQWhCLGdCQUFnQixjQUZmLE1BQU07OzJGQUVQLGdCQUFnQjtrQkFINUIsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7OzBCQUljLFFBQVE7O0FBYXZCLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHLENBQUMsTUFBd0IsRUFBMEIsRUFBRTtJQUMxRixPQUFPO1FBQ0wsTUFBTSxFQUFFLE1BQU0sQ0FBQyxNQUFNLElBQUksRUFBRTtRQUMzQixLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssSUFBSSxFQUFFO0tBQzFCLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOZ3hFZGl0b3JDb25maWcgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCBMb2NhbHMgZnJvbSAnLi9Mb2NhbHMnO1xuaW1wb3J0IHsgTmd4RWRpdG9yU2VydmljZUNvbmZpZyB9IGZyb20gJy4vZWRpdG9yLWNvbmZpZy5zZXJ2aWNlJztcbmltcG9ydCBJY29uIGZyb20gJy4vaWNvbnMnO1xuaW1wb3J0IHsgSFRNTCB9IGZyb20gJy4vdHJ1c3RlZFR5cGVzVXRpbCc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBOZ3hFZGl0b3JTZXJ2aWNlIHtcbiAgY29uZmlnOiBOZ3hFZGl0b3JTZXJ2aWNlQ29uZmlnO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIGNvbmZpZz86IE5neEVkaXRvclNlcnZpY2VDb25maWcpIHtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgfVxuXG4gIGdldCBsb2NhbHMoKTogTG9jYWxzIHtcbiAgICByZXR1cm4gbmV3IExvY2Fscyh0aGlzLmNvbmZpZy5sb2NhbHMpO1xuICB9XG5cbiAgZ2V0SWNvbihpY29uOiBzdHJpbmcpOiBIVE1MIHtcbiAgICByZXR1cm4gdGhpcy5jb25maWcuaWNvbnNbaWNvbl0gPyB0aGlzLmNvbmZpZy5pY29uc1tpY29uXSA6IEljb24uZ2V0KGljb24pO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBwcm92aWRlTXlTZXJ2aWNlT3B0aW9ucyA9IChjb25maWc/OiBOZ3hFZGl0b3JDb25maWcpOiBOZ3hFZGl0b3JTZXJ2aWNlQ29uZmlnID0+IHtcbiAgcmV0dXJuIHtcbiAgICBsb2NhbHM6IGNvbmZpZy5sb2NhbHMgPz8ge30sXG4gICAgaWNvbnM6IGNvbmZpZy5pY29ucyA/PyB7fSxcbiAgfTtcbn07XG4iXX0=