import Mark from './Mark';
import Blockquote from './Blockquote';
import HorizontalRule from './HorizontalRule';
import ListItem from './ListItem';
import Heading from './Heading';
import TextAlign from './TextAlign';
import Link from './Link';
import Image from './Image';
import TextColor from './TextColor';
import FormatClear from './FormatClear';
import Indent from './Indent';
import History from './History';
export const STRONG = new Mark('strong');
export const EM = new Mark('em');
export const CODE = new Mark('code');
export const UNDERLINE = new Mark('u');
export const STRIKE = new Mark('s');
export const BLOCKQUOTE = new Blockquote();
export const HORIZONTAL_RULE = new HorizontalRule();
export const FORMAT_CLEAR = new FormatClear();
export const UL = new ListItem(true);
export const OL = new ListItem(false);
export const H1 = new Heading(1);
export const H2 = new Heading(2);
export const H3 = new Heading(3);
export const H4 = new Heading(4);
export const H5 = new Heading(5);
export const H6 = new Heading(6);
export const ALIGN_LEFT = new TextAlign('left');
export const ALIGN_CENTER = new TextAlign('center');
export const ALIGN_RIGHT = new TextAlign('right');
export const ALIGN_JUSTIFY = new TextAlign('justify');
export const LINK = new Link();
export const IMAGE = new Image();
export const TEXT_COLOR = new TextColor('text_color', 'color');
export const TEXT_BACKGROUND_COLOR = new TextColor('text_background_color', 'backgroundColor');
export const INDENT = new Indent('increase');
export const OUTDENT = new Indent('decrease');
export const SUPERSCRIPT = new Mark('sup');
export const SUBSCRIPT = new Mark('sub');
export const UNDO = new History('undo');
export const REDO = new History('redo');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZWRpdG9yL3NyYy9saWIvY29tbWFuZHMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxJQUFJLE1BQU0sUUFBUSxDQUFDO0FBQzFCLE9BQU8sVUFBVSxNQUFNLGNBQWMsQ0FBQztBQUN0QyxPQUFPLGNBQWMsTUFBTSxrQkFBa0IsQ0FBQztBQUM5QyxPQUFPLFFBQVEsTUFBTSxZQUFZLENBQUM7QUFDbEMsT0FBTyxPQUFPLE1BQU0sV0FBVyxDQUFDO0FBQ2hDLE9BQU8sU0FBUyxNQUFNLGFBQWEsQ0FBQztBQUNwQyxPQUFPLElBQUksTUFBTSxRQUFRLENBQUM7QUFDMUIsT0FBTyxLQUFLLE1BQU0sU0FBUyxDQUFDO0FBQzVCLE9BQU8sU0FBUyxNQUFNLGFBQWEsQ0FBQztBQUNwQyxPQUFPLFdBQVcsTUFBTSxlQUFlLENBQUM7QUFDeEMsT0FBTyxNQUFNLE1BQU0sVUFBVSxDQUFDO0FBQzlCLE9BQU8sT0FBTyxNQUFNLFdBQVcsQ0FBQztBQUVoQyxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDekMsTUFBTSxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2pDLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNyQyxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDdkMsTUFBTSxDQUFDLE1BQU0sTUFBTSxHQUFHLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3BDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxJQUFJLFVBQVUsRUFBRSxDQUFDO0FBQzNDLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxJQUFJLGNBQWMsRUFBRSxDQUFDO0FBQ3BELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO0FBQzlDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsR0FBRyxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNyQyxNQUFNLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDdEMsTUFBTSxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNqQyxNQUFNLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakMsTUFBTSxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNqQyxNQUFNLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakMsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLElBQUksU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ2hELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxJQUFJLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNwRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsSUFBSSxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDbEQsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLElBQUksU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3RELE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO0FBQy9CLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO0FBQ2pDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxJQUFJLFNBQVMsQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDL0QsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsSUFBSSxTQUFTLENBQUMsdUJBQXVCLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztBQUMvRixNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsSUFBSSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDN0MsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLElBQUksTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQzlDLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUMzQyxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDekMsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFHLElBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3hDLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxJQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNYXJrIGZyb20gJy4vTWFyayc7XG5pbXBvcnQgQmxvY2txdW90ZSBmcm9tICcuL0Jsb2NrcXVvdGUnO1xuaW1wb3J0IEhvcml6b250YWxSdWxlIGZyb20gJy4vSG9yaXpvbnRhbFJ1bGUnO1xuaW1wb3J0IExpc3RJdGVtIGZyb20gJy4vTGlzdEl0ZW0nO1xuaW1wb3J0IEhlYWRpbmcgZnJvbSAnLi9IZWFkaW5nJztcbmltcG9ydCBUZXh0QWxpZ24gZnJvbSAnLi9UZXh0QWxpZ24nO1xuaW1wb3J0IExpbmsgZnJvbSAnLi9MaW5rJztcbmltcG9ydCBJbWFnZSBmcm9tICcuL0ltYWdlJztcbmltcG9ydCBUZXh0Q29sb3IgZnJvbSAnLi9UZXh0Q29sb3InO1xuaW1wb3J0IEZvcm1hdENsZWFyIGZyb20gJy4vRm9ybWF0Q2xlYXInO1xuaW1wb3J0IEluZGVudCBmcm9tICcuL0luZGVudCc7XG5pbXBvcnQgSGlzdG9yeSBmcm9tICcuL0hpc3RvcnknO1xuXG5leHBvcnQgY29uc3QgU1RST05HID0gbmV3IE1hcmsoJ3N0cm9uZycpO1xuZXhwb3J0IGNvbnN0IEVNID0gbmV3IE1hcmsoJ2VtJyk7XG5leHBvcnQgY29uc3QgQ09ERSA9IG5ldyBNYXJrKCdjb2RlJyk7XG5leHBvcnQgY29uc3QgVU5ERVJMSU5FID0gbmV3IE1hcmsoJ3UnKTtcbmV4cG9ydCBjb25zdCBTVFJJS0UgPSBuZXcgTWFyaygncycpO1xuZXhwb3J0IGNvbnN0IEJMT0NLUVVPVEUgPSBuZXcgQmxvY2txdW90ZSgpO1xuZXhwb3J0IGNvbnN0IEhPUklaT05UQUxfUlVMRSA9IG5ldyBIb3Jpem9udGFsUnVsZSgpO1xuZXhwb3J0IGNvbnN0IEZPUk1BVF9DTEVBUiA9IG5ldyBGb3JtYXRDbGVhcigpO1xuZXhwb3J0IGNvbnN0IFVMID0gbmV3IExpc3RJdGVtKHRydWUpO1xuZXhwb3J0IGNvbnN0IE9MID0gbmV3IExpc3RJdGVtKGZhbHNlKTtcbmV4cG9ydCBjb25zdCBIMSA9IG5ldyBIZWFkaW5nKDEpO1xuZXhwb3J0IGNvbnN0IEgyID0gbmV3IEhlYWRpbmcoMik7XG5leHBvcnQgY29uc3QgSDMgPSBuZXcgSGVhZGluZygzKTtcbmV4cG9ydCBjb25zdCBINCA9IG5ldyBIZWFkaW5nKDQpO1xuZXhwb3J0IGNvbnN0IEg1ID0gbmV3IEhlYWRpbmcoNSk7XG5leHBvcnQgY29uc3QgSDYgPSBuZXcgSGVhZGluZyg2KTtcbmV4cG9ydCBjb25zdCBBTElHTl9MRUZUID0gbmV3IFRleHRBbGlnbignbGVmdCcpO1xuZXhwb3J0IGNvbnN0IEFMSUdOX0NFTlRFUiA9IG5ldyBUZXh0QWxpZ24oJ2NlbnRlcicpO1xuZXhwb3J0IGNvbnN0IEFMSUdOX1JJR0hUID0gbmV3IFRleHRBbGlnbigncmlnaHQnKTtcbmV4cG9ydCBjb25zdCBBTElHTl9KVVNUSUZZID0gbmV3IFRleHRBbGlnbignanVzdGlmeScpO1xuZXhwb3J0IGNvbnN0IExJTksgPSBuZXcgTGluaygpO1xuZXhwb3J0IGNvbnN0IElNQUdFID0gbmV3IEltYWdlKCk7XG5leHBvcnQgY29uc3QgVEVYVF9DT0xPUiA9IG5ldyBUZXh0Q29sb3IoJ3RleHRfY29sb3InLCAnY29sb3InKTtcbmV4cG9ydCBjb25zdCBURVhUX0JBQ0tHUk9VTkRfQ09MT1IgPSBuZXcgVGV4dENvbG9yKCd0ZXh0X2JhY2tncm91bmRfY29sb3InLCAnYmFja2dyb3VuZENvbG9yJyk7XG5leHBvcnQgY29uc3QgSU5ERU5UID0gbmV3IEluZGVudCgnaW5jcmVhc2UnKTtcbmV4cG9ydCBjb25zdCBPVVRERU5UID0gbmV3IEluZGVudCgnZGVjcmVhc2UnKTtcbmV4cG9ydCBjb25zdCBTVVBFUlNDUklQVCA9IG5ldyBNYXJrKCdzdXAnKTtcbmV4cG9ydCBjb25zdCBTVUJTQ1JJUFQgPSBuZXcgTWFyaygnc3ViJyk7XG5leHBvcnQgY29uc3QgVU5ETyA9IG5ldyBIaXN0b3J5KCd1bmRvJyk7XG5leHBvcnQgY29uc3QgUkVETyA9IG5ldyBIaXN0b3J5KCdyZWRvJyk7XG4iXX0=