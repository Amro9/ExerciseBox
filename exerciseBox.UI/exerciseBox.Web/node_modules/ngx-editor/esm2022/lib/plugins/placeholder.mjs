import { Plugin, PluginKey } from 'prosemirror-state';
import { DecorationSet, Decoration } from 'prosemirror-view';
const PLACEHOLDER_CLASSNAME = 'NgxEditor__Placeholder';
const placeholderPlugin = (text) => {
    return new Plugin({
        key: new PluginKey('placeholder'),
        state: {
            init() {
                return text ?? '';
            },
            apply(tr, previousVal) {
                const placeholder = tr.getMeta('UPDATE_PLACEHOLDER') ?? previousVal;
                return placeholder;
            },
        },
        props: {
            decorations(state) {
                const { doc } = state;
                const { textContent, childCount } = doc;
                const placeholder = this.getState(state);
                if (!placeholder || childCount > 1) {
                    return DecorationSet.empty;
                }
                const decorations = [];
                const decorate = (node, pos) => {
                    if (node.type.isBlock && node.childCount === 0 && textContent.length === 0) {
                        const from = pos;
                        const to = pos + node.nodeSize;
                        const placeholderNode = Decoration.node(from, to, {
                            'class': PLACEHOLDER_CLASSNAME,
                            'data-placeholder': placeholder,
                            'data-align': node.attrs['align'] ?? null,
                        });
                        decorations.push(placeholderNode);
                    }
                    return false;
                };
                doc.descendants(decorate);
                return DecorationSet.create(doc, decorations);
            },
        },
    });
};
export default placeholderPlugin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhY2Vob2xkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZWRpdG9yL3NyYy9saWIvcGx1Z2lucy9wbGFjZWhvbGRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFlLFNBQVMsRUFBZSxNQUFNLG1CQUFtQixDQUFDO0FBQ2hGLE9BQU8sRUFBRSxhQUFhLEVBQUUsVUFBVSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHN0QsTUFBTSxxQkFBcUIsR0FBRyx3QkFBd0IsQ0FBQztBQUV2RCxNQUFNLGlCQUFpQixHQUFHLENBQUMsSUFBYSxFQUFVLEVBQUU7SUFDbEQsT0FBTyxJQUFJLE1BQU0sQ0FBQztRQUNoQixHQUFHLEVBQUUsSUFBSSxTQUFTLENBQUMsYUFBYSxDQUFDO1FBQ2pDLEtBQUssRUFBRTtZQUNMLElBQUk7Z0JBQ0YsT0FBTyxJQUFJLElBQUksRUFBRSxDQUFDO1lBQ3BCLENBQUM7WUFDRCxLQUFLLENBQUMsRUFBZSxFQUFFLFdBQW1CO2dCQUN4QyxNQUFNLFdBQVcsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLG9CQUFvQixDQUFDLElBQUksV0FBVyxDQUFDO2dCQUNwRSxPQUFPLFdBQVcsQ0FBQztZQUNyQixDQUFDO1NBQ0Y7UUFDRCxLQUFLLEVBQUU7WUFDTCxXQUFXLENBQUMsS0FBa0I7Z0JBQzVCLE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxLQUFLLENBQUM7Z0JBQ3RCLE1BQU0sRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFLEdBQUcsR0FBRyxDQUFDO2dCQUV4QyxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUV6QyxJQUFJLENBQUMsV0FBVyxJQUFJLFVBQVUsR0FBRyxDQUFDLEVBQUUsQ0FBQztvQkFDbkMsT0FBTyxhQUFhLENBQUMsS0FBSyxDQUFDO2dCQUM3QixDQUFDO2dCQUVELE1BQU0sV0FBVyxHQUFpQixFQUFFLENBQUM7Z0JBRXJDLE1BQU0sUUFBUSxHQUFHLENBQUMsSUFBcUIsRUFBRSxHQUFXLEVBQUUsRUFBRTtvQkFDdEQsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsVUFBVSxLQUFLLENBQUMsSUFBSSxXQUFXLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRSxDQUFDO3dCQUMzRSxNQUFNLElBQUksR0FBRyxHQUFHLENBQUM7d0JBQ2pCLE1BQU0sRUFBRSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO3dCQUUvQixNQUFNLGVBQWUsR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUU7NEJBQ2hELE9BQU8sRUFBRSxxQkFBcUI7NEJBQzlCLGtCQUFrQixFQUFFLFdBQVc7NEJBQy9CLFlBQVksRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLElBQUk7eUJBQzFDLENBQUMsQ0FBQzt3QkFFSCxXQUFXLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO29CQUNwQyxDQUFDO29CQUVELE9BQU8sS0FBSyxDQUFDO2dCQUNmLENBQUMsQ0FBQztnQkFFRixHQUFHLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUMxQixPQUFPLGFBQWEsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1lBQ2hELENBQUM7U0FDRjtLQUNGLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQztBQUVGLGVBQWUsaUJBQWlCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQbHVnaW4sIEVkaXRvclN0YXRlLCBQbHVnaW5LZXksIFRyYW5zYWN0aW9uIH0gZnJvbSAncHJvc2VtaXJyb3Itc3RhdGUnO1xuaW1wb3J0IHsgRGVjb3JhdGlvblNldCwgRGVjb3JhdGlvbiB9IGZyb20gJ3Byb3NlbWlycm9yLXZpZXcnO1xuaW1wb3J0IHsgTm9kZSBhcyBQcm9zZU1pcnJvck5vZGUgfSBmcm9tICdwcm9zZW1pcnJvci1tb2RlbCc7XG5cbmNvbnN0IFBMQUNFSE9MREVSX0NMQVNTTkFNRSA9ICdOZ3hFZGl0b3JfX1BsYWNlaG9sZGVyJztcblxuY29uc3QgcGxhY2Vob2xkZXJQbHVnaW4gPSAodGV4dD86IHN0cmluZyk6IFBsdWdpbiA9PiB7XG4gIHJldHVybiBuZXcgUGx1Z2luKHtcbiAgICBrZXk6IG5ldyBQbHVnaW5LZXkoJ3BsYWNlaG9sZGVyJyksXG4gICAgc3RhdGU6IHtcbiAgICAgIGluaXQoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRleHQgPz8gJyc7XG4gICAgICB9LFxuICAgICAgYXBwbHkodHI6IFRyYW5zYWN0aW9uLCBwcmV2aW91c1ZhbDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICAgICAgY29uc3QgcGxhY2Vob2xkZXIgPSB0ci5nZXRNZXRhKCdVUERBVEVfUExBQ0VIT0xERVInKSA/PyBwcmV2aW91c1ZhbDtcbiAgICAgICAgcmV0dXJuIHBsYWNlaG9sZGVyO1xuICAgICAgfSxcbiAgICB9LFxuICAgIHByb3BzOiB7XG4gICAgICBkZWNvcmF0aW9ucyhzdGF0ZTogRWRpdG9yU3RhdGUpOiBEZWNvcmF0aW9uU2V0IHtcbiAgICAgICAgY29uc3QgeyBkb2MgfSA9IHN0YXRlO1xuICAgICAgICBjb25zdCB7IHRleHRDb250ZW50LCBjaGlsZENvdW50IH0gPSBkb2M7XG5cbiAgICAgICAgY29uc3QgcGxhY2Vob2xkZXIgPSB0aGlzLmdldFN0YXRlKHN0YXRlKTtcblxuICAgICAgICBpZiAoIXBsYWNlaG9sZGVyIHx8IGNoaWxkQ291bnQgPiAxKSB7XG4gICAgICAgICAgcmV0dXJuIERlY29yYXRpb25TZXQuZW1wdHk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBkZWNvcmF0aW9uczogRGVjb3JhdGlvbltdID0gW107XG5cbiAgICAgICAgY29uc3QgZGVjb3JhdGUgPSAobm9kZTogUHJvc2VNaXJyb3JOb2RlLCBwb3M6IG51bWJlcikgPT4ge1xuICAgICAgICAgIGlmIChub2RlLnR5cGUuaXNCbG9jayAmJiBub2RlLmNoaWxkQ291bnQgPT09IDAgJiYgdGV4dENvbnRlbnQubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBjb25zdCBmcm9tID0gcG9zO1xuICAgICAgICAgICAgY29uc3QgdG8gPSBwb3MgKyBub2RlLm5vZGVTaXplO1xuXG4gICAgICAgICAgICBjb25zdCBwbGFjZWhvbGRlck5vZGUgPSBEZWNvcmF0aW9uLm5vZGUoZnJvbSwgdG8sIHtcbiAgICAgICAgICAgICAgJ2NsYXNzJzogUExBQ0VIT0xERVJfQ0xBU1NOQU1FLFxuICAgICAgICAgICAgICAnZGF0YS1wbGFjZWhvbGRlcic6IHBsYWNlaG9sZGVyLFxuICAgICAgICAgICAgICAnZGF0YS1hbGlnbic6IG5vZGUuYXR0cnNbJ2FsaWduJ10gPz8gbnVsbCxcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBkZWNvcmF0aW9ucy5wdXNoKHBsYWNlaG9sZGVyTm9kZSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9O1xuXG4gICAgICAgIGRvYy5kZXNjZW5kYW50cyhkZWNvcmF0ZSk7XG4gICAgICAgIHJldHVybiBEZWNvcmF0aW9uU2V0LmNyZWF0ZShkb2MsIGRlY29yYXRpb25zKTtcbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBwbGFjZWhvbGRlclBsdWdpbjtcbiJdfQ==