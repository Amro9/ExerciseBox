import { ElementRef, OnDestroy, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { NgxEditorService } from '../../../editor.service';
import { MenuService } from '../menu.service';
import { TBHeadingItems } from '../../../types';
import * as i0 from "@angular/core";
export declare class DropdownComponent implements OnInit, OnDestroy {
    private ngxeService;
    private menuService;
    private el;
    private editorView;
    private updateSubscription;
    group: string;
    items: TBHeadingItems[];
    isDropdownOpen: boolean;
    disabledItems: string[];
    activeItem: string | null;
    constructor(ngxeService: NgxEditorService, menuService: MenuService, el: ElementRef);
    get isSelected(): boolean;
    get isDropdownDisabled(): boolean;
    onDocumentClick(target: Node): void;
    getName(key: string): Observable<string>;
    getIsDropdownActive(item: string): boolean;
    toggleDropdown(): void;
    onToggleDropdownMouseClick(e: MouseEvent): void;
    onToggleDropdownKeydown(): void;
    trackByIndex(index: number): number;
    selectItem(item: TBHeadingItems): void;
    onDropdownItemMouseClick(e: MouseEvent, item: TBHeadingItems): void;
    onDropdownItemKeydown(event: Event, item: TBHeadingItems): void;
    private update;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DropdownComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DropdownComponent, "ngx-dropdown", never, { "group": { "alias": "group"; "required": false; }; "items": { "alias": "items"; "required": false; }; }, {}, never, never, false, never>;
}
