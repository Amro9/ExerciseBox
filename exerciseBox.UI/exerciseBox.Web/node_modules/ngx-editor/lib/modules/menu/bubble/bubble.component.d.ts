import { OnDestroy, OnInit } from '@angular/core';
import { SafeHtml } from '@angular/platform-browser';
import { Observable } from 'rxjs';
import Editor from '../../../Editor';
import { TBItems } from '../../../types';
import { SanitizeHtmlPipe } from '../../../pipes/sanitize/sanitize-html.pipe';
import { NgxEditorService } from '../../../editor.service';
import * as i0 from "@angular/core";
export declare class BubbleComponent implements OnInit, OnDestroy {
    private sanitizeHTML;
    private ngxeService;
    constructor(sanitizeHTML: SanitizeHtmlPipe, ngxeService: NgxEditorService);
    private get view();
    editor: Editor;
    private updateSubscription;
    execulableItems: TBItems[];
    activeItems: TBItems[];
    toolbar: TBItems[][];
    toggleCommands: TBItems[];
    getIcon(name: TBItems): SafeHtml;
    getTitle(name: string): Observable<string>;
    trackByIndex(index: number): number;
    onClick(e: MouseEvent, commandName: TBItems): void;
    private update;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BubbleComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BubbleComponent, "ngx-bubble", never, { "editor": { "alias": "editor"; "required": false; }; }, {}, never, never, false, never>;
}
